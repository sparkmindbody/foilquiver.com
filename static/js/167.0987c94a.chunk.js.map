{"version":3,"file":"static/js/167.0987c94a.chunk.js","mappings":"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","sources":["src/hooks/useSortedFoils.ts","src/utils/sorting.ts","src/components/FoilsTable.tsx","src/components/ComparisonControls.tsx","src/constants/spacing.ts","src/components/ComparisonView.tsx","src/components/Footer.tsx","src/components/SEOHead.tsx","src/screens/BrowseScreen.tsx","src/hooks/useSearchFoils.ts","src/hooks/useComparison.ts"],"sourcesContent":["import { useState, useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { sortProducts } from '../utils/sorting';\n\nexport type SortField = 'brand' | 'series' | 'model' | 'price' | 'area' | 'wingspan' | 'aspectRatio' | 'cord' | 'type' | 'link';\nexport type SortDirection = 'asc' | 'desc';\n\nexport interface SortOption {\n  field: SortField;\n  direction: SortDirection;\n}\n\nexport function useSortedFoils(foils: BaseProduct[]) {\n  const [sortOption, setSortOption] = useState<SortOption>({\n    field: 'area',\n    direction: 'asc'\n  });\n\n  const sortedFoils = useMemo(() => {\n    return sortProducts(foils, sortOption.field, sortOption.direction);\n  }, [foils, sortOption]);\n\n  return {\n    sortOption,\n    setSortOption,\n    sortedFoils\n  };\n} ","import { BaseProduct } from '../types/scraper';\nimport { SortField, SortDirection } from '../hooks/useSortedFoils';\n\nexport function sortProducts(\n  products: BaseProduct[],\n  field: SortField,\n  direction: SortDirection\n): BaseProduct[] {\n  return [...products].sort((a, b) => {\n    let valueA: string | number;\n    let valueB: string | number;\n\n    if (field === 'brand' || field === 'series' || field === 'model' || field === 'type') {\n      valueA = a[field].toLowerCase();\n      valueB = b[field].toLowerCase();\n    } else if (field === 'price') {\n      valueA = a.price || 0;\n      valueB = b.price || 0;\n    } else if (field in a.specs) {\n      valueA = a.specs[field as keyof typeof a.specs] || 0;\n      valueB = b.specs[field as keyof typeof b.specs] || 0;\n    } else {\n      valueA = '';\n      valueB = '';\n    }\n    \n    const multiplier = direction === 'asc' ? 1 : -1;\n    \n    if (typeof valueA === 'string' && typeof valueB === 'string') {\n      return valueA.localeCompare(valueB) * multiplier;\n    }\n    if (typeof valueA === 'number' && typeof valueB === 'number') {\n      return (valueA - valueB) * multiplier;\n    }\n    return 0;\n  });\n} ","/**\n * FoilsTable Component\n * \n * IMPORTANT: Column Alignment\n * - The table uses fixed column widths for consistent layout and horizontal scrolling\n * - Each column width in headerCell must match the corresponding cell width\n * - Current widths:\n *   - Regular columns (brand, model, type, series): 150px\n *   - Number columns (area, wingspan, AR, price): 100px\n *   - Link column: 100px\n * - When modifying column styles, always update both headerCell and cell styles to maintain alignment\n * - Table has a minWidth of 1200px to ensure proper layout on all screen sizes\n */\n\nimport React from 'react';\nimport { View, Text, Pressable, ScrollView, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { SortField } from '../hooks/useSortedFoils';\nimport { colors } from '../theme/colors';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT, COLUMN_WIDTHS, getTableWidth, getContentWidth, Column } from '../constants/layout';\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  onSort: (field: SortField) => void;\n  onFoilSelect: (foil: BaseProduct) => void;\n  isSelected: (foil: BaseProduct) => boolean;\n  sortOption: { field: SortField; ascending: boolean };\n  columns: Column[];\n  filters: {\n    brands: string[];\n    series: string[];\n    type: string[];\n  };\n}\n\nconst DEFAULT_COLUMNS = [\n  { id: 'brand', label: 'Brand', isVisible: true },\n  { id: 'series', label: 'Series', isVisible: false },\n  { id: 'model', label: 'Model', isVisible: true },\n  { id: 'area', label: 'Area', isVisible: true },\n  { id: 'wingspan', label: 'Span', isVisible: true },\n  { id: 'aspectRatio', label: 'AR', isVisible: true },\n  { id: 'type', label: 'Type', isVisible: true },\n  { id: 'price', label: 'Price', isVisible: true },\n  { id: 'link', label: 'Link', isVisible: true },\n];\n\nexport const FoilsTable: React.FC<FoilsTableProps> = ({\n  foils,\n  onSort,\n  onFoilSelect,\n  isSelected,\n  sortOption,\n  columns,\n  filters,\n}) => {\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n\n  // Calculate total width based on visible columns\n  const tableWidth = React.useMemo(() => getTableWidth(columns), [columns]);\n\n  const renderSortIcon = (field: SortField) => {\n    const isActive = sortOption.field === field;\n    \n    return (\n      <View style={styles.sortIconContainer}>\n        <Text style={[\n          styles.sortIcon,\n          styles.sortIconUp,\n          isActive && sortOption.ascending && styles.sortIconUpActive\n        ]}>▲</Text>\n        <Text style={[\n          styles.sortIcon,\n          styles.sortIconDown,\n          isActive && !sortOption.ascending && styles.sortIconDownActive\n        ]}>▼</Text>\n      </View>\n    );\n  };\n\n  const getHeaderTextStyle = (field: SortField) => {\n    const isFiltered = \n      (field === 'brand' && filters.brands.length > 0) ||\n      (field === 'series' && filters.series.length > 0) ||\n      (field === 'type' && filters.type.length > 0);\n\n    return [\n      styles.headerText,\n      isFiltered && styles.headerTextFiltered\n    ];\n  };\n\n  const getColumnWidth = (columnId: string) => {\n    return COLUMN_WIDTHS[columnId as keyof typeof COLUMN_WIDTHS] || 100;\n  };\n\n  const renderHeaderCell = (column: typeof columns[0]) => {\n    if (!column.isVisible) return null;\n\n    const commonProps = {\n      style: [\n        styles.headerCell,\n        { width: getColumnWidth(column.id) },\n        (column.id === 'brand' && filters.brands.length > 0) && styles.headerCellFiltered,\n        (column.id === 'series' && filters.series.length > 0) && styles.headerCellFiltered,\n        (column.id === 'type' && filters.type.length > 0) && styles.headerCellFiltered,\n      ],\n    };\n\n    if (column.id === 'link') {\n      return (\n        <View {...commonProps}>\n          <Text style={[styles.headerText, styles.linkHeaderText]}>{column.label}</Text>\n        </View>\n      );\n    }\n\n    return (\n      <Pressable \n        {...commonProps}\n        onPress={() => onSort(column.id as SortField)}\n      >\n        <Text style={[\n          getHeaderTextStyle(column.id as SortField),\n          ['area', 'wingspan', 'aspectRatio', 'price'].includes(column.id) && styles.numberHeaderText\n        ]}>{column.label}</Text>\n        {renderSortIcon(column.id as SortField)}\n      </Pressable>\n    );\n  };\n\n  const renderCell = (foil: BaseProduct, column: typeof columns[0]) => {\n    if (!column.isVisible) return null;\n\n    const commonStyle = [\n      styles.cell,\n      { width: getColumnWidth(column.id) },\n    ];\n\n    switch (column.id) {\n      case 'brand':\n        return <Text style={commonStyle}>{foil.brand}</Text>;\n      case 'series':\n        return <Text style={commonStyle}>{foil.series}</Text>;\n      case 'model':\n        return <Text style={commonStyle}>{foil.model}</Text>;\n      case 'area':\n        return <Text style={commonStyle}>{foil.specs.area === 0 ? '-' : foil.specs.area}</Text>;\n      case 'wingspan':\n        return <Text style={commonStyle}>{foil.specs.wingspan === 0 ? '-' : foil.specs.wingspan}</Text>;\n      case 'aspectRatio':\n        return <Text style={commonStyle}>{!foil.specs.aspectRatio || foil.specs.aspectRatio === 0 ? '-' : foil.specs.aspectRatio.toFixed(2)}</Text>;\n      case 'type':\n        return <Text style={commonStyle}>{foil.type}</Text>;\n      case 'price':\n        return <Text style={commonStyle}>{foil.price ? `$${foil.price}` : '-'}</Text>;\n      case 'link':\n        return (\n          <View style={commonStyle}>\n            {foil.sourceUrl && (\n              <Pressable \n                onPress={(e) => {\n                  e.stopPropagation();\n                  window.open(foil.sourceUrl, '_blank');\n                }}\n                style={({ pressed }) => [\n                  styles.linkButton,\n                  pressed && styles.linkButtonPressed\n                ]}\n              >\n                <Text style={styles.linkText}>View</Text>\n              </Pressable>\n            )}\n          </View>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView \n        horizontal \n        showsHorizontalScrollIndicator={true}\n        contentContainerStyle={[\n          styles.scrollViewContent,\n          { minWidth: getContentWidth(tableWidth, width, isMobile) }\n        ]}\n        style={[\n          styles.horizontalScrollView,\n          isMobile && styles.horizontalScrollViewMobile\n        ]}\n      >\n        <View style={[\n          styles.tableContent,\n          { width: getContentWidth(tableWidth, width, isMobile) }\n        ]}>\n          <View style={[styles.tableHeader, { width: tableWidth }]}>\n            <View style={styles.headerRow}>\n              {columns.map(column => (\n                <React.Fragment key={column.id}>\n                  {renderHeaderCell(column)}\n                </React.Fragment>\n              ))}\n            </View>\n          </View>\n          <View style={styles.scrollViewContainer}>\n            <ScrollView style={styles.scrollView}>\n              {foils.map((foil, index) => (\n                <Pressable\n                  key={`${foil.brand}-${foil.model}`}\n                  onPress={() => onFoilSelect(foil)}\n                  style={({ pressed }) => [\n                    styles.row,\n                    { width: tableWidth },\n                    index % 2 === 0 && styles.rowEven,\n                    isSelected(foil) && styles.rowSelected,\n                    Platform.OS === 'web' && pressed && styles.rowHovered\n                  ]}\n                >\n                  {columns.map(column => (\n                    <React.Fragment key={column.id}>\n                      {renderCell(foil, column)}\n                    </React.Fragment>\n                  ))}\n                </Pressable>\n              ))}\n            </ScrollView>\n          </View>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    backgroundColor: colors.background.primary,\n    alignItems: 'center',\n  },\n  horizontalScrollView: {\n    flex: 1,\n    width: '100%',\n  },\n  horizontalScrollViewMobile: {\n    marginHorizontal: -CONTAINER_PADDING,\n  },\n  scrollViewContent: {\n    flexGrow: 0,\n  },\n  tableContent: {\n    flex: 1,\n    backgroundColor: colors.background.primary,\n  },\n  tableHeader: {\n    backgroundColor: colors.background.secondary,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.primary,\n  },\n  headerRow: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.secondary,\n  },\n  headerCell: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12,\n    borderRightWidth: 1,\n    borderRightColor: colors.border,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  headerText: {\n    color: colors.text.secondary,\n    fontWeight: '600',\n    fontSize: 16,\n  },\n  headerTextFiltered: {\n    color: colors.primary,\n  },\n  row: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  rowEven: {\n    backgroundColor: colors.background.secondary,\n  },\n  rowSelected: {\n    backgroundColor: `${colors.primary}15`,\n  },\n  rowHovered: {\n    backgroundColor: `${colors.primary}10`,\n  },\n  cell: {\n    color: colors.text.primary,\n    fontSize: 14,\n    padding: 12,\n    borderRightWidth: 1,\n    borderRightColor: colors.border,\n  },\n  modelCell: {\n    width: 150,\n  },\n  typeCell: {\n    width: 80,\n  },\n  seriesCell: {\n    width: 120,\n  },\n  numberCell: {\n    width: 80,\n    textAlign: 'right',\n  },\n  priceCell: {\n    width: 105,\n    textAlign: 'right',\n  },\n  numberHeaderCell: {\n    width: 80,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    gap: 4,\n  },\n  priceHeaderCell: {\n    width: 105,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    gap: 4,\n  },\n  numberHeaderText: {\n    textAlign: 'left',\n    flex: 1,\n  },\n  linkCell: {\n    width: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRightWidth: 0,\n    borderTopRightRadius: Platform.OS === 'web' ? 0 : 8,\n    borderBottomRightRadius: Platform.OS === 'web' ? 0 : 8,\n  },\n  linkHeaderCell: {\n    width: 80,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRightWidth: 0,\n    borderTopRightRadius: Platform.OS === 'web' ? 0 : 8,\n  },\n  linkHeaderText: {\n    textAlign: 'center',\n  },\n  linkButton: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    minWidth: 44,\n    alignItems: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  linkButtonPressed: {\n    opacity: 0.8,\n  },\n  linkText: {\n    color: colors.background.primary,\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  sortIconContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: 28,\n    justifyContent: 'center',\n    width: 16,\n    gap: 2,\n  },\n  sortIcon: {\n    color: colors.text.muted,\n    fontSize: 12,\n    width: 12,\n    height: 10,\n    lineHeight: 10,\n    textAlign: 'center',\n  },\n  sortIconUp: {\n    marginBottom: 0,\n  },\n  sortIconDown: {\n    marginTop: 0,\n  },\n  sortIconUpActive: {\n    color: colors.primary,\n    fontSize: 13,\n  },\n  sortIconDownActive: {\n    color: colors.primary,\n    fontSize: 13,\n  },\n  scrollViewContainer: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  headerCellFiltered: {\n    borderBottomWidth: 2,\n    borderBottomColor: colors.primary,\n  },\n});\n","import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { spacing } from '../constants/spacing';\nimport { colors } from '../theme/colors';\n\ninterface ComparisonControlsProps {\n  selectedFoils: BaseProduct[];\n  onCompareSelected: () => void;\n  onExitCompare: () => void;\n  onClearSelection: () => void;\n  isComparisonView?: boolean;\n}\n\nconst WebWrapper = Platform.select({\n  web: ({ children }: { children: React.ReactNode }) => (\n    <div style={{\n      position: 'fixed',\n      bottom: 64,  // 48px footer height + 16px spacing\n      left: 0,\n      right: 0,\n      zIndex: 2000,\n      pointerEvents: 'none',\n    }}>\n      <div style={{ \n        pointerEvents: 'auto', \n        display: 'flex', \n        justifyContent: 'flex-end', \n        paddingRight: spacing.LARGE,\n        paddingBottom: 0,\n      }}>\n        {children}\n      </div>\n    </div>\n  ),\n  default: ({ children }: { children: React.ReactNode }) => <>{children}</>,\n});\n\nconst ComparisonControls = ({ selectedFoils, onCompareSelected, onExitCompare, onClearSelection, isComparisonView }: ComparisonControlsProps) => {\n  // Only show controls if there are selected foils or we're in comparison view\n  if (selectedFoils.length === 0 && !isComparisonView) {\n    return null;\n  }\n\n  const content = !isComparisonView ? (\n    <View style={styles.comparisonBar}>\n      <View style={styles.buttonGroup}>\n        <Pressable\n          style={[styles.button, styles.clearButton]}\n          onPress={onClearSelection}\n        >\n          <Text style={[styles.buttonText, styles.clearButtonText]}>Clear</Text>\n        </Pressable>\n        <Pressable\n          style={[styles.button, selectedFoils.length < 2 && styles.buttonDisabled]}\n          onPress={onCompareSelected}\n          disabled={selectedFoils.length < 2}\n        >\n          <Text style={styles.buttonText}>Compare</Text>\n        </Pressable>\n      </View>\n    </View>\n  ) : (\n    <View style={styles.comparisonBar}>\n      <Pressable\n        style={[styles.button, styles.cancelButton]}\n        onPress={onExitCompare}\n      >\n        <Text style={styles.buttonText}>Back</Text>\n      </Pressable>\n    </View>\n  );\n\n  return Platform.OS === 'web' ? (\n    <WebWrapper>{content}</WebWrapper>\n  ) : (\n    <View style={styles.container}>\n      {content}\n    </View>\n  );\n};\n\nexport default ComparisonControls;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    paddingBottom: 8,\n    backgroundColor: colors.background.secondary,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n  },\n  comparisonBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    gap: spacing.MEDIUM,\n    backgroundColor: 'transparent',\n  },\n  floatingButton: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    gap: spacing.MEDIUM,\n  },\n  button: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonDisabled: {\n    backgroundColor: colors.text.muted,\n    opacity: 0.5,\n  },\n  clearButton: {\n    backgroundColor: colors.background.primary,\n    borderWidth: 1,\n    borderColor: colors.secondary,\n  },\n  cancelButton: {\n    backgroundColor: colors.secondary,\n  },\n  buttonText: {\n    color: colors.background.primary,\n    fontWeight: '600',\n    fontSize: 14,\n  },\n  selectionText: {\n    fontSize: 14,\n    color: colors.text.secondary,\n    marginRight: spacing.MEDIUM,\n  },\n  selectedCount: {\n    color: colors.text.secondary,\n    fontSize: 16,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  compareButton: {\n    backgroundColor: colors.primary,\n  },\n  compareButtonText: {\n    color: colors.background.primary,\n  },\n  clearButtonText: {\n    color: colors.secondary,\n  }\n}); ","export const spacing = {\n  SMALL: 8,\n  MEDIUM: 12,\n  LARGE: 16,\n  XLARGE: 24,\n}; ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FoilsTable } from './FoilsTable';\nimport { BaseProduct } from '../types/scraper';\nimport { SortField } from '../hooks/useSortedFoils';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\n\ninterface ComparisonViewProps {\n  foils: BaseProduct[];\n  onClose?: () => void;\n  onCompare?: () => void;\n  columns: { id: string; label: string; isVisible: boolean; }[];\n}\n\nconst ComparisonView = ({ foils, onClose, onCompare, columns }: ComparisonViewProps) => {\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(foils);\n  \n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleSelect = () => {};\n  const isSelected = () => false;\n\n  // Empty filters for comparison view\n  const filters = {\n    brands: [],\n    series: [],\n    type: []\n  };\n\n  return (\n    <View style={styles.container}>\n      <FoilsTable\n        foils={sortedFoils}\n        onSort={handleSort}\n        onFoilSelect={handleSelect}\n        isSelected={isSelected}\n        sortOption={{\n          field: sortOption.field,\n          ascending: sortOption.direction === 'asc'\n        }}\n        columns={columns}\n        filters={filters}\n      />\n    </View>\n  );\n};\n\nexport default ComparisonView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  }\n});","import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { colors } from '../theme/colors';\n\nexport default function Footer() {\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { width } = useWindowDimensions();\n  const isMobile = width < 768;\n\n  return (\n    <View style={[styles.container, isMobile && styles.containerMobile]}>\n      <View style={[styles.content, isMobile && styles.contentMobile]}>\n        <View style={[styles.linkGroup, isMobile && styles.linkGroupMobile]}>\n          <Pressable onPress={() => navigation.navigate('Terms')}>\n            <Text style={styles.link}>Terms of Service</Text>\n          </Pressable>\n          <Text style={styles.separator}>•</Text>\n          <Pressable onPress={() => navigation.navigate('Privacy')}>\n            <Text style={styles.link}>Privacy Policy</Text>\n          </Pressable>\n          <Text style={styles.separator}>•</Text>\n          <Pressable onPress={() => navigation.navigate('Contact')}>\n            <Text style={styles.link}>Contact Us</Text>\n          </Pressable>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.background.primary,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n    padding: 16,\n  },\n  containerMobile: {\n    padding: 12,\n  },\n  content: {\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  contentMobile: {\n    flexDirection: 'column',\n    gap: 8,\n  },\n  linkGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n  },\n  linkGroupMobile: {\n    gap: 8,\n  },\n  link: {\n    color: colors.text.secondary,\n    fontSize: 14,\n  },\n  separator: {\n    color: colors.text.muted,\n    fontSize: 14,\n  },\n}); ","import { Helmet } from 'react-helmet-async';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  canonicalUrl?: string;\n  imageUrl?: string;\n}\n\nexport const SEOHead: React.FC<SEOHeadProps> = ({\n  title,\n  description,\n  canonicalUrl,\n  imageUrl\n}) => {\n  const siteTitle = 'FoilQuiver';\n  const fullTitle = `${title} | ${siteTitle}`;\n  \n  return (\n    <Helmet>\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      {imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n      \n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      {imageUrl && <meta name=\"twitter:image\" content={imageUrl} />}\n    </Helmet>\n  );\n}; ","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, Platform } from 'react-native';\nimport type { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { useFoils } from '../hooks/useFoils';\nimport { useSearchFoils } from '../hooks/useSearchFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { useSortedFoils, SortField, SortOption } from '../hooks/useSortedFoils';\nimport { useComparison } from '../hooks/useComparison';\nimport { FoilsTable } from '../components/FoilsTable';\nimport ComparisonControls from '../components/ComparisonControls';\nimport ComparisonView from '../components/ComparisonView';\nimport Footer from '../components/Footer';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { SEOHead } from '../components/SEOHead';\nimport { RootStackParamList } from '../types/navigation';\nimport { colors } from '../theme/colors';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Browse'> & {\n  filters: {\n    brands: string[];\n    series: string[];\n    type: string[];\n  };\n  onFilterChange: (type: keyof FilterOptions, value: string) => void;\n  columns: { id: string; label: string; isVisible: boolean; }[];\n};\n\nconst CONTAINER_PADDING = 24;\n\nexport default function BrowseScreen({ route, navigation, filters, onFilterChange, columns }: Props) {\n  const { foils, loading, error, refreshFoils } = useFoils();\n  const [isComparisonView, setIsComparisonView] = useState(false);\n  const { filteredFoils, filterOptions } = useFilteredFoils(foils, filters);\n\n  const { searchedFoils } = useSearchFoils(filteredFoils, route.params?.searchQuery || '');\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(searchedFoils);\n  const { \n    selectedFoils,\n    toggleFoilSelection,\n    isSelected,\n    clearSelection\n  } = useComparison();\n\n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleCompareSelected = () => {\n    setIsComparisonView(true);\n  };\n\n  const handleExitCompare = () => {\n    setIsComparisonView(false);\n  };\n\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return <Text style={styles.error}>{error}</Text>;\n  }\n\n  return (\n    <View style={styles.container}>\n      <SEOHead\n        title=\"FoilQuiver - Browse and compare hydrofoils\"\n        description={`Compare ${foils.length} hydrofoils across ${filterOptions.brands.length} brands. Filter by type, brand, and specifications to find your perfect foil.`}\n        canonicalUrl=\"https://foilquiver.com/browse\"\n      />\n      <View style={styles.content}>\n        <View style={styles.tableContainer}>\n          {isComparisonView ? (\n            <ComparisonView \n              foils={selectedFoils} \n              onClose={handleExitCompare}\n              onCompare={() => {}}\n              columns={columns}\n            />\n          ) : (\n            <FoilsTable\n              foils={sortedFoils}\n              onSort={handleSort}\n              onFoilSelect={toggleFoilSelection}\n              isSelected={isSelected}\n              sortOption={{\n                field: sortOption.field,\n                ascending: sortOption.direction === 'asc'\n              }}\n              columns={columns}\n              filters={filters}\n            />\n          )}\n        </View>\n        <ComparisonControls\n          selectedFoils={selectedFoils}\n          onCompareSelected={handleCompareSelected}\n          onExitCompare={handleExitCompare}\n          onClearSelection={clearSelection}\n          isComparisonView={isComparisonView}\n        />\n      </View>\n      <Footer />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background.primary,\n  },\n  content: {\n    flex: 1,\n    paddingHorizontal: CONTAINER_PADDING,\n    width: '100%',\n    alignItems: 'flex-start',\n  },\n  tableContainer: {\n    flex: 1,\n    width: '100%',\n  },\n  error: {\n    color: 'red',\n    padding: 16,\n    textAlign: 'center',\n  },\n}); ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useSearchFoils(foils: BaseProduct[], searchQuery: string) {\n  const searchedFoils = useMemo(() => {\n    if (!searchQuery.trim()) {\n      return foils;\n    }\n\n    const query = searchQuery.toLowerCase().trim();\n    return foils.filter(foil => {\n      const searchableFields = [\n        foil.brand,\n        foil.model,\n        foil.series,\n        foil.specs.area.toString(),\n        foil.specs.wingspan.toString(),\n        foil.specs.aspectRatio.toString(),\n      ];\n\n      return searchableFields.some(field => \n        field.toLowerCase().includes(query)\n      );\n    });\n  }, [foils, searchQuery]);\n\n  return { searchedFoils };\n} ","import { useState, useCallback } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useComparison() {\n  const [selectedFoils, setSelectedFoils] = useState<BaseProduct[]>([]);\n\n  const toggleFoilSelection = useCallback((foil: BaseProduct) => {\n    setSelectedFoils(prev => {\n      const isAlreadySelected = prev.some(f => f.model === foil.model && f.brand === foil.brand);\n      if (isAlreadySelected) {\n        return prev.filter(f => !(f.model === foil.model && f.brand === foil.brand));\n      }\n      return [...prev, foil];\n    });\n  }, []);\n\n  const isSelected = useCallback((foil: BaseProduct) => {\n    return selectedFoils.some(f => f.model === foil.model && f.brand === foil.brand);\n  }, [selectedFoils]);\n\n  const clearSelection = useCallback(() => {\n    setSelectedFoils([]);\n  }, []);\n\n  return {\n    selectedFoils,\n    toggleFoilSelection,\n    isSelected,\n    clearSelection,\n  };\n} "],"names":["useSortedFoils","foils","_useState","useState","field","direction","_useState2","_slicedToArray","sortOption","setSortOption","sortedFoils","useMemo","products","_toConsumableArray","sort","a","b","valueA","valueB","toLowerCase","price","specs","multiplier","localeCompare","FoilsTable","onSort","onFoilSelect","isSelected","columns","filters","width","useWindowDimensions","isMobile","MOBILE_BREAKPOINT","tableWidth","React","getTableWidth","renderSortIcon","isActive","_jsxs","View","style","styles","sortIconContainer","children","_jsx","Text","sortIcon","sortIconUp","ascending","sortIconUpActive","sortIconDown","sortIconDownActive","getHeaderTextStyle","isFiltered","brands","length","series","type","headerText","headerTextFiltered","getColumnWidth","columnId","COLUMN_WIDTHS","renderHeaderCell","column","isVisible","commonProps","headerCell","id","headerCellFiltered","Object","assign","linkHeaderText","label","Pressable","onPress","includes","numberHeaderText","renderCell","foil","commonStyle","cell","brand","model","area","wingspan","aspectRatio","toFixed","sourceUrl","e","stopPropagation","window","open","pressed","linkButton","linkButtonPressed","linkText","container","ScrollView","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","scrollViewContent","minWidth","getContentWidth","horizontalScrollView","horizontalScrollViewMobile","tableContent","tableHeader","headerRow","map","scrollViewContainer","scrollView","index","row","rowEven","rowSelected","rowHovered","StyleSheet","create","flex","backgroundColor","colors","background","primary","alignItems","marginHorizontal","CONTAINER_PADDING","flexGrow","secondary","borderBottomWidth","borderBottomColor","flexDirection","justifyContent","padding","borderRightWidth","borderRightColor","border","cursor","color","text","fontWeight","fontSize","modelCell","typeCell","seriesCell","numberCell","textAlign","priceCell","numberHeaderCell","gap","priceHeaderCell","linkCell","borderTopRightRadius","borderBottomRightRadius","linkHeaderCell","paddingHorizontal","paddingVertical","borderRadius","opacity","height","muted","lineHeight","marginBottom","marginTop","WebWrapper","position","bottom","left","right","zIndex","pointerEvents","display","paddingRight","paddingBottom","ComparisonControls","selectedFoils","onCompareSelected","onExitCompare","onClearSelection","isComparisonView","content","comparisonBar","button","cancelButton","buttonText","buttonGroup","clearButton","clearButtonText","buttonDisabled","disabled","borderTopWidth","borderTopColor","floatingButton","alignSelf","boxShadow","borderWidth","borderColor","selectionText","marginRight","selectedCount","buttonContainer","compareButton","compareButtonText","ComparisonView","onClose","onCompare","prev","handleSelect","Footer","navigation","useNavigation","containerMobile","contentMobile","linkGroup","linkGroupMobile","navigate","link","separator","maxWidth","SEOHead","_ref","title","description","canonicalUrl","imageUrl","fullTitle","Helmet","name","rel","href","property","BrowseScreen","route","onFilterChange","loading","error","refreshFoils","useFoils","setIsComparisonView","filteredFoils","filterOptions","useFilteredFoils","searchedFoils","searchQuery","trim","query","filter","toString","some","useSearchFoils","params","toggleFoilSelection","clearSelection","setSelectedFoils","useCallback","f","concat","useComparison","handleExitCompare","LoadingIndicator","tableContainer","handleCompareSelected"],"sourceRoot":""}