{"version":3,"file":"static/js/components.00bcec73.chunk.js","mappings":"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","sources":["src/components/ComparisonControls.tsx","src/components/ComparisonView.tsx","src/components/ErrorMessage.tsx","src/components/FilterPanel.tsx","src/components/FilterControls.tsx","src/components/FoilsTable.tsx","src/components/Footer.tsx","src/components/SEOHead.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { spacing } from '../constants/spacing';\n\ninterface ComparisonControlsProps {\n  selectedFoils: BaseProduct[];\n  onCompareSelected: () => void;\n  onExitCompare: () => void;\n  onClearSelection: () => void;\n  isComparisonView?: boolean;\n}\n\nconst WebWrapper = Platform.select({\n  web: ({ children }: { children: React.ReactNode }) => (\n    <div style={{\n      position: 'fixed',\n      bottom: 50,\n      left: 0,\n      right: 0,\n      zIndex: 1000,\n      pointerEvents: 'none',\n    }}>\n      <div style={{ pointerEvents: 'auto', display: 'flex', justifyContent: 'flex-end', paddingRight: spacing.LARGE }}>\n        {children}\n      </div>\n    </div>\n  ),\n  default: ({ children }: { children: React.ReactNode }) => <>{children}</>,\n});\n\nconst ComparisonControls = ({ selectedFoils, onCompareSelected, onExitCompare, onClearSelection, isComparisonView }: ComparisonControlsProps) => {\n  // Only show controls if there are selected foils or we're in comparison view\n  if (selectedFoils.length === 0 && !isComparisonView) {\n    return null;\n  }\n\n  const content = !isComparisonView ? (\n    <View style={styles.comparisonBar}>\n      <Text style={styles.selectionText}>\n        Selected: {selectedFoils.length}\n      </Text>\n      <View style={styles.buttonGroup}>\n        <Pressable\n          style={[styles.button, styles.clearButton]}\n          onPress={onClearSelection}\n        >\n          <Text style={styles.buttonText}>Clear</Text>\n        </Pressable>\n        <Pressable\n          style={[styles.button, selectedFoils.length < 2 && styles.buttonDisabled]}\n          onPress={onCompareSelected}\n          disabled={selectedFoils.length < 2}\n        >\n          <Text style={styles.buttonText}>Compare</Text>\n        </Pressable>\n      </View>\n    </View>\n  ) : (\n    <View style={styles.comparisonBar}>\n      <Pressable\n        style={[styles.button, styles.cancelButton]}\n        onPress={onExitCompare}\n      >\n        <Text style={styles.buttonText}>Back</Text>\n      </Pressable>\n    </View>\n  );\n\n  return Platform.OS === 'web' ? (\n    <WebWrapper>{content}</WebWrapper>\n  ) : (\n    <View style={styles.container}>\n      {content}\n    </View>\n  );\n};\n\nexport default ComparisonControls;\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    right: 0,\n    paddingHorizontal: spacing.LARGE,\n    pointerEvents: 'box-none',\n  },\n  comparisonBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    gap: spacing.MEDIUM,\n    backgroundColor: 'transparent',\n  },\n  floatingButton: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    gap: spacing.MEDIUM,\n  },\n  button: {\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonDisabled: {\n    backgroundColor: '#ccc',\n  },\n  clearButton: {\n    backgroundColor: '#6c757d', // A neutral gray color\n  },\n  cancelButton: {\n    backgroundColor: '#FF3B30',\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '600',\n    fontSize: 14,\n  },\n  selectionText: {\n    fontSize: 14,\n    color: '#666',\n    marginRight: spacing.MEDIUM,\n  },\n}); ","import React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport FoilsTable from './FoilsTable';\nimport { BaseProduct } from '../types/scraper';\nimport { SortOption, SortField } from '../hooks/useSortedFoils';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\n\ninterface ComparisonViewProps {\n  foils: BaseProduct[];\n  onClose?: () => void;\n  onCompare?: () => void;\n}\n\nconst ComparisonView = ({ foils, onClose, onCompare }: ComparisonViewProps) => {\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(foils);\n  \n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleSelect = () => {};\n  const isSelected = () => false;\n\n  return (\n    <View style={styles.container}>\n      <FoilsTable\n        foils={sortedFoils}\n        sortOption={sortOption}\n        onSort={handleSort}\n        isSelected={isSelected}\n        onFoilSelect={handleSelect}\n      />\n    </View>\n  );\n};\n\nexport default ComparisonView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  }\n});","import React from 'react';\nimport { View, Text, Pressable, StyleSheet } from 'react-native';\n\ninterface ErrorMessageProps {\n  message: string;\n  onRetry?: () => void;\n}\n\nexport function ErrorMessage({ message, onRetry }: ErrorMessageProps) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.message}>{message}</Text>\n      {onRetry && (\n        <Pressable\n          style={({ pressed }) => [\n            styles.retryButton,\n            pressed && styles.retryButtonPressed\n          ]}\n          onPress={onRetry}\n        >\n          <Text style={styles.retryButtonText}>Retry</Text>\n        </Pressable>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: '#ffebee',\n    borderRadius: 8,\n    margin: 16,\n  },\n  message: {\n    color: '#c62828',\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 12,\n  },\n  retryButton: {\n    backgroundColor: '#c62828',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 6,\n  },\n  retryButtonPressed: {\n    backgroundColor: '#b71c1c',\n  },\n  retryButtonText: {\n    color: '#fff',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n}); ","import React, { useState, useRef } from 'react';\nimport { View, Text, Pressable, StyleSheet, Animated, ScrollView, LayoutChangeEvent } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\ninterface FilterPanelProps {\n  filters: {\n    brands: string[];\n    series: string[];\n    type: 'front' | 'tail' | null;\n  };\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    brandSeries: Record<string, string[]>;\n  };\n  onBrandFilter: (brand: string) => void;\n  onSeriesFilter: (series: string) => void;\n  onTypeFilter: (type: 'front' | 'tail' | null) => void;\n}\n\nexport function FilterPanel({\n  filters,\n  filterOptions,\n  onBrandFilter,\n  onSeriesFilter,\n  onTypeFilter,\n}: FilterPanelProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [animation] = useState(new Animated.Value(0));\n  const [contentHeight, setContentHeight] = useState(0);\n\n  const toggleExpanded = () => {\n    const toValue = isExpanded ? 0 : 1;\n    Animated.spring(animation, {\n      toValue,\n      useNativeDriver: false,\n    }).start();\n    setIsExpanded(!isExpanded);\n  };\n\n  const handleLayout = (event: LayoutChangeEvent) => {\n    const { height } = event.nativeEvent.layout;\n    setContentHeight(height);\n  };\n\n  const animatedHeight = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, contentHeight],\n  });\n\n  return (\n    <View style={styles.container}>\n      <Pressable onPress={toggleExpanded} style={styles.header}>\n        <Text style={styles.headerText}>Filters</Text>\n        <Ionicons \n          name={isExpanded ? 'chevron-up' : 'chevron-down'} \n          size={24} \n          color=\"#666\"\n        />\n      </Pressable>\n\n      <Animated.View style={[styles.content, { height: animatedHeight }]}>\n        <View style={styles.scrollContainer} onLayout={handleLayout}>\n          <View style={styles.filterSection}>\n            <View style={styles.filterRow}>\n              <Text style={styles.filterTitle}>Type:</Text>\n              <View style={styles.filterButtons}>\n                <Pressable\n                  style={[\n                    styles.filterButton,\n                    filters.type === 'front' && styles.filterButtonActive,\n                  ]}\n                  onPress={() => onTypeFilter(filters.type === 'front' ? null : 'front')}\n                >\n                  <Text style={[\n                    styles.filterButtonText,\n                    filters.type === 'front' && styles.filterButtonTextActive,\n                  ]}>Front</Text>\n                </Pressable>\n                <Pressable\n                  style={[\n                    styles.filterButton,\n                    filters.type === 'tail' && styles.filterButtonActive,\n                  ]}\n                  onPress={() => onTypeFilter(filters.type === 'tail' ? null : 'tail')}\n                >\n                  <Text style={[\n                    styles.filterButtonText,\n                    filters.type === 'tail' && styles.filterButtonTextActive,\n                  ]}>Tail</Text>\n                </Pressable>\n              </View>\n            </View>\n          </View>\n\n          <View style={styles.filterSection}>\n            <View style={styles.filterRow}>\n              <Text style={styles.filterTitle}>Brand:</Text>\n              <View style={styles.filterButtons}>\n                {filterOptions.brands.map(brand => (\n                  <Pressable\n                    key={brand}\n                    style={[\n                      styles.filterButton,\n                      filters.brands.includes(brand) && styles.filterButtonActive,\n                    ]}\n                    onPress={() => onBrandFilter(brand)}\n                  >\n                    <Text style={[\n                      styles.filterButtonText,\n                      filters.brands.includes(brand) && styles.filterButtonTextActive,\n                    ]}>{brand}</Text>\n                  </Pressable>\n                ))}\n              </View>\n            </View>\n          </View>\n\n          <View style={styles.filterSection}>\n            <View style={styles.filterRow}>\n              <Text style={styles.filterTitle}>Series:</Text>\n              <View style={styles.filterButtons}>\n                {filterOptions.series.map(series => (\n                  <Pressable\n                    key={series}\n                    style={[\n                      styles.filterButton,\n                      filters.series.includes(series) && styles.filterButtonActive,\n                    ]}\n                    onPress={() => onSeriesFilter(series)}\n                  >\n                    <Text style={[\n                      styles.filterButtonText,\n                      filters.series.includes(series) && styles.filterButtonTextActive,\n                    ]}>{series}</Text>\n                  </Pressable>\n                ))}\n              </View>\n            </View>\n          </View>\n        </View>\n      </Animated.View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 12,\n  },\n  headerText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  content: {\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  scrollContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n  },\n  filterSection: {\n    padding: 8,\n    borderTopWidth: 1,\n    borderTopColor: '#eee',\n  },\n  filterRow: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  filterTitle: {\n    fontSize: 14,\n    color: '#666',\n    marginRight: 8,\n    minWidth: 50,\n    paddingTop: 6, // Align with filter buttons\n  },\n  filterButtons: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 6,\n  },\n  filterButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    backgroundColor: 'white',\n    borderWidth: 1,\n    borderColor: '#ddd',\n    marginBottom: 4,\n  },\n  filterButtonActive: {\n    backgroundColor: '#007AFF',\n    borderColor: '#007AFF',\n  },\n  filterButtonText: {\n    color: '#333',\n    fontSize: 13,\n  },\n  filterButtonTextActive: {\n    color: 'white',\n  },\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FilterPanel } from './FilterPanel';\nimport { FilterOptions } from '../types/filters';\n\ninterface FilterControlsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n    brandSeries: Record<string, string[]>;\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (filterType: keyof FilterOptions, values: string[]) => void;\n}\n\nexport function FilterControls({\n  filterOptions,\n  selectedBrands = [],\n  selectedSeries = [],\n  selectedTypes = [],\n  onFilterChange,\n}: FilterControlsProps) {\n  const handleBrandFilter = (brand: string) => {\n    const newBrands = selectedBrands.includes(brand)\n      ? selectedBrands.filter(b => b !== brand)\n      : [...selectedBrands, brand];\n    onFilterChange('brands', newBrands);\n  };\n\n  const handleSeriesFilter = (series: string) => {\n    const newSeries = selectedSeries.includes(series)\n      ? selectedSeries.filter(s => s !== series)\n      : [...selectedSeries, series];\n    onFilterChange('series', newSeries);\n  };\n\n  const handleTypeFilter = (type: 'front' | 'tail' | null) => {\n    onFilterChange('type', type ? [type] : []);\n  };\n\n  return (\n    <View style={styles.container}>\n      <FilterPanel\n        filters={{\n          brands: selectedBrands,\n          series: selectedSeries,\n          type: selectedTypes.length > 0 ? selectedTypes[0] as 'front' | 'tail' : null,\n        }}\n        filterOptions={filterOptions}\n        onBrandFilter={handleBrandFilter}\n        onSeriesFilter={handleSeriesFilter}\n        onTypeFilter={handleTypeFilter}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n}); ","import React, { useMemo, useEffect, useState, memo } from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform, useWindowDimensions, ScrollView } from 'react-native';\nimport { FixedSizeList as List } from 'react-window';\nimport { BaseProduct } from '../types/scraper';\nimport { SortOption, SortField } from '../hooks/useSortedFoils';\nimport { colors } from '../constants/colors';\nimport { spacing } from '../constants/spacing';\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  sortOption: SortOption;\n  onSort: (field: SortField) => void;\n  isSelected: (foil: BaseProduct) => boolean;\n  onFoilSelect: (foil: BaseProduct) => void;\n}\n\ninterface SortIndicatorProps {\n  isActive: boolean;\n  direction?: 'asc' | 'desc';\n}\n\nconst SortIndicator: React.FC<SortIndicatorProps> = ({ isActive, direction }) => {\n  const columnWidths = useColumnWidths([]);  // Empty array since SortIndicator doesn't need dynamic widths\n  const styles = useStyles(columnWidths);\n  return (\n    <View style={styles.sortIndicatorContainer}>\n      <Text style={[\n        styles.sortArrow,\n        isActive && direction === 'asc' ? styles.sortArrowActive : styles.sortArrowInactive\n      ]}>▲</Text>\n      <Text style={[\n        styles.sortArrow,\n        isActive && direction === 'desc' ? styles.sortArrowActive : styles.sortArrowInactive\n      ]}>▼</Text>\n    </View>\n  );\n};\n\nconst useColumnWidths = (foils: BaseProduct[]) => {\n  return useMemo(() => {\n    const baseWidths = {\n      brand: 100,      // Base width for \"Brand\" + sort indicator\n      series: 120,     // Base width for \"Series\" + sort indicator\n      model: 160,      // Base width for longer model names\n      wingspan: 100,   // Width for \"Wingspan\" + numbers + unit\n      area: 100,       // Width for \"Area\" + numbers + unit\n      aspectRatio: 80, // Width for \"AR\" + numbers\n      cord: 90,        // Width for \"Cord\" + numbers + unit\n      type: 80,        // Width for \"Type\" + sort indicator\n      price: 90,       // Width for \"Price\" + numbers\n      link: 100,       // Width for \"Product Link\"\n    };\n\n    // Find maximum content lengths\n    foils.forEach(foil => {\n      const brandWidth = (foil.brand?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.brand = Math.max(baseWidths.brand, brandWidth);\n      \n      const seriesWidth = (foil.series?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.series = Math.max(baseWidths.series, seriesWidth);\n      \n      const modelWidth = (foil.model?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.model = Math.max(baseWidths.model, modelWidth);\n    });\n\n    return baseWidths;\n  }, [foils]);\n};\n\nconst useStyles = (columnWidths: ReturnType<typeof useColumnWidths>) => {\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      width: '100%',\n      height: '100%',\n    },\n    horizontalScrollView: {\n      flex: 1,\n    },\n    contentContainer: {\n      flexGrow: 1,\n    },\n    headerContainer: {\n      backgroundColor: colors.LIGHT_GRAY,\n      borderBottomWidth: 1,\n      borderBottomColor: colors.BORDER,\n      position: Platform.select({\n        web: 'sticky' as any,\n        default: 'relative',\n      }),\n      top: 0,\n      zIndex: 1,\n    },\n    headerRow: {\n      flexDirection: 'row',\n    },\n    row: {\n      flexDirection: 'row',\n      borderBottomWidth: 1,\n      borderBottomColor: colors.BORDER,\n    },\n    cell: {\n      padding: spacing.MEDIUM,\n      justifyContent: 'center',\n    },\n    textCell: {\n      alignItems: 'flex-start',\n    },\n    numericCell: {\n      alignItems: 'flex-end',\n    },\n    sortIndicatorContainer: {\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 16,\n      marginLeft: spacing.SMALL,\n    },\n    sortArrow: {\n      fontSize: 8,\n      lineHeight: 8,\n      height: 8,\n      textAlign: 'center',\n    },\n    sortArrowActive: {\n      color: '#007AFF', // Use your app's primary color\n    },\n    sortArrowInactive: {\n      color: '#C7C7CC', // Light gray color for inactive state\n    },\n    headerContent: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      width: '100%',\n      paddingRight: spacing.SMALL,\n    },\n    headerNumericContent: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      width: '100%',\n      gap: spacing.SMALL,\n    },\n    headerCell: {\n      backgroundColor: colors.LIGHT_GRAY,\n      padding: spacing.SMALL,\n      borderBottomWidth: 1,\n      borderBottomColor: colors.BORDER,\n    },\n    headerText: {\n      fontWeight: 'bold',\n      color: colors.TEXT_PRIMARY,\n      flex: 1,\n      fontFamily: Platform.select({\n        web: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n        ios: '-apple-system',\n        android: 'Roboto',\n        default: 'System',\n      }),\n    },\n    text: {\n      fontFamily: Platform.select({\n        web: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n        ios: '-apple-system',\n        android: 'Roboto',\n        default: 'System',\n      }),\n    },\n    numericText: {\n      textAlign: 'right',\n      width: '100%',\n      fontFamily: Platform.select({\n        web: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n        ios: '-apple-system',\n        android: 'Roboto',\n        default: 'System',\n      }),\n    },\n    selectedRow: {\n      backgroundColor: colors.SELECTED_ROW,\n    },\n    cellContent: {\n      width: '100%',\n    },\n    link: {\n      color: colors.LINK,\n      textDecorationLine: 'underline',\n    },\n    virtualizedWrapper: Platform.select({\n      web: {\n        flex: 1,\n        width: '100%',\n        height: '100%',\n        overflowY: 'scroll' as const,\n        overflowX: 'hidden' as const,\n      },\n      default: {\n        flex: 1,\n      },\n    }),\n    tableWrapper: {\n      flex: 1,\n      overflow: 'hidden',\n    },\n    brandCell: {\n      width: columnWidths.brand,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    seriesCell: {\n      width: columnWidths.series,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    modelCell: {\n      width: columnWidths.model,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    wingspanCell: {\n      width: columnWidths.wingspan,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    areaCell: {\n      width: columnWidths.area,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    arCell: {\n      width: columnWidths.aspectRatio,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    cordCell: {\n      width: columnWidths.cord,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    typeCell: {\n      width: columnWidths.type,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    priceCell: {\n      width: columnWidths.price,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    linkCell: {\n      width: columnWidths.link,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n  });\n};\n\n// Memoize row component for better performance\nconst Row = memo(({ index, style, data }: { index: number; style: any; data: any }) => {\n  const { foils, styles, isSelected, onFoilSelect } = data;\n  const foil = foils[index];\n  const rowKey = `row-${foil.brand}-${foil.model}`.toLowerCase().replace(/\\s+/g, '-');\n  const selected = isSelected(foil);\n  \n  return (\n    <Pressable\n      key={rowKey}\n      onPress={() => onFoilSelect(foil)}\n      style={[styles.row, selected && styles.selectedRow, style]}\n    >\n      <View style={[styles.cell, styles.textCell, styles.brandCell]}>\n        <Text style={styles.text}>{foil.brand}</Text>\n      </View>\n      <View style={[styles.cell, styles.textCell, styles.seriesCell]}>\n        <Text style={styles.text}>{foil.series}</Text>\n      </View>\n      <View style={[styles.cell, styles.textCell, styles.modelCell]}>\n        <Text style={styles.text}>{foil.model}</Text>\n      </View>\n      <View style={[styles.cell, styles.numericCell, styles.wingspanCell]}>\n        <Text style={styles.numericText}>{foil.specs.wingspan || '-'}</Text>\n      </View>\n      <View style={[styles.cell, styles.numericCell, styles.areaCell]}>\n        <Text style={styles.numericText}>{foil.specs.area || '-'}</Text>\n      </View>\n      <View style={[styles.cell, styles.numericCell, styles.arCell]}>\n        <Text style={styles.numericText}>{foil.specs.aspectRatio?.toFixed(1) || '-'}</Text>\n      </View>\n      <View style={[styles.cell, styles.numericCell, styles.cordCell]}>\n        <Text style={styles.numericText}>{foil.specs.cord || '-'}</Text>\n      </View>\n      <View style={[styles.cell, styles.textCell, styles.typeCell]}>\n        <Text style={styles.text}>{foil.type}</Text>\n      </View>\n      <View style={[styles.cell, styles.numericCell, styles.priceCell]}>\n        <Text style={styles.numericText}>{foil.price ? `$${foil.price}` : '-'}</Text>\n      </View>\n      <View style={[styles.cell, styles.textCell, styles.linkCell]}>\n        <Text \n          style={[styles.text, styles.link]}\n          onPress={() => Platform.OS === 'web' ? window.open(foil.sourceUrl, '_blank') : null}\n        >\n          View\n        </Text>\n      </View>\n    </Pressable>\n  );\n});\n\nRow.displayName = 'Row';\n\n// Memoize header component\nconst TableHeader = memo(({ onSort, sortOption, styles, columnWidths }: any) => {\n  const renderHeaderContent = (text: string, field: SortField, isNumeric: boolean = false) => {\n    const isActive = sortOption.field === field;\n    return (\n      <View style={isNumeric ? styles.headerNumericContent : styles.headerContent}>\n        <Text style={[styles.headerText, isNumeric && styles.numericText]}>{text}</Text>\n        <View style={styles.sortIndicatorContainer}>\n          <Text style={[\n            styles.sortArrow,\n            isActive && sortOption.direction === 'asc' ? styles.sortArrowActive : styles.sortArrowInactive\n          ]}>▲</Text>\n          <Text style={[\n            styles.sortArrow,\n            isActive && sortOption.direction === 'desc' ? styles.sortArrowActive : styles.sortArrowInactive\n          ]}>▼</Text>\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.headerRow}>\n      <Pressable style={[styles.cell, styles.headerCell, styles.brandCell]} onPress={() => onSort('brand')}>\n        {renderHeaderContent('Brand', 'brand')}\n      </Pressable>\n      <Pressable style={[styles.cell, styles.headerCell, styles.seriesCell]} onPress={() => onSort('series')}>\n        {renderHeaderContent('Series', 'series')}\n      </Pressable>\n      <Pressable style={[styles.cell, styles.headerCell, styles.modelCell]} onPress={() => onSort('model')}>\n        {renderHeaderContent('Model', 'model')}\n      </Pressable>\n      <Pressable style={[styles.cell, styles.headerCell, styles.wingspanCell]} onPress={() => onSort('wingspan')}>\n        {renderHeaderContent('Wingspan', 'wingspan', true)}\n      </Pressable>\n      <Pressable style={[styles.cell, styles.headerCell, styles.areaCell]} onPress={() => onSort('area')}>\n        {renderHeaderContent('Area', 'area', true)}\n      </Pressable>\n      <Pressable style={[styles.cell, styles.headerCell, styles.arCell]} onPress={() => onSort('aspectRatio')}>\n        {renderHeaderContent('AR', 'aspectRatio', true)}\n      </Pressable>\n      <Pressable style={[styles.cell, styles.headerCell, styles.cordCell]} onPress={() => onSort('cord')}>\n        {renderHeaderContent('Cord', 'cord', true)}\n      </Pressable>\n      <Pressable style={[styles.cell, styles.headerCell, styles.typeCell]} onPress={() => onSort('type')}>\n        {renderHeaderContent('Type', 'type')}\n      </Pressable>\n      <Pressable style={[styles.cell, styles.headerCell, styles.priceCell]} onPress={() => onSort('price')}>\n        {renderHeaderContent('Price', 'price', true)}\n      </Pressable>\n      <View style={[styles.cell, styles.headerCell, styles.linkCell]}>\n        {renderHeaderContent('Product Link', 'link')}\n      </View>\n    </View>\n  );\n});\n\nTableHeader.displayName = 'TableHeader';\n\nconst FoilsTable = ({ foils, onSort, onFoilSelect, isSelected, sortOption }: FoilsTableProps) => {\n  const columnWidths = useColumnWidths(foils);\n  const styles = useStyles(columnWidths);\n  const { height: windowHeight } = useWindowDimensions();\n  const [tableHeight, setTableHeight] = useState(500);\n  const [headerHeight, setHeaderHeight] = useState(50);\n\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      const calculateHeight = () => {\n        const footerHeight = 60;\n        const filterHeight = 60;\n        const padding = 40;\n        const availableHeight = windowHeight - footerHeight - filterHeight - headerHeight - padding;\n        setTableHeight(Math.max(400, availableHeight));\n      };\n\n      calculateHeight();\n      window.addEventListener('resize', calculateHeight);\n      return () => window.removeEventListener('resize', calculateHeight);\n    }\n  }, [windowHeight, headerHeight]);\n\n  const getTableWidth = () => {\n    return Object.values(columnWidths).reduce((sum, width) => sum + width, 0);\n  };\n\n  const itemData = useMemo(() => ({\n    foils,\n    styles,\n    isSelected,\n    onFoilSelect\n  }), [foils, styles, isSelected, onFoilSelect]);\n\n  return (\n    <View style={styles.container}>\n      <ScrollView horizontal style={styles.horizontalScrollView} contentContainerStyle={styles.contentContainer}>\n        <View style={{ width: getTableWidth() }}>\n          <View \n            style={styles.headerContainer}\n            onLayout={(event) => {\n              const { height } = event.nativeEvent.layout;\n              setHeaderHeight(height);\n            }}\n          >\n            <TableHeader\n              onSort={onSort}\n              sortOption={sortOption}\n              styles={styles}\n              columnWidths={columnWidths}\n            />\n          </View>\n          {Platform.OS === 'web' ? (\n            <View style={styles.virtualizedWrapper}>\n              <List\n                height={tableHeight}\n                itemCount={foils.length}\n                itemSize={50}\n                width={getTableWidth()}\n                itemData={itemData}\n              >\n                {Row}\n              </List>\n            </View>\n          ) : (\n            <View style={styles.tableWrapper}>\n              {foils.map((foil, index) => (\n                <Row\n                  key={`${foil.brand}-${foil.model}`}\n                  index={index}\n                  style={{}}\n                  data={itemData}\n                />\n              ))}\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default memo(FoilsTable);","import React from 'react';\nimport { View, Text, StyleSheet, Pressable } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackNavigationProp } from '../types/navigation';\n\nconst Footer = () => {\n  const navigation = useNavigation<RootStackNavigationProp>();\n\n  return (\n    <View style={styles.container}>\n      <Pressable onPress={() => navigation.navigate('Terms')}>\n        <Text style={styles.link}>Terms of Service</Text>\n      </Pressable>\n      <Pressable onPress={() => navigation.navigate('Privacy')}>\n        <Text style={styles.link}>Privacy Policy</Text>\n      </Pressable>\n      <Pressable onPress={() => navigation.navigate('Contact')}>\n        <Text style={styles.link}>Contact Us</Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    gap: 16,\n    backgroundColor: '#f4f4f4',\n  },\n  link: {\n    color: '#333',\n    textDecorationLine: 'underline',\n  },\n});\n\nexport default Footer; ","import { Helmet } from 'react-helmet-async';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  canonicalUrl?: string;\n  imageUrl?: string;\n}\n\nexport const SEOHead: React.FC<SEOHeadProps> = ({\n  title,\n  description,\n  canonicalUrl,\n  imageUrl\n}) => {\n  const siteTitle = 'FoilQuiver';\n  const fullTitle = `${title} | ${siteTitle}`;\n  \n  return (\n    <Helmet>\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      {imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n      \n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      {imageUrl && <meta name=\"twitter:image\" content={imageUrl} />}\n    </Helmet>\n  );\n}; "],"names":["WebWrapper","_ref","children","_jsx","style","position","bottom","left","right","zIndex","pointerEvents","display","justifyContent","paddingRight","spacing","LARGE","_ref2","selectedFoils","onCompareSelected","onExitCompare","onClearSelection","isComparisonView","length","content","View","styles","comparisonBar","Pressable","button","cancelButton","onPress","Text","buttonText","_jsxs","selectionText","buttonGroup","clearButton","buttonDisabled","disabled","StyleSheet","create","container","paddingHorizontal","flexDirection","alignItems","gap","MEDIUM","backgroundColor","floatingButton","_objectSpread","alignSelf","paddingVertical","borderRadius","boxShadow","cursor","color","fontWeight","fontSize","marginRight","foils","_useSortedFoils","onClose","onCompare","useSortedFoils","sortOption","setSortOption","sortedFoils","FoilsTable","onSort","field","prev","direction","isSelected","onFoilSelect","flex","ErrorMessage","message","onRetry","pressed","retryButton","retryButtonPressed","retryButtonText","padding","margin","textAlign","marginBottom","FilterPanel","filters","filterOptions","onBrandFilter","onSeriesFilter","onTypeFilter","_useState","useState","_useState2","_slicedToArray","isExpanded","setIsExpanded","_useState3","Animated","Value","animation","_useState5","_useState6","contentHeight","setContentHeight","animatedHeight","interpolate","inputRange","outputRange","toValue","spring","useNativeDriver","start","header","headerText","Ionicons","name","size","height","scrollContainer","onLayout","event","nativeEvent","layout","filterSection","filterRow","filterTitle","filterButtons","filterButton","type","filterButtonActive","filterButtonText","filterButtonTextActive","brands","map","brand","includes","series","borderBottomWidth","borderBottomColor","overflow","borderTopWidth","borderTopColor","minWidth","paddingTop","flexWrap","borderWidth","borderColor","FilterControls","_ref$selectedBrands","selectedBrands","_ref$selectedSeries","selectedSeries","_ref$selectedTypes","selectedTypes","onFilterChange","newBrands","filter","b","concat","_toConsumableArray","newSeries","s","useColumnWidths","useMemo","baseWidths","model","wingspan","area","aspectRatio","cord","price","link","forEach","foil","_foil$brand","_foil$series","_foil$model","brandWidth","Math","max","seriesWidth","modelWidth","useStyles","columnWidths","width","horizontalScrollView","contentContainer","flexGrow","headerContainer","colors","LIGHT_GRAY","BORDER","top","headerRow","row","cell","textCell","numericCell","sortIndicatorContainer","marginLeft","SMALL","sortArrow","lineHeight","sortArrowActive","sortArrowInactive","headerContent","headerNumericContent","headerCell","TEXT_PRIMARY","fontFamily","text","numericText","selectedRow","SELECTED_ROW","cellContent","LINK","textDecorationLine","virtualizedWrapper","overflowY","overflowX","tableWrapper","brandCell","flexShrink","seriesCell","modelCell","wingspanCell","areaCell","arCell","cordCell","typeCell","priceCell","linkCell","Row","memo","_foil$specs$aspectRat","index","data","rowKey","toLowerCase","replace","selected","specs","toFixed","window","open","sourceUrl","displayName","TableHeader","_ref3","renderHeaderContent","isNumeric","arguments","undefined","isActive","_ref4","windowHeight","useWindowDimensions","tableHeight","setTableHeight","_useState4","headerHeight","setHeaderHeight","useEffect","calculateHeight","availableHeight","addEventListener","removeEventListener","getTableWidth","Object","values","reduce","sum","itemData","ScrollView","horizontal","contentContainerStyle","List","itemCount","itemSize","navigation","useNavigation","navigate","SEOHead","title","description","canonicalUrl","imageUrl","fullTitle","Helmet","rel","href","property"],"sourceRoot":""}