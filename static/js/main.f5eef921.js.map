{"version":3,"file":"static/js/main.f5eef921.js","mappings":"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","sources":[".cache|sync|/^/.//.*/.json$","src/services/productService.ts","src/hooks/useSortedFoils.ts","src/utils/sorting.ts","src/components/FilterPanel.tsx","src/components/FilterControls.tsx","src/constants/config.ts","src/utils/dataTransform.ts","src/constants/colors.ts","src/constants/spacing.ts","src/components/FoilsTable.tsx","src/components/ComparisonControls.tsx","src/components/ComparisonView.tsx","src/components/LoadingIndicator.tsx","src/components/ErrorMessage.tsx","src/screens/BrowseScreen.tsx","src/hooks/useFoils.ts","src/hooks/useSearchFoils.ts","src/hooks/useFilteredFoils.ts","src/hooks/useComparison.ts","src/components/ErrorBoundary.tsx","src/components/SearchBar.tsx","App.tsx","index.ts","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["var map = {\n\t\"./axis-foils.json\": 5404,\n\t\"./code-foils.json\": 5264,\n\t\"./kt-foils.json\": 6970,\n\t\"./uni-foil.json\": 4532\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4396;","import { BaseProduct } from '../types/scraper';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport class ProductService {\n  private static isWeb = Platform.OS === 'web';\n\n  static async getAllProducts(): Promise<BaseProduct[]> {\n    try {\n      if (this.isWeb) {\n        // Try loading from public/data first\n        try {\n          const response = await fetch('/data/foils.json');\n          if (response.ok) {\n            const products = await response.json();\n            console.log(`Loaded ${products.length} products from public/data/foils.json`);\n            return products;\n          }\n        } catch (error) {\n          console.warn('Failed to load from public/data, trying .cache directory...');\n        }\n\n        // Try loading from .cache as fallback\n        try {\n          const brands = ['Uni Foil', 'Code Foils', 'Axis Foils'];\n          const allProducts: BaseProduct[] = [];\n          \n          for (const brand of brands) {\n            try {\n              const products = require(`../../.cache/${brand.toLowerCase().replace(/\\s+/g, '-')}.json`);\n              if (products) {\n                console.log(`Loaded ${products.length} products for ${brand} from .cache`);\n                allProducts.push(...products);\n              }\n            } catch (error) {\n              console.warn(`No cache file found for ${brand}`);\n            }\n          }\n\n          if (allProducts.length > 0) {\n            return allProducts;\n          }\n        } catch (error) {\n          console.warn('Failed to load from .cache directory');\n        }\n      } else {\n        // For mobile, use AsyncStorage\n        const cached = await AsyncStorage.getItem('foils');\n        if (cached) {\n          const products = JSON.parse(cached);\n          console.log(`Loaded ${products.length} products from AsyncStorage`);\n          return products;\n        }\n      }\n    } catch (error) {\n      console.error('Error loading foils data:', error);\n    }\n    \n    console.warn('No foils data found');\n    return [];\n  }\n} ","import { useState, useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { sortProducts } from '../utils/sorting';\n\nexport type SortField = 'brand' | 'series' | 'model' | 'price' | 'area' | 'wingspan' | 'aspectRatio';\nexport type SortDirection = 'asc' | 'desc';\n\nexport interface SortOption {\n  field: SortField;\n  direction: SortDirection;\n}\n\nexport function useSortedFoils(foils: BaseProduct[]) {\n  const [sortOption, setSortOption] = useState<SortOption>({\n    field: 'area',\n    direction: 'asc'\n  });\n\n  const sortedFoils = useMemo(() => {\n    return sortProducts(foils, sortOption.field, sortOption.direction);\n  }, [foils, sortOption]);\n\n  return {\n    sortOption,\n    setSortOption,\n    sortedFoils\n  };\n} ","import { BaseProduct } from '../types/scraper';\nimport { SortField, SortDirection } from '../hooks/useSortedFoils';\n\nexport function sortProducts(\n  products: BaseProduct[],\n  field: SortField,\n  direction: SortDirection\n): BaseProduct[] {\n  return [...products].sort((a, b) => {\n    let valueA: string | number;\n    let valueB: string | number;\n\n    if (field === 'brand' || field === 'series' || field === 'model') {\n      valueA = a[field].toLowerCase();\n      valueB = b[field].toLowerCase();\n    } else if (field === 'price') {\n      valueA = a.price || 0;\n      valueB = b.price || 0;\n    } else {\n      valueA = a.specs[field];\n      valueB = b.specs[field];\n    }\n    \n    const multiplier = direction === 'asc' ? 1 : -1;\n    \n    if (typeof valueA === 'string') {\n      return valueA.localeCompare(valueB as string) * multiplier;\n    }\n    return (valueA - valueB) * multiplier;\n  });\n} ","import React, { useState } from 'react';\nimport { View, Text, Pressable, StyleSheet, Animated } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\ninterface FilterPanelProps {\n  filters: {\n    brands: string[];\n    series: string[];\n    type: 'front' | 'tail' | null;\n  };\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    brandSeries: Record<string, string[]>;\n  };\n  onBrandFilter: (brand: string) => void;\n  onSeriesFilter: (series: string) => void;\n  onTypeFilter: (type: 'front' | 'tail' | null) => void;\n}\n\nexport function FilterPanel({\n  filters,\n  filterOptions,\n  onBrandFilter,\n  onSeriesFilter,\n  onTypeFilter,\n}: FilterPanelProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [animation] = useState(new Animated.Value(0));\n\n  const toggleExpanded = () => {\n    const toValue = isExpanded ? 0 : 1;\n    Animated.spring(animation, {\n      toValue,\n      useNativeDriver: false,\n    }).start();\n    setIsExpanded(!isExpanded);\n  };\n\n  const contentHeight = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 300], // Adjust based on your content\n  });\n\n  return (\n    <View style={styles.container}>\n      <Pressable onPress={toggleExpanded} style={styles.header}>\n        <Text style={styles.headerText}>Filters</Text>\n        <Ionicons \n          name={isExpanded ? 'chevron-up' : 'chevron-down'} \n          size={24} \n          color=\"#666\"\n        />\n      </Pressable>\n\n      <Animated.View style={[styles.content, { height: contentHeight }]}>\n        <View style={styles.filterSection}>\n          <Text style={styles.filterTitle}>Type</Text>\n          <View style={styles.filterButtons}>\n            <Pressable\n              style={[\n                styles.filterButton,\n                filters.type === 'front' && styles.filterButtonActive,\n              ]}\n              onPress={() => onTypeFilter(filters.type === 'front' ? null : 'front')}\n            >\n              <Text style={[\n                styles.filterButtonText,\n                filters.type === 'front' && styles.filterButtonTextActive,\n              ]}>Front</Text>\n            </Pressable>\n            <Pressable\n              style={[\n                styles.filterButton,\n                filters.type === 'tail' && styles.filterButtonActive,\n              ]}\n              onPress={() => onTypeFilter(filters.type === 'tail' ? null : 'tail')}\n            >\n              <Text style={[\n                styles.filterButtonText,\n                filters.type === 'tail' && styles.filterButtonTextActive,\n              ]}>Tail</Text>\n            </Pressable>\n          </View>\n        </View>\n\n        <View style={styles.filterSection}>\n          <Text style={styles.filterTitle}>Brand</Text>\n          <View style={styles.filterButtons}>\n            {filterOptions.brands.map(brand => (\n              <Pressable\n                key={brand}\n                style={[\n                  styles.filterButton,\n                  filters.brands.includes(brand) && styles.filterButtonActive,\n                ]}\n                onPress={() => onBrandFilter(brand)}\n              >\n                <Text style={[\n                  styles.filterButtonText,\n                  filters.brands.includes(brand) && styles.filterButtonTextActive,\n                ]}>{brand}</Text>\n              </Pressable>\n            ))}\n          </View>\n        </View>\n\n        <View style={styles.filterSection}>\n          <Text style={styles.filterTitle}>Series</Text>\n          <View style={styles.filterButtons}>\n            {filterOptions.series.map(series => (\n              <Pressable\n                key={series}\n                style={[\n                  styles.filterButton,\n                  filters.series.includes(series) && styles.filterButtonActive,\n                ]}\n                onPress={() => onSeriesFilter(series)}\n              >\n                <Text style={[\n                  styles.filterButtonText,\n                  filters.series.includes(series) && styles.filterButtonTextActive,\n                ]}>{series}</Text>\n              </Pressable>\n            ))}\n          </View>\n        </View>\n      </Animated.View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 12,\n  },\n  headerText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  content: {\n    overflow: 'hidden',\n  },\n  filterSection: {\n    padding: 12,\n    borderTopWidth: 1,\n    borderTopColor: '#eee',\n  },\n  filterTitle: {\n    fontSize: 14,\n    marginBottom: 8,\n    color: '#666',\n  },\n  filterButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 6,\n    maxHeight: 120, // Set maximum height\n    overflow: 'scroll', // Enable scrolling if content overflows\n  },\n  filterButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    backgroundColor: 'white',\n    borderWidth: 1,\n    borderColor: '#ddd',\n    marginBottom: 4, // Add bottom margin for better spacing when wrapped\n  },\n  filterButtonActive: {\n    backgroundColor: '#007AFF',\n    borderColor: '#007AFF',\n  },\n  filterButtonText: {\n    color: '#333',\n    fontSize: 13,\n  },\n  filterButtonTextActive: {\n    color: 'white',\n  },\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FilterPanel } from './FilterPanel';\nimport { FilterOptions } from '../types/filters';\n\ninterface FilterControlsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n    brandSeries: Record<string, string[]>;\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (filterType: keyof FilterOptions, values: string[]) => void;\n}\n\nexport function FilterControls({\n  filterOptions,\n  selectedBrands = [],\n  selectedSeries = [],\n  selectedTypes = [],\n  onFilterChange,\n}: FilterControlsProps) {\n  const handleBrandFilter = (brand: string) => {\n    const newBrands = selectedBrands.includes(brand)\n      ? selectedBrands.filter(b => b !== brand)\n      : [...selectedBrands, brand];\n    onFilterChange('brands', newBrands);\n  };\n\n  const handleSeriesFilter = (series: string) => {\n    const newSeries = selectedSeries.includes(series)\n      ? selectedSeries.filter(s => s !== series)\n      : [...selectedSeries, series];\n    onFilterChange('series', newSeries);\n  };\n\n  const handleTypeFilter = (type: 'front' | 'tail' | null) => {\n    onFilterChange('type', type ? [type] : []);\n  };\n\n  return (\n    <View style={styles.container}>\n      <FilterPanel\n        filters={{\n          brands: selectedBrands,\n          series: selectedSeries,\n          type: selectedTypes.length > 0 ? selectedTypes[0] as 'front' | 'tail' : null,\n        }}\n        filterOptions={filterOptions}\n        onBrandFilter={handleBrandFilter}\n        onSeriesFilter={handleSeriesFilter}\n        onTypeFilter={handleTypeFilter}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n}); ","export const MEASUREMENTS = {\n  AREA: {\n    METRIC: 'cm²',\n    IMPERIAL: 'in²',\n  },\n  LENGTH: {\n    METRIC: 'mm',\n    IMPERIAL: 'in',\n  },\n};\n\nexport const CACHE = {\n  DURATION: 24 * 60 * 60 * 1000, // 24 hours\n  PREFIX: 'scraper_cache_',\n};\n\nexport const TABLE = {\n  DEFAULT_SORT: {\n    FIELD: 'area' as const,\n    DIRECTION: 'asc' as const,\n  },\n  CELL_MIN_WIDTH: {\n    BRAND: 100,\n    SERIES: 120,\n    MODEL: 150,\n    SPECS: 80,\n  },\n};\n\nexport const SCRAPER = {\n  RETRY_ATTEMPTS: 3,\n  RETRY_DELAY: 1000, // 1 second\n  TIMEOUT: 10000, // 10 seconds\n}; ","import { BaseProduct } from '../types/scraper';\n\nexport function formatMeasurement(value: number, unit: string): string {\n  return `${value}${unit}`;\n}\n\nexport function convertArea(cmSquared: number): number {\n  return Math.round(cmSquared * 0.155); // Convert to square inches\n}\n\nexport function calculateAspectRatio(wingspan: number, area: number): number {\n  return Math.round((wingspan * wingspan / area) * 100) / 100;\n}\n\nexport function groupFoilsByBrand(foils: BaseProduct[]): Record<string, BaseProduct[]> {\n  return foils.reduce((acc, foil) => {\n    if (!acc[foil.brand]) {\n      acc[foil.brand] = [];\n    }\n    acc[foil.brand].push(foil);\n    return acc;\n  }, {} as Record<string, BaseProduct[]>);\n}\n\nexport function groupFoilsBySeries(foils: BaseProduct[]): Record<string, BaseProduct[]> {\n  return foils.reduce((acc, foil) => {\n    if (!acc[foil.series]) {\n      acc[foil.series] = [];\n    }\n    acc[foil.series].push(foil);\n    return acc;\n  }, {} as Record<string, BaseProduct[]>);\n}\n\nexport function getUniqueValues(foils: BaseProduct[], key: keyof BaseProduct): string[] {\n  return Array.from(new Set(foils.map(foil => foil[key] as string))).sort();\n} ","export const colors = {\n  BORDER: '#eee',\n  LIGHT_GRAY: '#f5f5f5',\n  TEXT_PRIMARY: '#1c1c1e',\n  SELECTED_ROW: '#e6f3ff',\n  HOVER_ROW: '#f8f9fa',\n}; ","export const spacing = {\n  SMALL: 8,\n  MEDIUM: 12,\n  LARGE: 16,\n  XLARGE: 24,\n}; ","import React, { useMemo } from 'react';\nimport { View, Text, Pressable, ScrollView, StyleSheet, Platform, ViewStyle } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { SortOption } from '../hooks/useSortedFoils';\nimport { tableConfig } from '../config/tableConfig';\nimport { MEASUREMENTS, TABLE } from '../constants/config';\nimport { formatMeasurement } from '../utils/dataTransform';\nimport { colors } from '../constants/colors';\nimport { spacing } from '../constants/spacing';\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  sortOption: SortOption;\n  onSort: (field: string) => void;\n  comparisonMode: boolean;\n  isSelected: (foil: BaseProduct) => boolean;\n  onFoilSelect: (foil: BaseProduct) => void;\n}\n\nexport const FoilsTable: React.FC<FoilsTableProps> = ({\n  foils,\n  sortOption,\n  onSort,\n  comparisonMode,\n  isSelected,\n  onFoilSelect,\n}) => {\n  // Calculate max widths for each column\n  const columnWidths = useMemo(() => {\n    const baseWidths = {\n      brand: 100,      // Base width for \"Brand\" + sort indicator\n      series: 120,     // Base width for \"Series\" + sort indicator\n      model: 160,      // Base width for longer model names\n      wingspan: 100,   // Width for \"Wingspan\" + numbers + unit\n      area: 100,       // Width for \"Area\" + numbers + unit\n      aspectRatio: 80, // Width for \"AR\" + numbers\n      cord: 90,        // Width for \"Cord\" + numbers + unit\n      type: 80,        // Width for \"Type\" + sort indicator\n      price: 90,       // Width for \"Price\" + numbers\n    };\n\n    // Find maximum content lengths\n    foils.forEach(foil => {\n      const brandWidth = (foil.brand?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.brand = Math.max(baseWidths.brand, brandWidth);\n      \n      const seriesWidth = (foil.series?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.series = Math.max(baseWidths.series, seriesWidth);\n      \n      const modelWidth = (foil.model?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.model = Math.max(baseWidths.model, modelWidth);\n    });\n\n    return baseWidths;\n  }, [foils]);\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    row: {\n      flexDirection: 'row',\n      borderBottomWidth: 1,\n      borderBottomColor: colors.BORDER,\n    },\n    headerRow: {\n      flexDirection: 'row',\n      backgroundColor: colors.LIGHT_GRAY,\n      borderBottomColor: colors.BORDER,\n      borderBottomWidth: 1,\n    },\n    cell: {\n      padding: spacing.MEDIUM,\n      justifyContent: 'center',\n    },\n    textCell: {\n      alignItems: 'flex-start',\n    },\n    numericCell: {\n      alignItems: 'flex-end',\n    },\n    brandCell: {\n      width: columnWidths.brand,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    seriesCell: {\n      width: columnWidths.series,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    modelCell: {\n      width: columnWidths.model,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    wingspanCell: {\n      width: columnWidths.wingspan,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    areaCell: {\n      width: columnWidths.area,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    arCell: {\n      width: columnWidths.aspectRatio,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    cordCell: {\n      width: columnWidths.cord,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    typeCell: {\n      width: columnWidths.type,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    priceCell: {\n      width: columnWidths.price,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    headerText: {\n      fontWeight: 'bold',\n      color: colors.TEXT_PRIMARY,\n      flex: 1,\n    },\n    numericText: {\n      textAlign: 'right',\n      width: '100%',\n    },\n    headerContent: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      width: '100%',\n    },\n    headerNumericContent: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      width: '100%',\n      gap: spacing.MEDIUM,\n    },\n    sortIndicator: {\n      width: 24,\n      textAlign: 'center',\n    },\n    selectable: Platform.select<ViewStyle>({\n      web: {\n        cursor: 'pointer',\n      },\n      default: {}\n    }),\n    selectedRow: {\n      backgroundColor: colors.SELECTED_ROW,\n    },\n    cellContent: {\n      width: '100%',\n    },\n  });\n\n  const getSortIndicator = (field: string) => {\n    if (sortOption.field !== field) return '○';\n    return sortOption.direction === 'asc' ? '↑' : '↓';\n  };\n\n  const renderHeaderContent = (text: string, field: string, isNumeric: boolean = false) => (\n    <View style={isNumeric ? styles.headerNumericContent : styles.headerContent}>\n      <Text style={[styles.headerText, isNumeric && styles.numericText]}>{text}</Text>\n      <Text style={styles.sortIndicator}>{getSortIndicator(field)}</Text>\n    </View>\n  );\n\n  const renderRow = (foil: BaseProduct) => {\n    const rowKey = `row-${foil.brand}-${foil.model}`.toLowerCase().replace(/\\s+/g, '-');\n    const selected = isSelected(foil);\n    \n    return (\n      <Pressable\n        key={rowKey}\n        onPress={() => {\n          if (comparisonMode) {\n            console.log('Toggling selection for:', foil.model);\n            onFoilSelect(foil);\n          }\n        }}\n        style={[\n          styles.row, \n          selected && styles.selectedRow,\n          comparisonMode && styles.selectable\n        ]}\n      >\n        <View style={[styles.cell, styles.textCell, styles.brandCell]}>\n          <View style={styles.cellContent}>\n            <Text>{foil.brand}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.textCell, styles.seriesCell]}>\n          <View style={styles.cellContent}>\n            <Text>{foil.series}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.textCell, styles.modelCell]}>\n          <View style={styles.cellContent}>\n            <Text>{foil.model}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.wingspanCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.numericText}>{formatMeasurement(foil.specs.wingspan || 0, MEASUREMENTS.LENGTH.METRIC)}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.areaCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.numericText}>{formatMeasurement(foil.specs.area || 0, MEASUREMENTS.AREA.METRIC)}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.arCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.numericText}>{foil.specs.aspectRatio?.toFixed(1) || '-'}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.cordCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.numericText}>{formatMeasurement(foil.specs.cord || 0, MEASUREMENTS.LENGTH.METRIC) || '-'}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.textCell, styles.typeCell]}>\n          <View style={styles.cellContent}>\n            <Text>{foil.type.charAt(0).toUpperCase() + foil.type.slice(1)}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.priceCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.numericText}>{foil.price ? `$${foil.price}` : '-'}</Text>\n          </View>\n        </View>\n      </Pressable>\n    );\n  };\n\n  return (\n    <ScrollView horizontal style={styles.container}>\n      <View>\n        <View style={styles.headerRow}>\n          <Pressable style={[styles.cell, styles.textCell, styles.brandCell]} onPress={() => onSort('brand')}>\n            {renderHeaderContent('Brand', 'brand')}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.textCell, styles.seriesCell]} onPress={() => onSort('series')}>\n            {renderHeaderContent('Series', 'series')}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.textCell, styles.modelCell]} onPress={() => onSort('model')}>\n            {renderHeaderContent('Model', 'model')}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.numericCell, styles.wingspanCell]} onPress={() => onSort('wingspan')}>\n            {renderHeaderContent('Wingspan', 'wingspan', true)}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.numericCell, styles.areaCell]} onPress={() => onSort('area')}>\n            {renderHeaderContent('Area', 'area', true)}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.numericCell, styles.arCell]} onPress={() => onSort('aspectRatio')}>\n            {renderHeaderContent('AR', 'aspectRatio', true)}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.numericCell, styles.cordCell]} onPress={() => onSort('cord')}>\n            {renderHeaderContent('Cord', 'cord', true)}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.textCell, styles.typeCell]} onPress={() => onSort('type')}>\n            {renderHeaderContent('Type', 'type')}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.numericCell, styles.priceCell]} onPress={() => onSort('price')}>\n            {renderHeaderContent('Price', 'price', true)}\n          </Pressable>\n        </View>\n        {foils.map(renderRow)}\n      </View>\n    </ScrollView>\n  );\n}; ","import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { spacing } from '../constants/spacing';\n\ninterface ComparisonControlsProps {\n  comparisonMode: boolean;\n  selectedFoils: BaseProduct[];\n  onCompareStart: () => void;\n  onCompareSelected: () => void;\n  onExitCompare: () => void;\n  isComparisonView?: boolean;\n}\n\nexport function ComparisonControls({\n  comparisonMode,\n  selectedFoils,\n  onCompareStart,\n  onCompareSelected,\n  onExitCompare,\n  isComparisonView = false,\n}: ComparisonControlsProps) {\n  if (!comparisonMode) {\n    return (\n      <Pressable\n        style={styles.floatingButton}\n        onPress={onCompareStart}\n      >\n        <Text style={styles.buttonText}>Compare Foils</Text>\n      </Pressable>\n    );\n  }\n\n  return (\n    <View style={styles.comparisonBar}>\n      {!isComparisonView && (\n        <>\n          <Text style={styles.selectionText}>\n            Selected: {selectedFoils.length}\n          </Text>\n          <View style={styles.buttonGroup}>\n            <Pressable\n              style={[styles.button, selectedFoils.length < 2 && styles.buttonDisabled]}\n              onPress={onCompareSelected}\n              disabled={selectedFoils.length < 2}\n            >\n              <Text style={styles.buttonText}>Compare</Text>\n            </Pressable>\n          </View>\n        </>\n      )}\n      <Pressable\n        style={[styles.button, styles.cancelButton]}\n        onPress={onExitCompare}\n      >\n        <Text style={styles.buttonText}>Back</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  comparisonBar: {\n    position: 'absolute',\n    bottom: spacing.LARGE,\n    right: spacing.LARGE,\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.MEDIUM,\n    backgroundColor: 'transparent',\n  },\n  floatingButton: {\n    position: 'absolute',\n    bottom: spacing.LARGE,\n    right: spacing.LARGE,\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    gap: spacing.MEDIUM,\n  },\n  button: {\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonDisabled: {\n    backgroundColor: '#ccc',\n  },\n  cancelButton: {\n    backgroundColor: '#FF3B30',\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '600',\n    fontSize: 14,\n  },\n  selectionText: {\n    fontSize: 14,\n    color: '#666',\n    marginRight: spacing.MEDIUM,\n  },\n}); ","import React from 'react';\nimport { View, Text, ScrollView, StyleSheet } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { MEASUREMENTS } from '../constants/config';\nimport { formatMeasurement } from '../utils/dataTransform';\nimport { colors } from '../constants/colors';\nimport { spacing } from '../constants/spacing';\n\ninterface ComparisonViewProps {\n  foils: BaseProduct[];\n}\n\nexport function ComparisonView({ foils }: ComparisonViewProps) {\n  return (\n    <ScrollView horizontal style={styles.container}>\n      <View>\n        {/* Header Row */}\n        <View style={styles.headerRow}>\n          <View style={[styles.cell, styles.headerCell]}>\n            <Text style={styles.headerText}>Brand</Text>\n          </View>\n          <View style={[styles.cell, styles.headerCell]}>\n            <Text style={styles.headerText}>Series</Text>\n          </View>\n          <View style={[styles.cell, styles.headerCell]}>\n            <Text style={styles.headerText}>Model</Text>\n          </View>\n          <View style={[styles.cell, styles.headerCell]}>\n            <Text style={styles.headerText}>Wingspan</Text>\n          </View>\n          <View style={[styles.cell, styles.headerCell]}>\n            <Text style={styles.headerText}>Area</Text>\n          </View>\n          <View style={[styles.cell, styles.headerCell]}>\n            <Text style={styles.headerText}>AR</Text>\n          </View>\n          <View style={[styles.cell, styles.headerCell]}>\n            <Text style={styles.headerText}>Price</Text>\n          </View>\n        </View>\n\n        {/* Data Rows */}\n        {foils.map(foil => (\n          <View key={`${foil.brand}-${foil.model}`} style={styles.row}>\n            <View style={[styles.cell, styles.dataCell]}>\n              <Text>{foil.brand}</Text>\n            </View>\n            <View style={[styles.cell, styles.dataCell]}>\n              <Text>{foil.series}</Text>\n            </View>\n            <View style={[styles.cell, styles.dataCell]}>\n              <Text>{foil.model}</Text>\n            </View>\n            <View style={[styles.cell, styles.dataCell]}>\n              <Text>{formatMeasurement(foil.specs.wingspan, MEASUREMENTS.LENGTH.METRIC)}</Text>\n            </View>\n            <View style={[styles.cell, styles.dataCell]}>\n              <Text>{formatMeasurement(foil.specs.area, MEASUREMENTS.AREA.METRIC)}</Text>\n            </View>\n            <View style={[styles.cell, styles.dataCell]}>\n              <Text>{foil.specs.aspectRatio?.toFixed(1) || '-'}</Text>\n            </View>\n            <View style={[styles.cell, styles.dataCell]}>\n              <Text>{foil.price ? `$${foil.price}` : '-'}</Text>\n            </View>\n          </View>\n        ))}\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  headerRow: {\n    flexDirection: 'row',\n    backgroundColor: colors.LIGHT_GRAY,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.BORDER,\n  },\n  row: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.BORDER,\n  },\n  cell: {\n    padding: spacing.MEDIUM,\n    minWidth: 120,\n    justifyContent: 'center',\n  },\n  headerCell: {\n    backgroundColor: colors.LIGHT_GRAY,\n  },\n  dataCell: {\n    backgroundColor: 'white',\n  },\n  headerText: {\n    fontWeight: 'bold',\n    color: colors.TEXT_PRIMARY,\n  }\n});","import React from 'react';\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\n\nexport function LoadingIndicator() {\n  return (\n    <View style={styles.container}>\n      <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}); ","import React from 'react';\nimport { View, Text, Pressable, StyleSheet } from 'react-native';\n\ninterface ErrorMessageProps {\n  message: string;\n  onRetry?: () => void;\n}\n\nexport function ErrorMessage({ message, onRetry }: ErrorMessageProps) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.message}>{message}</Text>\n      {onRetry && (\n        <Pressable\n          style={({ pressed }) => [\n            styles.retryButton,\n            pressed && styles.retryButtonPressed\n          ]}\n          onPress={onRetry}\n        >\n          <Text style={styles.retryButtonText}>Retry</Text>\n        </Pressable>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: '#ffebee',\n    borderRadius: 8,\n    margin: 16,\n  },\n  message: {\n    color: '#c62828',\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 12,\n  },\n  retryButton: {\n    backgroundColor: '#c62828',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 6,\n  },\n  retryButtonPressed: {\n    backgroundColor: '#b71c1c',\n  },\n  retryButtonText: {\n    color: '#fff',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n}); ","import React, { useState, useEffect } from 'react';\nimport { View, ScrollView, StyleSheet } from 'react-native';\nimport { useFoils } from '../hooks/useFoils';\nimport { useSearchFoils } from '../hooks/useSearchFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\nimport { useComparison } from '../hooks/useComparison';\nimport { SearchBar } from '../components/SearchBar';\nimport { FilterControls } from '../components/FilterControls';\nimport { FoilsTable } from '../components/FoilsTable';\nimport { ComparisonControls } from '../components/ComparisonControls';\nimport { ComparisonView } from '../components/ComparisonView';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { ErrorMessage } from '../components/ErrorMessage';\nimport { FilterOptions } from '../types/filters';\n\nexport default function BrowseScreen({ route, navigation }) {\n  const { foils, loading, error, refreshFoils } = useFoils();\n  const searchQuery = route.params?.searchQuery || '';\n  const { searchedFoils } = useSearchFoils(foils, searchQuery);\n  const { \n    filters, \n    setFilters, \n    filteredFoils, \n    filterOptions \n  } = useFilteredFoils(searchedFoils);\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(filteredFoils);\n  const { \n    comparisonMode, \n    selectedFoils, \n    setComparisonModeOn,\n    setComparisonModeOff,\n    toggleFoilSelection, \n    isSelected \n  } = useComparison();\n  \n  const [isComparisonView, setIsComparisonView] = useState(false);\n\n  useEffect(() => {\n    console.log('BrowseScreen mounted, loading:', loading);\n  }, [loading]);\n\n  useEffect(() => {\n    if (route.params?.searchQuery !== searchQuery) {\n      navigation.setParams({ searchQuery });\n    }\n  }, [searchQuery, navigation]);\n\n  const handleFilterChange = (filterType: keyof FilterOptions, values: string[]) => {\n    if (filterType === 'type') {\n      // Handle type filter specially\n      setFilters(prev => ({\n        ...prev,\n        type: values.length > 0 ? values[0] as 'front' | 'tail' : null\n      }));\n    } else {\n      // Handle other filters normally\n      setFilters(prev => ({\n        ...prev,\n        [filterType]: values\n      }));\n    }\n  };\n\n  const handleSort = (field: string) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleBrandFilter = (brand: string) => {\n    setFilters(prev => ({\n      ...prev,\n      brands: prev.brands.includes(brand)\n        ? prev.brands.filter(b => b !== brand)\n        : [...prev.brands, brand]\n    }));\n  };\n\n  const handleSeriesFilter = (series: string) => {\n    setFilters(prev => ({\n      ...prev,\n      series: prev.series.includes(series)\n        ? prev.series.filter(s => s !== series)\n        : [...prev.series, series]\n    }));\n  };\n\n  const handleCompareStart = () => {\n    setComparisonModeOn();\n  };\n\n  const handleCompareSelected = () => {\n    if (selectedFoils.length >= 2) {\n      setIsComparisonView(true);\n    }\n  };\n\n  const handleExitCompare = () => {\n    setIsComparisonView(false);\n    setComparisonModeOff();\n  };\n\n  if (loading) {\n    console.log('Rendering LoadingIndicator');\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return <ErrorMessage message={error} onRetry={refreshFoils} />;\n  }\n\n  return (\n    <View style={styles.container}>\n      <FilterControls\n        filterOptions={filterOptions}\n        selectedBrands={filters.brands}\n        selectedSeries={filters.series}\n        selectedTypes={filters.type ? [filters.type] : []}\n        onFilterChange={handleFilterChange}\n        defaultCollapsed={true}\n      />\n\n      {/* Scrollable Content Section */}\n      <ScrollView style={styles.scrollContainer} contentContainerStyle={styles.scrollContent}>\n        {isComparisonView ? (\n          <ComparisonView foils={selectedFoils} />\n        ) : (\n          <FoilsTable\n            foils={sortedFoils}\n            sortOption={sortOption}\n            onSort={handleSort}\n            comparisonMode={comparisonMode}\n            isSelected={isSelected}\n            onFoilSelect={toggleFoilSelection}\n          />\n        )}\n      </ScrollView>\n\n      {/* Floating Comparison Controls */}\n      <ComparisonControls\n        comparisonMode={comparisonMode}\n        selectedFoils={selectedFoils}\n        onCompareStart={handleCompareStart}\n        onCompareSelected={handleCompareSelected}\n        onExitCompare={handleExitCompare}\n        isComparisonView={isComparisonView}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  scrollContainer: {\n    flex: 1,\n  },\n  scrollContent: {\n    flexGrow: 1,\n  },\n}); ","import { useState, useEffect } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { ProductService } from '../services/productService';\n\nexport function useFoils() {\n  const [foils, setFoils] = useState<BaseProduct[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadFoils = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const products = await ProductService.getAllProducts();\n      setFoils(products);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load foils');\n      console.error('Error loading foils:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadFoils();\n  }, []);\n\n  const refreshFoils = () => {\n    loadFoils();\n  };\n\n  return {\n    foils,\n    loading,\n    error,\n    refreshFoils\n  };\n} ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useSearchFoils(foils: BaseProduct[], searchQuery: string) {\n  const searchedFoils = useMemo(() => {\n    if (!searchQuery.trim()) {\n      return foils;\n    }\n\n    const query = searchQuery.toLowerCase().trim();\n    return foils.filter(foil => {\n      const searchableFields = [\n        foil.brand,\n        foil.model,\n        foil.series,\n        foil.specs.area.toString(),\n        foil.specs.wingspan.toString(),\n        foil.specs.aspectRatio.toString(),\n      ];\n\n      return searchableFields.some(field => \n        field.toLowerCase().includes(query)\n      );\n    });\n  }, [foils, searchQuery]);\n\n  return { searchedFoils };\n} ","import { useState, useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\n\nexport function useFilteredFoils(foils: BaseProduct[]) {\n  const [filters, setFilters] = useState<FilterOptions>({\n    brands: [],\n    series: [],\n    type: null,\n  });\n\n  const filterOptions = useMemo(() => {\n    const brands = Array.from(new Set(foils.map(foil => foil.brand)));\n    const allSeries = Array.from(new Set(foils.map(foil => foil.series)));\n    const types = ['front', 'tail'];\n\n    // Create brandSeries mapping\n    const brandSeries = brands.reduce((acc, brand) => {\n      acc[brand] = Array.from(new Set(\n        foils\n          .filter(foil => foil.brand === brand)\n          .map(foil => foil.series)\n      ));\n      return acc;\n    }, {} as Record<string, string[]>);\n\n    // Filter foils based on selected type\n    const typeFilteredFoils = filters.type \n      ? foils.filter(foil => foil.type === filters.type)\n      : foils;\n\n    // Get series based on type-filtered foils\n    const typeFilteredSeries = Array.from(new Set(typeFilteredFoils.map(foil => foil.series)));\n\n    // Filter series based on selected brands and type\n    const series = filters.brands.length > 0\n      ? Array.from(new Set(\n          typeFilteredFoils\n            .filter(foil => filters.brands.includes(foil.brand))\n            .map(foil => foil.series)\n        ))\n      : typeFilteredSeries;\n\n    return {\n      brands,\n      series,\n      types,\n      brandSeries,\n    };\n  }, [foils, filters.brands, filters.type]);\n\n  const filteredFoils = useMemo(() => {\n    return foils.filter(foil => {\n      const brandMatch = filters.brands.length === 0 || filters.brands.includes(foil.brand);\n      const seriesMatch = filters.series.length === 0 || filters.series.includes(foil.series);\n      const typeMatch = !filters.type || foil.type === filters.type;\n\n      return brandMatch && seriesMatch && typeMatch;\n    });\n  }, [foils, filters]);\n\n  return {\n    filters,\n    setFilters,\n    filteredFoils,\n    filterOptions,\n  };\n} ","import { useState, useCallback } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useComparison() {\n  const [comparisonMode, setComparisonMode] = useState(false);\n  const [selectedFoils, setSelectedFoils] = useState<BaseProduct[]>([]);\n\n  const getFoilIdentifier = (foil: BaseProduct) => {\n    return foil.id || `${foil.brand}-${foil.model}`.toLowerCase().replace(/\\s+/g, '-');\n  };\n\n  const setComparisonModeOn = useCallback(() => {\n    setComparisonMode(true);\n    setSelectedFoils([]);\n  }, []);\n\n  const setComparisonModeOff = useCallback(() => {\n    setComparisonMode(false);\n    setSelectedFoils([]);\n  }, []);\n\n  const toggleFoilSelection = useCallback((foil: BaseProduct) => {\n    if (!comparisonMode) return;\n    \n    setSelectedFoils(prev => {\n      const foilId = getFoilIdentifier(foil);\n      const isCurrentlySelected = prev.some(f => getFoilIdentifier(f) === foilId);\n      \n      if (isCurrentlySelected) {\n        return prev.filter(f => getFoilIdentifier(f) !== foilId);\n      } else {\n        return [...prev, foil];\n      }\n    });\n  }, [comparisonMode]);\n\n  const isSelected = useCallback((foil: BaseProduct) => {\n    const foilId = getFoilIdentifier(foil);\n    return selectedFoils.some(f => getFoilIdentifier(f) === foilId);\n  }, [selectedFoils]);\n\n  return {\n    comparisonMode,\n    selectedFoils,\n    setComparisonModeOn,\n    setComparisonModeOff,\n    toggleFoilSelection,\n    isSelected,\n  };\n} ","import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n    error: null\n  };\n\n  public static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Uncaught error:', error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return (\n        <View style={styles.container}>\n          <Text style={styles.text}>Something went wrong.</Text>\n          <Text style={styles.errorText}>{this.state.error?.message}</Text>\n        </View>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  text: {\n    fontSize: 16,\n    marginBottom: 10,\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 14,\n  },\n}); ","import React from 'react';\nimport { View, TextInput, Pressable, Text, StyleSheet } from 'react-native';\n\ninterface SearchBarProps {\n  value: string;\n  onChangeText: (text: string) => void;\n  onClear: () => void;\n  placeholder?: string;\n}\n\nexport function SearchBar({\n  value,\n  onChangeText,\n  onClear,\n  placeholder = 'Search foils...'\n}: SearchBarProps) {\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        value={value}\n        onChangeText={onChangeText}\n        placeholder={placeholder}\n        placeholderTextColor=\"#999\"\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n      />\n      {value.length > 0 && (\n        <Pressable\n          style={styles.clearButton}\n          onPress={onClear}\n        >\n          <Text style={styles.clearButtonText}>✕</Text>\n        </Pressable>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#f0f0f0',\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    marginHorizontal: 16,\n    marginVertical: 8,\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    fontSize: 16,\n    color: '#333',\n  },\n  clearButton: {\n    padding: 8,\n  },\n  clearButtonText: {\n    color: '#999',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n}); ","import React, { useState, useRef } from 'react';\nimport { NavigationContainer, NavigationContainerRef } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { View, StyleSheet, Text } from 'react-native';\nimport BrowseScreen from './src/screens/BrowseScreen';\nimport { RootStackParamList } from './src/types/navigation';\nimport { ErrorBoundary } from './src/components/ErrorBoundary';\nimport { SearchBar } from './src/components/SearchBar';\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const navigationRef = useRef<NavigationContainerRef<RootStackParamList>>(null);\n\n  const handleSearch = (text: string) => {\n    setSearchQuery(text);\n    if (navigationRef.current) {\n      navigationRef.current.setParams({ searchQuery: text });\n    }\n  };\n\n  return (\n    <ErrorBoundary>\n      <SafeAreaProvider>\n        <NavigationContainer ref={navigationRef}>\n          <Stack.Navigator>\n            <Stack.Screen \n              name=\"Browse\" \n              component={BrowseScreen}\n              initialParams={{ searchQuery }}\n              options={{\n                headerTitle: '',\n                headerLeft: () => (\n                  <View style={styles.headerContainer}>\n                    <Text style={styles.headerTitle}>FoilQuiver</Text>\n                    <SearchBar \n                      value={searchQuery}\n                      onChangeText={handleSearch}\n                      onClear={() => handleSearch('')}\n                      style={styles.searchBar}\n                    />\n                  </View>\n                ),\n                headerStyle: {\n                  backgroundColor: '#f4f4f4',\n                },\n              }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </SafeAreaProvider>\n    </ErrorBoundary>\n  );\n}\n\nconst styles = StyleSheet.create({\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n    paddingHorizontal: 16,\n  },\n  headerTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginRight: 16,\n  },\n  searchBar: {\n    flex: 1,\n  }\n}); ","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [185], () => (__webpack_require__(7918)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ProductService","_createClass","_classCallCheck","key","value","_getAllProducts","_asyncToGenerator","this","isWeb","response","fetch","ok","products","json","console","log","length","error","warn","allProducts","brand","require","toLowerCase","replace","push","apply","_toConsumableArray","cached","AsyncStorage","getItem","JSON","parse","arguments","useSortedFoils","foils","_useState","useState","field","direction","_useState2","_slicedToArray","sortOption","setSortOption","sortedFoils","useMemo","sort","a","b","valueA","valueB","price","specs","multiplier","localeCompare","FilterPanel","_ref","filters","filterOptions","onBrandFilter","onSeriesFilter","onTypeFilter","isExpanded","setIsExpanded","_useState3","Animated","Value","animation","contentHeight","interpolate","inputRange","outputRange","_jsxs","View","style","styles","container","children","Pressable","onPress","toValue","spring","useNativeDriver","start","header","_jsx","Text","headerText","Ionicons","name","size","color","content","height","filterSection","filterTitle","filterButtons","filterButton","type","filterButtonActive","filterButtonText","filterButtonTextActive","brands","includes","series","StyleSheet","create","backgroundColor","borderBottomWidth","borderBottomColor","flexDirection","justifyContent","alignItems","padding","fontSize","fontWeight","overflow","borderTopWidth","borderTopColor","marginBottom","flexWrap","gap","maxHeight","paddingHorizontal","paddingVertical","borderRadius","borderWidth","borderColor","FilterControls","_ref$selectedBrands","selectedBrands","_ref$selectedSeries","selectedSeries","_ref$selectedTypes","selectedTypes","onFilterChange","newBrands","filter","concat","newSeries","s","MEASUREMENTS","METRIC","IMPERIAL","formatMeasurement","unit","colors","spacing","FoilsTable","onSort","comparisonMode","isSelected","onFoilSelect","columnWidths","baseWidths","model","wingspan","area","aspectRatio","cord","forEach","foil","_foil$brand","_foil$series","_foil$model","brandWidth","Math","max","seriesWidth","modelWidth","flex","row","headerRow","cell","textCell","numericCell","brandCell","width","flexShrink","flexGrow","seriesCell","modelCell","wingspanCell","areaCell","arCell","cordCell","typeCell","priceCell","numericText","textAlign","headerContent","headerNumericContent","sortIndicator","selectable","cursor","selectedRow","cellContent","getSortIndicator","renderHeaderContent","text","isNumeric","undefined","ScrollView","horizontal","_foil$specs$aspectRat","rowKey","selected","toFixed","charAt","toUpperCase","slice","ComparisonControls","selectedFoils","onCompareStart","onCompareSelected","onExitCompare","_ref$isComparisonView","isComparisonView","comparisonBar","_Fragment","selectionText","buttonGroup","button","buttonDisabled","disabled","buttonText","cancelButton","floatingButton","position","bottom","right","_objectSpread","boxShadow","marginRight","ComparisonView","headerCell","dataCell","minWidth","LoadingIndicator","ActivityIndicator","ErrorMessage","message","onRetry","_ref2","pressed","retryButton","retryButtonPressed","retryButtonText","margin","BrowseScreen","_route$params","route","navigation","_useFoils","setFoils","_useState4","loading","setLoading","_useState5","_useState6","setError","loadFoils","getAllProducts","err","useEffect","refreshFoils","useFoils","searchQuery","params","_useSearchFoils","searchedFoils","trim","query","toString","some","useSearchFoils","_useFilteredFoils","setFilters","Array","from","Set","brandSeries","reduce","acc","typeFilteredFoils","typeFilteredSeries","types","filteredFoils","brandMatch","seriesMatch","typeMatch","useFilteredFoils","_useSortedFoils","_useComparison","setComparisonMode","setSelectedFoils","getFoilIdentifier","setComparisonModeOn","useCallback","setComparisonModeOff","toggleFoilSelection","prev","foilId","f","useComparison","setIsComparisonView","_route$params2","setParams","filterType","values","_defineProperty","defaultCollapsed","scrollContainer","contentContainerStyle","scrollContent","ErrorBoundary","_Component","_this","_len","args","_key","state","hasError","_inherits","errorInfo","_this$state$error","errorText","props","Component","SearchBar","onChangeText","onClear","_ref$placeholder","placeholder","TextInput","input","placeholderTextColor","autoCapitalize","autoCorrect","clearButton","clearButtonText","marginHorizontal","marginVertical","Stack","createNativeStackNavigator","headerContainer","headerTitle","searchBar","registerRootComponent","setSearchQuery","navigationRef","useRef","handleSearch","current","SafeAreaProvider","NavigationContainer","ref","Navigator","Screen","component","initialParams","options","headerLeft","headerStyle","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","n","getter","__esModule","d","definition","defineProperty","enumerable","get","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}