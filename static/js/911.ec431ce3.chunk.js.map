{"version":3,"file":"static/js/911.ec431ce3.chunk.js","mappings":"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","sources":["src/services/productService.ts","src/hooks/useSortedFoils.ts","src/utils/sorting.ts","src/components/FilterControls.tsx","src/components/FoilsTable.tsx","src/components/ComparisonControls.tsx","src/constants/spacing.ts","src/components/ComparisonView.tsx","src/components/Footer.tsx","src/components/SEOHead.tsx","src/screens/BrowseScreen.tsx","src/hooks/useFoils.ts","src/hooks/useFilteredFoils.ts","src/hooks/useSearchFoils.ts","src/hooks/useComparison.ts"],"sourcesContent":["import { BaseProduct } from '../types/scraper';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport class ProductService {\n  private static isWeb = Platform.OS === 'web';\n  private static DATA_PATH = '/data/foils.json';\n  private static CACHE_DIR = '.cache';\n\n  // Get base URL for data loading\n  private static getBaseUrl(): string {\n    if (process.env.NODE_ENV === 'development') {\n      return '';\n    }\n    return process.env.NODE_ENV === 'staging' \n      ? 'https://staging.foilquiver.com'\n      : 'https://foilquiver.com';\n  }\n\n  static async getAllProducts(): Promise<BaseProduct[]> {\n    try {\n      if (this.isWeb) {\n        const baseUrl = this.getBaseUrl();\n\n        // Try loading from data directory first\n        try {\n          const response = await fetch(`${baseUrl}${this.DATA_PATH}`);\n          if (response.ok) {\n            const products = await response.json();\n            console.log(`Loaded ${products.length} products from ${this.DATA_PATH}`);\n            return products;\n          } else {\n            console.warn(`Failed to load from ${this.DATA_PATH} (${response.status}), trying .cache directory...`);\n          }\n        } catch (error) {\n          console.warn(`Failed to load from ${this.DATA_PATH}, trying .cache directory...`, error);\n        }\n\n        // Try loading from .cache as fallback\n        try {\n          // Normalize brand names to match file names\n          const brands = ['armstrong', 'lift-foils', 'axis-foils', 'code-foils', 'kt-foils', 'uni-foil'];\n          const allProducts: BaseProduct[] = [];\n          \n          for (const brand of brands) {\n            try {\n              const response = await fetch(`${baseUrl}/${this.CACHE_DIR}/${brand}.json`);\n              if (response.ok) {\n                const products = await response.json();\n                console.log(`Loaded ${products.length} products for ${brand} from .cache`);\n                allProducts.push(...products);\n              }\n            } catch (error) {\n              console.warn(`No cache file found for ${brand}`);\n            }\n          }\n\n          if (allProducts.length > 0) {\n            return allProducts;\n          }\n        } catch (error) {\n          console.warn('Failed to load from .cache directory', error);\n        }\n      } else {\n        // For mobile, use AsyncStorage\n        const cached = await AsyncStorage.getItem('foils');\n        if (cached) {\n          const products = JSON.parse(cached);\n          console.log(`Loaded ${products.length} products from AsyncStorage`);\n          return products;\n        }\n      }\n    } catch (error) {\n      console.error('Error loading foils data:', error);\n    }\n    \n    console.warn('No foils data found in any location');\n    return [];\n  }\n} ","import { useState, useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { sortProducts } from '../utils/sorting';\n\nexport type SortField = 'brand' | 'series' | 'model' | 'price' | 'area' | 'wingspan' | 'aspectRatio' | 'cord' | 'type' | 'link';\nexport type SortDirection = 'asc' | 'desc';\n\nexport interface SortOption {\n  field: SortField;\n  direction: SortDirection;\n}\n\nexport function useSortedFoils(foils: BaseProduct[]) {\n  const [sortOption, setSortOption] = useState<SortOption>({\n    field: 'area',\n    direction: 'asc'\n  });\n\n  const sortedFoils = useMemo(() => {\n    return sortProducts(foils, sortOption.field, sortOption.direction);\n  }, [foils, sortOption]);\n\n  return {\n    sortOption,\n    setSortOption,\n    sortedFoils\n  };\n} ","import { BaseProduct } from '../types/scraper';\nimport { SortField, SortDirection } from '../hooks/useSortedFoils';\n\nexport function sortProducts(\n  products: BaseProduct[],\n  field: SortField,\n  direction: SortDirection\n): BaseProduct[] {\n  return [...products].sort((a, b) => {\n    let valueA: string | number;\n    let valueB: string | number;\n\n    if (field === 'brand' || field === 'series' || field === 'model' || field === 'type') {\n      valueA = a[field].toLowerCase();\n      valueB = b[field].toLowerCase();\n    } else if (field === 'price') {\n      valueA = a.price || 0;\n      valueB = b.price || 0;\n    } else if (field in a.specs) {\n      valueA = a.specs[field as keyof typeof a.specs] || 0;\n      valueB = b.specs[field as keyof typeof b.specs] || 0;\n    } else {\n      valueA = '';\n      valueB = '';\n    }\n    \n    const multiplier = direction === 'asc' ? 1 : -1;\n    \n    if (typeof valueA === 'string' && typeof valueB === 'string') {\n      return valueA.localeCompare(valueB) * multiplier;\n    }\n    if (typeof valueA === 'number' && typeof valueB === 'number') {\n      return (valueA - valueB) * multiplier;\n    }\n    return 0;\n  });\n} ","import React, { useState } from 'react';\nimport { View, Text, Pressable, StyleSheet, Animated, LayoutChangeEvent } from 'react-native';\nimport { colors } from '../theme/colors';\nimport { FilterOptions } from '../types/filters';\nimport { Ionicons } from '@expo/vector-icons';\n\ninterface FilterControlsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (type: keyof FilterOptions, value: string) => void;\n}\n\nexport function FilterControls({\n  filterOptions,\n  selectedBrands,\n  selectedSeries,\n  selectedTypes,\n  onFilterChange,\n}: FilterControlsProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [animation] = useState(new Animated.Value(0));\n  const [contentHeight, setContentHeight] = useState(0);\n\n  const toggleExpanded = () => {\n    const toValue = isExpanded ? 0 : 1;\n    Animated.spring(animation, {\n      toValue,\n      useNativeDriver: false,\n      friction: 10,\n    }).start();\n    setIsExpanded(!isExpanded);\n  };\n\n  const handleLayout = (event: LayoutChangeEvent) => {\n    const { height } = event.nativeEvent.layout;\n    setContentHeight(height);\n  };\n\n  const animatedHeight = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, contentHeight],\n  });\n\n  return (\n    <View style={styles.wrapper}>\n      <Pressable onPress={toggleExpanded} style={styles.header}>\n        <View style={styles.headerContent}>\n          <Text style={styles.headerTitle}>Filters</Text>\n          <View style={styles.filterSummary}>\n            {selectedBrands.length > 0 && (\n              <Text style={styles.filterCount}>Brands: {selectedBrands.length}</Text>\n            )}\n            {selectedTypes.length > 0 && (\n              <Text style={styles.filterCount}>Types: {selectedTypes.length}</Text>\n            )}\n            {selectedSeries.length > 0 && (\n              <Text style={styles.filterCount}>Series: {selectedSeries.length}</Text>\n            )}\n          </View>\n        </View>\n        <Ionicons \n          name={isExpanded ? 'chevron-up' : 'chevron-down'} \n          size={24} \n          color={colors.text.secondary}\n        />\n      </Pressable>\n\n      <Animated.View style={[styles.content, { height: animatedHeight }]}>\n        <View style={styles.container} onLayout={handleLayout}>\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Brand</Text>\n            <View style={styles.chipContainer}>\n              {filterOptions.brands.map((brand) => (\n                <Pressable\n                  key={brand}\n                  style={[\n                    styles.chip,\n                    selectedBrands.includes(brand) && styles.chipSelected,\n                  ]}\n                  onPress={() => onFilterChange('brands', brand)}\n                >\n                  <Text \n                    style={[\n                      styles.chipText,\n                      selectedBrands.includes(brand) && styles.chipTextSelected,\n                    ]}\n                  >\n                    {brand}\n                  </Text>\n                </Pressable>\n              ))}\n            </View>\n          </View>\n\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Type</Text>\n            <View style={styles.chipContainer}>\n              {filterOptions.types.map((type) => (\n                <Pressable\n                  key={type}\n                  style={[\n                    styles.chip,\n                    selectedTypes.includes(type) && styles.chipSelected,\n                  ]}\n                  onPress={() => onFilterChange('type', type)}\n                >\n                  <Text \n                    style={[\n                      styles.chipText,\n                      selectedTypes.includes(type) && styles.chipTextSelected,\n                    ]}\n                  >\n                    {type}\n                  </Text>\n                </Pressable>\n              ))}\n            </View>\n          </View>\n\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Series</Text>\n            <View style={styles.chipContainer}>\n              {filterOptions.series.map((series) => (\n                <Pressable\n                  key={series}\n                  style={[\n                    styles.chip,\n                    selectedSeries.includes(series) && styles.chipSelected,\n                  ]}\n                  onPress={() => onFilterChange('series', series)}\n                >\n                  <Text \n                    style={[\n                      styles.chipText,\n                      selectedSeries.includes(series) && styles.chipTextSelected,\n                    ]}\n                  >\n                    {series}\n                  </Text>\n                </Pressable>\n              ))}\n            </View>\n          </View>\n        </View>\n      </Animated.View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: colors.background.primary,\n    marginBottom: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: colors.border,\n    overflow: 'hidden',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: colors.background.primary,\n  },\n  headerContent: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n  },\n  headerTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: colors.text.primary,\n  },\n  filterSummary: {\n    flexDirection: 'row',\n    gap: 12,\n  },\n  filterCount: {\n    fontSize: 14,\n    color: colors.text.secondary,\n  },\n  content: {\n    overflow: 'hidden',\n  },\n  container: {\n    padding: 16,\n    paddingTop: 0,\n  },\n  section: {\n    marginBottom: 16,\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: colors.text.primary,\n    marginBottom: 8,\n  },\n  chipContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  chip: {\n    backgroundColor: colors.background.secondary,\n    borderRadius: 16,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n  },\n  chipSelected: {\n    backgroundColor: colors.primary,\n  },\n  chipText: {\n    color: colors.text.secondary,\n    fontSize: 14,\n  },\n  chipTextSelected: {\n    color: colors.background.primary,\n  },\n}); ","/**\n * FoilsTable Component\n * \n * IMPORTANT: Column Alignment\n * - The table uses fixed column widths for consistent layout and horizontal scrolling\n * - Each column width in headerCell must match the corresponding cell width\n * - Current widths:\n *   - Regular columns (brand, model, type, series): 150px\n *   - Number columns (area, wingspan, AR, price): 100px\n *   - Link column: 100px\n * - When modifying column styles, always update both headerCell and cell styles to maintain alignment\n * - Table has a minWidth of 1200px to ensure proper layout on all screen sizes\n */\n\nimport React from 'react';\nimport { View, Text, Pressable, ScrollView, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { SortField } from '../hooks/useSortedFoils';\nimport { colors } from '../theme/colors';\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  onSort: (field: SortField) => void;\n  onFoilSelect: (foil: BaseProduct) => void;\n  isSelected: (foil: BaseProduct) => boolean;\n  sortOption: { field: SortField; ascending: boolean };\n}\n\nconst MOBILE_BREAKPOINT = 768;\nconst TABLE_WIDTH = 930; // 100 + 150 + 80 + 120 + (100 * 4) + 80\n\nexport function FoilsTable({\n  foils,\n  onSort,\n  onFoilSelect,\n  isSelected,\n  sortOption,\n}: FoilsTableProps) {\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n\n  const renderSortIcon = (field: SortField) => {\n    const isActive = sortOption.field === field;\n    \n    return (\n      <View style={styles.sortIconContainer}>\n        <Text style={[\n          styles.sortIcon,\n          styles.sortIconUp,\n          isActive && sortOption.ascending && styles.sortIconUpActive\n        ]}>▲</Text>\n        <Text style={[\n          styles.sortIcon,\n          styles.sortIconDown,\n          isActive && !sortOption.ascending && styles.sortIconDownActive\n        ]}>▼</Text>\n      </View>\n    );\n  };\n\n  const getHeaderTextStyle = (field: SortField) => {\n    return styles.headerText;\n  };\n\n  return (\n    <View style={[\n      styles.container,\n      isMobile && styles.containerMobile\n    ]}>\n      <View style={[\n        styles.tableWrapper,\n        isMobile && styles.tableWrapperMobile\n      ]}>\n        <ScrollView \n          horizontal \n          showsHorizontalScrollIndicator={true}\n          contentContainerStyle={styles.scrollViewContent}\n          style={[styles.horizontalScrollView, isMobile && styles.scrollViewMobile]}\n          scrollEventThrottle={16}\n          decelerationRate=\"normal\"\n          snapToAlignment=\"start\"\n          directionalLockEnabled={true}\n          alwaysBounceHorizontal={true}\n          overScrollMode=\"auto\"\n        >\n          <View style={styles.tableContent}>\n            <View style={styles.tableHeader}>\n              <View style={styles.headerRow}>\n                <Pressable style={styles.headerCell} onPress={() => onSort('brand')}>\n                  <Text style={getHeaderTextStyle('brand')}>Brand</Text>\n                  {renderSortIcon('brand')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.modelCell]} onPress={() => onSort('model')}>\n                  <Text style={getHeaderTextStyle('model')}>Model</Text>\n                  {renderSortIcon('model')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.typeCell]} onPress={() => onSort('type')}>\n                  <Text style={getHeaderTextStyle('type')}>Type</Text>\n                  {renderSortIcon('type')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.seriesCell]} onPress={() => onSort('series')}>\n                  <Text style={getHeaderTextStyle('series')}>Series</Text>\n                  {renderSortIcon('series')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('area')}>\n                  <Text style={[getHeaderTextStyle('area'), styles.numberHeaderText]}>Area</Text>\n                  {renderSortIcon('area')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('wingspan')}>\n                  <Text style={[getHeaderTextStyle('wingspan'), styles.numberHeaderText]}>Span</Text>\n                  {renderSortIcon('wingspan')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('aspectRatio')}>\n                  <Text style={[getHeaderTextStyle('aspectRatio'), styles.numberHeaderText]}>AR</Text>\n                  {renderSortIcon('aspectRatio')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('price')}>\n                  <Text style={[getHeaderTextStyle('price'), styles.numberHeaderText]}>Price</Text>\n                  {renderSortIcon('price')}\n                </Pressable>\n                <View style={[styles.headerCell, styles.linkHeaderCell]}>\n                  <Text style={[styles.headerText, styles.linkHeaderText]}>Link</Text>\n                </View>\n              </View>\n            </View>\n            <View style={styles.scrollViewContainer}>\n              <ScrollView style={styles.scrollView}>\n                {foils.map((foil, index) => (\n                  <Pressable\n                    key={`${foil.brand}-${foil.model}`}\n                    onPress={() => onFoilSelect(foil)}\n                    style={({ pressed }) => [\n                      styles.row,\n                      index % 2 === 0 && styles.rowEven,\n                      isSelected(foil) && styles.rowSelected,\n                      Platform.OS === 'web' && pressed && styles.rowHovered\n                    ]}\n                  >\n                    <Text style={styles.cell}>{foil.brand}</Text>\n                    <Text style={[styles.cell, styles.modelCell]}>{foil.model}</Text>\n                    <Text style={[styles.cell, styles.typeCell]}>{foil.type}</Text>\n                    <Text style={[styles.cell, styles.seriesCell]}>{foil.series}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.specs.area}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.specs.wingspan}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.specs.aspectRatio?.toFixed(2)}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.price ? `$${foil.price}` : '-'}</Text>\n                    <View style={[styles.cell, styles.linkCell]}>\n                      {foil.sourceUrl && (\n                        <Pressable \n                          onPress={(e) => {\n                            e.stopPropagation();\n                            window.open(foil.sourceUrl, '_blank');\n                          }}\n                          style={({ pressed }) => [\n                            styles.linkButton,\n                            pressed && styles.linkButtonPressed\n                          ]}\n                        >\n                          <Text style={styles.linkText}>View</Text>\n                        </Pressable>\n                      )}\n                    </View>\n                  </Pressable>\n                ))}\n              </ScrollView>\n            </View>\n          </View>\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 0,\n  },\n  containerMobile: {\n    padding: 0,\n  },\n  tableWrapper: {\n    width: TABLE_WIDTH,\n    backgroundColor: colors.background.primary,\n    borderRadius: 0,\n    overflow: 'hidden',\n    borderWidth: 0,\n    flex: 1,\n  },\n  tableWrapperMobile: {\n    borderRadius: 0,\n  },\n  scrollViewMobile: {\n    flex: 1,\n    ...(Platform.OS === 'web' ? {\n      WebkitOverflowScrolling: 'touch',\n    } as any : {}),\n  },\n  tableContent: {\n    backgroundColor: colors.background.primary,\n    width: TABLE_WIDTH,\n    flex: 1,\n    flexDirection: 'column',\n  },\n  scrollViewContainer: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  tableHeader: {\n    backgroundColor: colors.background.secondary,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.primary,\n    width: TABLE_WIDTH,\n  },\n  headerRow: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.secondary,\n  },\n  headerCell: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12,\n    borderRightWidth: 1,\n    borderRightColor: colors.border,\n    width: 100,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  headerText: {\n    color: colors.text.secondary,\n    fontWeight: '600',\n    fontSize: 16,\n  },\n  row: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border,\n    width: TABLE_WIDTH,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  rowEven: {\n    backgroundColor: colors.background.secondary,\n  },\n  rowSelected: {\n    backgroundColor: `${colors.primary}15`,\n  },\n  rowHovered: {\n    backgroundColor: `${colors.primary}10`,\n  },\n  cell: {\n    color: colors.text.primary,\n    fontSize: 14,\n    padding: 12,\n    borderRightWidth: 1,\n    borderRightColor: colors.border,\n    width: 100,\n  },\n  modelCell: {\n    width: 150,\n  },\n  typeCell: {\n    width: 80,\n  },\n  seriesCell: {\n    width: 120,\n  },\n  numberCell: {\n    width: 100,\n    textAlign: 'right',\n  },\n  numberHeaderCell: {\n    width: 100,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    gap: 4,\n  },\n  numberHeaderText: {\n    textAlign: 'left',\n    flex: 1,\n  },\n  linkCell: {\n    width: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRightWidth: 0,\n    borderTopRightRadius: Platform.OS === 'web' ? 0 : 8,\n    borderBottomRightRadius: Platform.OS === 'web' ? 0 : 8,\n  },\n  linkHeaderCell: {\n    width: 80,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRightWidth: 0,\n    borderTopRightRadius: Platform.OS === 'web' ? 0 : 8,\n  },\n  linkHeaderText: {\n    textAlign: 'center',\n  },\n  linkButton: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    minWidth: 44,\n    alignItems: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  linkButtonPressed: {\n    opacity: 0.8,\n  },\n  linkText: {\n    color: colors.background.primary,\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  sortIconContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: 28,\n    justifyContent: 'center',\n    width: 16,\n    gap: 2,\n  },\n  sortIcon: {\n    color: colors.text.muted,\n    fontSize: 12,\n    width: 12,\n    height: 10,\n    lineHeight: 10,\n    textAlign: 'center',\n  },\n  sortIconUp: {\n    marginBottom: 0,\n  },\n  sortIconDown: {\n    marginTop: 0,\n  },\n  sortIconUpActive: {\n    color: colors.primary,\n    fontSize: 13,\n  },\n  sortIconDownActive: {\n    color: colors.primary,\n    fontSize: 13,\n  },\n  scrollViewContent: {\n    flexGrow: 0,\n  },\n  horizontalScrollView: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { spacing } from '../constants/spacing';\nimport { colors } from '../theme/colors';\n\ninterface ComparisonControlsProps {\n  selectedFoils: BaseProduct[];\n  onCompareSelected: () => void;\n  onExitCompare: () => void;\n  onClearSelection: () => void;\n  isComparisonView?: boolean;\n}\n\nconst WebWrapper = Platform.select({\n  web: ({ children }: { children: React.ReactNode }) => (\n    <div style={{\n      position: 'fixed',\n      bottom: 64,  // 48px footer height + 16px spacing\n      left: 0,\n      right: 0,\n      zIndex: 2000,\n      pointerEvents: 'none',\n    }}>\n      <div style={{ \n        pointerEvents: 'auto', \n        display: 'flex', \n        justifyContent: 'flex-end', \n        paddingRight: spacing.LARGE,\n        paddingBottom: 0,\n      }}>\n        {children}\n      </div>\n    </div>\n  ),\n  default: ({ children }: { children: React.ReactNode }) => <>{children}</>,\n});\n\nconst ComparisonControls = ({ selectedFoils, onCompareSelected, onExitCompare, onClearSelection, isComparisonView }: ComparisonControlsProps) => {\n  // Only show controls if there are selected foils or we're in comparison view\n  if (selectedFoils.length === 0 && !isComparisonView) {\n    return null;\n  }\n\n  const content = !isComparisonView ? (\n    <View style={styles.comparisonBar}>\n      <Text style={styles.selectionText}>\n        Selected: {selectedFoils.length}\n      </Text>\n      <View style={styles.buttonGroup}>\n        <Pressable\n          style={[styles.button, styles.clearButton]}\n          onPress={onClearSelection}\n        >\n          <Text style={[styles.buttonText, styles.clearButtonText]}>Clear</Text>\n        </Pressable>\n        <Pressable\n          style={[styles.button, selectedFoils.length < 2 && styles.buttonDisabled]}\n          onPress={onCompareSelected}\n          disabled={selectedFoils.length < 2}\n        >\n          <Text style={styles.buttonText}>Compare</Text>\n        </Pressable>\n      </View>\n    </View>\n  ) : (\n    <View style={styles.comparisonBar}>\n      <Pressable\n        style={[styles.button, styles.cancelButton]}\n        onPress={onExitCompare}\n      >\n        <Text style={styles.buttonText}>Back</Text>\n      </Pressable>\n    </View>\n  );\n\n  return Platform.OS === 'web' ? (\n    <WebWrapper>{content}</WebWrapper>\n  ) : (\n    <View style={styles.container}>\n      {content}\n    </View>\n  );\n};\n\nexport default ComparisonControls;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    paddingBottom: 8,\n    backgroundColor: colors.background.secondary,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n  },\n  comparisonBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    gap: spacing.MEDIUM,\n    backgroundColor: 'transparent',\n  },\n  floatingButton: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    gap: spacing.MEDIUM,\n  },\n  button: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonDisabled: {\n    backgroundColor: colors.text.muted,\n    opacity: 0.5,\n  },\n  clearButton: {\n    backgroundColor: colors.background.primary,\n    borderWidth: 1,\n    borderColor: colors.secondary,\n  },\n  cancelButton: {\n    backgroundColor: colors.secondary,\n  },\n  buttonText: {\n    color: colors.background.primary,\n    fontWeight: '600',\n    fontSize: 14,\n  },\n  selectionText: {\n    fontSize: 14,\n    color: colors.text.secondary,\n    marginRight: spacing.MEDIUM,\n  },\n  selectedCount: {\n    color: colors.text.secondary,\n    fontSize: 16,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  compareButton: {\n    backgroundColor: colors.primary,\n  },\n  compareButtonText: {\n    color: colors.background.primary,\n  },\n  clearButtonText: {\n    color: colors.secondary,\n  }\n}); ","export const spacing = {\n  SMALL: 8,\n  MEDIUM: 12,\n  LARGE: 16,\n  XLARGE: 24,\n}; ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FoilsTable } from './FoilsTable';\nimport { BaseProduct } from '../types/scraper';\nimport { SortField } from '../hooks/useSortedFoils';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\n\ninterface ComparisonViewProps {\n  foils: BaseProduct[];\n  onClose?: () => void;\n  onCompare?: () => void;\n}\n\nconst ComparisonView = ({ foils, onClose, onCompare }: ComparisonViewProps) => {\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(foils);\n  \n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleSelect = () => {};\n  const isSelected = () => false;\n\n  return (\n    <View style={styles.container}>\n      <FoilsTable\n        foils={sortedFoils}\n        onSort={handleSort}\n        onFoilSelect={handleSelect}\n        isSelected={isSelected}\n        sortOption={{\n          field: sortOption.field,\n          ascending: sortOption.direction === 'asc'\n        }}\n      />\n    </View>\n  );\n};\n\nexport default ComparisonView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  }\n});","import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { colors } from '../theme/colors';\n\nexport default function Footer() {\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { width } = useWindowDimensions();\n  const isMobile = width < 768;\n\n  return (\n    <View style={[styles.container, isMobile && styles.containerMobile]}>\n      <View style={[styles.content, isMobile && styles.contentMobile]}>\n        <View style={[styles.linkGroup, isMobile && styles.linkGroupMobile]}>\n          <Pressable onPress={() => navigation.navigate('Terms')}>\n            <Text style={styles.link}>Terms of Service</Text>\n          </Pressable>\n          <Text style={styles.separator}>•</Text>\n          <Pressable onPress={() => navigation.navigate('Privacy')}>\n            <Text style={styles.link}>Privacy Policy</Text>\n          </Pressable>\n          <Text style={styles.separator}>•</Text>\n          <Pressable onPress={() => navigation.navigate('Contact')}>\n            <Text style={styles.link}>Contact Us</Text>\n          </Pressable>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.background.primary,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n    padding: 16,\n  },\n  containerMobile: {\n    padding: 12,\n  },\n  content: {\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  contentMobile: {\n    flexDirection: 'column',\n    gap: 8,\n  },\n  linkGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n  },\n  linkGroupMobile: {\n    gap: 8,\n  },\n  link: {\n    color: colors.text.secondary,\n    fontSize: 14,\n  },\n  separator: {\n    color: colors.text.muted,\n    fontSize: 14,\n  },\n}); ","import { Helmet } from 'react-helmet-async';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  canonicalUrl?: string;\n  imageUrl?: string;\n}\n\nexport const SEOHead: React.FC<SEOHeadProps> = ({\n  title,\n  description,\n  canonicalUrl,\n  imageUrl\n}) => {\n  const siteTitle = 'FoilQuiver';\n  const fullTitle = `${title} | ${siteTitle}`;\n  \n  return (\n    <Helmet>\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      {imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n      \n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      {imageUrl && <meta name=\"twitter:image\" content={imageUrl} />}\n    </Helmet>\n  );\n}; ","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, Platform } from 'react-native';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { useFoils } from '../hooks/useFoils';\nimport { useSearchFoils } from '../hooks/useSearchFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { useSortedFoils, SortField, SortOption } from '../hooks/useSortedFoils';\nimport { useComparison } from '../hooks/useComparison';\nimport { FilterControls } from '../components/FilterControls';\nimport { FoilsTable } from '../components/FoilsTable';\nimport ComparisonControls from '../components/ComparisonControls';\nimport ComparisonView from '../components/ComparisonView';\nimport Footer from '../components/Footer';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { SEOHead } from '../components/SEOHead';\nimport { RootStackParamList } from '../types/navigation';\nimport { colors } from '../theme/colors';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Browse'>;\n\nexport default function BrowseScreen({ route, navigation }: Props) {\n  const { foils, loading, error, refreshFoils } = useFoils();\n  const [isComparisonView, setIsComparisonView] = useState(false);\n  const { \n    filters, \n    setFilters, \n    filteredFoils, \n    filterOptions \n  } = useFilteredFoils(foils);\n\n  const { searchedFoils } = useSearchFoils(filteredFoils, route.params?.searchQuery || '');\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(searchedFoils);\n  const { \n    selectedFoils,\n    toggleFoilSelection,\n    isSelected,\n    clearSelection\n  } = useComparison();\n\n  const handleFilterChange = (type: keyof FilterOptions, value: string) => {\n    setFilters(prev => {\n      if (type === 'type') {\n        const typeValue = value as 'front' | 'tail';\n        return { ...prev, type: prev.type === typeValue ? null : typeValue };\n      }\n      const array = prev[type] as string[];\n      return {\n        ...prev,\n        [type]: array.includes(value)\n          ? array.filter(item => item !== value)\n          : [...array, value],\n      };\n    });\n  };\n\n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleCompareSelected = () => {\n    setIsComparisonView(true);\n  };\n\n  const handleExitCompare = () => {\n    setIsComparisonView(false);\n  };\n\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return <Text style={styles.error}>{error}</Text>;\n  }\n\n  return (\n    <>\n      <SEOHead\n        title=\"FoilQuiver - Browse and compare hydrofoils\"\n        description={`Compare ${foils.length} hydrofoils across ${filterOptions.brands.length} brands. Filter by type, brand, and specifications to find your perfect foil.`}\n        canonicalUrl=\"https://foilquiver.com/browse\"\n      />\n      <View style={[styles.container, styles.containerWeb]}>\n        <FilterControls\n          filterOptions={{\n            brands: filterOptions.brands,\n            series: filterOptions.series,\n            types: ['front', 'tail']\n          }}\n          selectedBrands={filters.brands}\n          selectedSeries={filters.series}\n          selectedTypes={filters.type ? [filters.type] : []}\n          onFilterChange={handleFilterChange}\n        />\n        <View style={[styles.tableContainer, styles.tableContainerWeb]}>\n          {isComparisonView ? (\n            <ComparisonView \n              foils={selectedFoils} \n              onClose={handleExitCompare}\n              onCompare={() => {}}\n            />\n          ) : (\n            <FoilsTable\n              foils={sortedFoils}\n              onSort={handleSort}\n              onFoilSelect={toggleFoilSelection}\n              isSelected={isSelected}\n              sortOption={{\n                field: sortOption.field,\n                ascending: sortOption.direction === 'asc'\n              }}\n            />\n          )}\n        </View>\n        <ComparisonControls\n          selectedFoils={selectedFoils}\n          onCompareSelected={handleCompareSelected}\n          onExitCompare={handleExitCompare}\n          onClearSelection={clearSelection}\n          isComparisonView={isComparisonView}\n        />\n        <Footer />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background.primary,\n  },\n  containerWeb: Platform.OS === 'web' ? {\n    minHeight: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  } as any : {},\n  tableContainer: {\n    flex: 1,\n    padding: 0,\n    backgroundColor: colors.background.primary,\n    minHeight: 0,\n  },\n  tableContainerWeb: Platform.OS === 'web' ? {\n    overflow: 'scroll',\n  } : {},\n  error: {\n    color: 'red',\n    padding: 16,\n    textAlign: 'center',\n  },\n}); ","import { useState, useEffect } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { ProductService } from '../services/productService';\n\nexport function useFoils() {\n  const [foils, setFoils] = useState<BaseProduct[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadFoils = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const products = await ProductService.getAllProducts();\n      setFoils(products);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load foils');\n      console.error('Error loading foils:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadFoils();\n  }, []);\n\n  const refreshFoils = () => {\n    loadFoils();\n  };\n\n  return {\n    foils,\n    loading,\n    error,\n    refreshFoils\n  };\n} ","import { useState, useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\n\nexport function useFilteredFoils(foils: BaseProduct[]) {\n  const [filters, setFilters] = useState<FilterOptions>({\n    brands: [],\n    series: [],\n    type: null,\n  });\n\n  const filterOptions = useMemo(() => {\n    const brands = Array.from(new Set(foils.map(foil => foil.brand)));\n    const allSeries = Array.from(new Set(foils.map(foil => foil.series)));\n    const types = ['front', 'tail'];\n\n    // Create brandSeries mapping\n    const brandSeries = brands.reduce((acc, brand) => {\n      acc[brand] = Array.from(new Set(\n        foils\n          .filter(foil => foil.brand === brand)\n          .map(foil => foil.series)\n      ));\n      return acc;\n    }, {} as Record<string, string[]>);\n\n    // Filter foils based on selected type\n    const typeFilteredFoils = filters.type \n      ? foils.filter(foil => foil.type === filters.type)\n      : foils;\n\n    // Get series based on type-filtered foils\n    const typeFilteredSeries = Array.from(new Set(typeFilteredFoils.map(foil => foil.series)));\n\n    // Filter series based on selected brands and type\n    const series = filters.brands.length > 0\n      ? Array.from(new Set(\n          typeFilteredFoils\n            .filter(foil => filters.brands.includes(foil.brand))\n            .map(foil => foil.series)\n        ))\n      : typeFilteredSeries;\n\n    return {\n      brands,\n      series,\n      types,\n      brandSeries,\n    };\n  }, [foils, filters.brands, filters.type]);\n\n  const filteredFoils = useMemo(() => {\n    return foils.filter(foil => {\n      const brandMatch = filters.brands.length === 0 || filters.brands.includes(foil.brand);\n      const seriesMatch = filters.series.length === 0 || filters.series.includes(foil.series);\n      const typeMatch = !filters.type || foil.type === filters.type;\n\n      return brandMatch && seriesMatch && typeMatch;\n    });\n  }, [foils, filters]);\n\n  return {\n    filters,\n    setFilters,\n    filteredFoils,\n    filterOptions,\n  };\n} ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useSearchFoils(foils: BaseProduct[], searchQuery: string) {\n  const searchedFoils = useMemo(() => {\n    if (!searchQuery.trim()) {\n      return foils;\n    }\n\n    const query = searchQuery.toLowerCase().trim();\n    return foils.filter(foil => {\n      const searchableFields = [\n        foil.brand,\n        foil.model,\n        foil.series,\n        foil.specs.area.toString(),\n        foil.specs.wingspan.toString(),\n        foil.specs.aspectRatio.toString(),\n      ];\n\n      return searchableFields.some(field => \n        field.toLowerCase().includes(query)\n      );\n    });\n  }, [foils, searchQuery]);\n\n  return { searchedFoils };\n} ","import { useState, useCallback } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useComparison() {\n  const [selectedFoils, setSelectedFoils] = useState<BaseProduct[]>([]);\n\n  const toggleFoilSelection = useCallback((foil: BaseProduct) => {\n    setSelectedFoils(prev => {\n      const isAlreadySelected = prev.some(f => f.model === foil.model && f.brand === foil.brand);\n      if (isAlreadySelected) {\n        return prev.filter(f => !(f.model === foil.model && f.brand === foil.brand));\n      }\n      return [...prev, foil];\n    });\n  }, []);\n\n  const isSelected = useCallback((foil: BaseProduct) => {\n    return selectedFoils.some(f => f.model === foil.model && f.brand === foil.brand);\n  }, [selectedFoils]);\n\n  const clearSelection = useCallback(() => {\n    setSelectedFoils([]);\n  }, []);\n\n  return {\n    selectedFoils,\n    toggleFoilSelection,\n    isSelected,\n    clearSelection,\n  };\n} "],"names":["ProductService","_createClass","_classCallCheck","key","value","_getAllProducts","_asyncToGenerator","this","isWeb","baseUrl","getBaseUrl","response","fetch","DATA_PATH","ok","json","error","allProducts","brand","CACHE_DIR","products","push","apply","_toConsumableArray","length","cached","AsyncStorage","getItem","JSON","parse","arguments","useSortedFoils","foils","_useState","useState","field","direction","_useState2","_slicedToArray","sortOption","setSortOption","sortedFoils","useMemo","sort","a","b","valueA","valueB","toLowerCase","price","specs","multiplier","localeCompare","FilterControls","_ref","filterOptions","selectedBrands","selectedSeries","selectedTypes","onFilterChange","isExpanded","setIsExpanded","_useState3","Animated","Value","animation","_useState5","_useState6","contentHeight","setContentHeight","animatedHeight","interpolate","inputRange","outputRange","_jsxs","View","style","styles","wrapper","children","Pressable","onPress","toValue","spring","useNativeDriver","friction","start","header","headerContent","_jsx","Text","headerTitle","filterSummary","filterCount","Ionicons","name","size","color","colors","text","secondary","content","height","container","onLayout","event","nativeEvent","layout","section","sectionTitle","chipContainer","brands","map","chip","includes","chipSelected","chipText","chipTextSelected","types","type","series","StyleSheet","create","backgroundColor","background","primary","marginBottom","borderRadius","borderWidth","borderColor","border","overflow","flexDirection","justifyContent","alignItems","padding","flex","gap","fontSize","fontWeight","paddingTop","flexWrap","paddingHorizontal","paddingVertical","MOBILE_BREAKPOINT","TABLE_WIDTH","FoilsTable","onSort","onFoilSelect","isSelected","isMobile","useWindowDimensions","width","renderSortIcon","isActive","sortIconContainer","sortIcon","sortIconUp","ascending","sortIconUpActive","sortIconDown","sortIconDownActive","getHeaderTextStyle","headerText","containerMobile","tableWrapper","tableWrapperMobile","ScrollView","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","scrollViewContent","horizontalScrollView","scrollViewMobile","scrollEventThrottle","decelerationRate","snapToAlignment","directionalLockEnabled","alwaysBounceHorizontal","overScrollMode","tableContent","tableHeader","headerRow","headerCell","modelCell","typeCell","seriesCell","numberHeaderCell","numberHeaderText","linkHeaderCell","linkHeaderText","scrollViewContainer","scrollView","foil","index","_foil$specs$aspectRat","_ref2","pressed","row","rowEven","rowSelected","rowHovered","cell","model","numberCell","area","wingspan","aspectRatio","toFixed","linkCell","sourceUrl","e","stopPropagation","window","open","_ref3","linkButton","linkButtonPressed","linkText","_objectSpread","WebkitOverflowScrolling","borderBottomWidth","borderBottomColor","borderRightWidth","borderRightColor","cursor","textAlign","borderTopRightRadius","borderBottomRightRadius","minWidth","opacity","muted","lineHeight","marginTop","flexGrow","WebWrapper","position","bottom","left","right","zIndex","pointerEvents","display","paddingRight","paddingBottom","selectedFoils","onCompareSelected","onExitCompare","onClearSelection","isComparisonView","comparisonBar","button","cancelButton","buttonText","selectionText","buttonGroup","clearButton","clearButtonText","buttonDisabled","disabled","borderTopWidth","borderTopColor","floatingButton","alignSelf","boxShadow","marginRight","selectedCount","buttonContainer","compareButton","compareButtonText","_useSortedFoils","onClose","onCompare","prev","Footer","navigation","useNavigation","contentMobile","linkGroup","linkGroupMobile","navigate","link","separator","maxWidth","marginHorizontal","SEOHead","title","description","canonicalUrl","imageUrl","fullTitle","Helmet","rel","href","property","BrowseScreen","_route$params","route","_useFoils","setFoils","_useState4","loading","setLoading","setError","loadFoils","getAllProducts","err","Error","message","useEffect","refreshFoils","useFoils","setIsComparisonView","_useFilteredFoils","filters","setFilters","Array","from","Set","brandSeries","reduce","acc","filter","typeFilteredFoils","typeFilteredSeries","filteredFoils","brandMatch","seriesMatch","typeMatch","useFilteredFoils","_useSearchFoils","searchQuery","searchedFoils","trim","query","toString","some","useSearchFoils","params","_useComparison","setSelectedFoils","toggleFoilSelection","useCallback","f","concat","clearSelection","useComparison","handleExitCompare","LoadingIndicator","_Fragment","containerWeb","typeValue","array","_defineProperty","item","tableContainer","tableContainerWeb","ComparisonView","ComparisonControls","minHeight"],"sourceRoot":""}