{"version":3,"file":"static/js/main.7344a4e2.js","mappings":"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","sources":[".cache|sync|/^/.//.*/.json$","src/services/productService.ts","src/hooks/useSortedFoils.ts","src/utils/sorting.ts","src/components/FilterPanel.tsx","src/components/FilterControls.tsx","src/constants/config.ts","src/utils/dataTransform.ts","src/constants/colors.ts","src/constants/spacing.ts","src/components/FoilsTable.tsx","src/components/ComparisonControls.tsx","src/components/ComparisonView.tsx","src/components/LoadingIndicator.tsx","src/components/ErrorMessage.tsx","src/components/Footer.tsx","src/screens/BrowseScreen.tsx","src/hooks/useFoils.ts","src/hooks/useSearchFoils.ts","src/hooks/useFilteredFoils.ts","src/hooks/useComparison.ts","src/screens/legal/PrivacyPolicy.tsx","src/screens/legal/TermsOfService.tsx","src/components/ErrorBoundary.tsx","src/components/SearchBar.tsx","App.tsx","index.ts","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["var map = {\n\t\"./armstrong-foils.json\": 6626,\n\t\"./axis-foils.json\": 5404,\n\t\"./code-foils.json\": 5264,\n\t\"./kt-foils.json\": 6970,\n\t\"./lift-foils.json\": 4556,\n\t\"./uni-foil.json\": 4532\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4396;","import { BaseProduct } from '../types/scraper';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport class ProductService {\n  private static isWeb = Platform.OS === 'web';\n\n  static async getAllProducts(): Promise<BaseProduct[]> {\n    try {\n      if (this.isWeb) {\n        // Try loading from public/data first\n        try {\n          const response = await fetch('/data/foils.json');\n          if (response.ok) {\n            const products = await response.json();\n            console.log(`Loaded ${products.length} products from public/data/foils.json`);\n            return products;\n          }\n        } catch (error) {\n          console.warn('Failed to load from public/data, trying .cache directory...');\n        }\n\n        // Try loading from .cache as fallback\n        try {\n          const brands = ['Uni Foil', 'Code Foils', 'Axis Foils', 'KT Foils', 'Lift Foils', 'Armstrong Foils'];\n          const allProducts: BaseProduct[] = [];\n          \n          for (const brand of brands) {\n            try {\n              const products = require(`../../.cache/${brand.toLowerCase().replace(/\\s+/g, '-')}.json`);\n              if (products) {\n                console.log(`Loaded ${products.length} products for ${brand} from .cache`);\n                allProducts.push(...products);\n              }\n            } catch (error) {\n              console.warn(`No cache file found for ${brand}`);\n            }\n          }\n\n          if (allProducts.length > 0) {\n            return allProducts;\n          }\n        } catch (error) {\n          console.warn('Failed to load from .cache directory');\n        }\n      } else {\n        // For mobile, use AsyncStorage\n        const cached = await AsyncStorage.getItem('foils');\n        if (cached) {\n          const products = JSON.parse(cached);\n          console.log(`Loaded ${products.length} products from AsyncStorage`);\n          return products;\n        }\n      }\n    } catch (error) {\n      console.error('Error loading foils data:', error);\n    }\n    \n    console.warn('No foils data found');\n    return [];\n  }\n} ","import { useState, useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { sortProducts } from '../utils/sorting';\n\nexport type SortField = 'brand' | 'series' | 'model' | 'price' | 'area' | 'wingspan' | 'aspectRatio' | 'cord' | 'type' | 'link';\nexport type SortDirection = 'asc' | 'desc';\n\nexport interface SortOption {\n  field: SortField;\n  direction: SortDirection;\n}\n\nexport function useSortedFoils(foils: BaseProduct[]) {\n  const [sortOption, setSortOption] = useState<SortOption>({\n    field: 'area',\n    direction: 'asc'\n  });\n\n  const sortedFoils = useMemo(() => {\n    return sortProducts(foils, sortOption.field, sortOption.direction);\n  }, [foils, sortOption]);\n\n  return {\n    sortOption,\n    setSortOption,\n    sortedFoils\n  };\n} ","import { BaseProduct } from '../types/scraper';\nimport { SortField, SortDirection } from '../hooks/useSortedFoils';\n\nexport function sortProducts(\n  products: BaseProduct[],\n  field: SortField,\n  direction: SortDirection\n): BaseProduct[] {\n  return [...products].sort((a, b) => {\n    let valueA: string | number;\n    let valueB: string | number;\n\n    if (field === 'brand' || field === 'series' || field === 'model') {\n      valueA = a[field].toLowerCase();\n      valueB = b[field].toLowerCase();\n    } else if (field === 'price') {\n      valueA = a.price || 0;\n      valueB = b.price || 0;\n    } else {\n      valueA = a.specs[field];\n      valueB = b.specs[field];\n    }\n    \n    const multiplier = direction === 'asc' ? 1 : -1;\n    \n    if (typeof valueA === 'string') {\n      return valueA.localeCompare(valueB as string) * multiplier;\n    }\n    return (valueA - valueB) * multiplier;\n  });\n} ","import React, { useState, useRef } from 'react';\nimport { View, Text, Pressable, StyleSheet, Animated, ScrollView, LayoutChangeEvent } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\ninterface FilterPanelProps {\n  filters: {\n    brands: string[];\n    series: string[];\n    type: 'front' | 'tail' | null;\n  };\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    brandSeries: Record<string, string[]>;\n  };\n  onBrandFilter: (brand: string) => void;\n  onSeriesFilter: (series: string) => void;\n  onTypeFilter: (type: 'front' | 'tail' | null) => void;\n}\n\nexport function FilterPanel({\n  filters,\n  filterOptions,\n  onBrandFilter,\n  onSeriesFilter,\n  onTypeFilter,\n}: FilterPanelProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [animation] = useState(new Animated.Value(0));\n  const [contentHeight, setContentHeight] = useState(0);\n\n  const toggleExpanded = () => {\n    const toValue = isExpanded ? 0 : 1;\n    Animated.spring(animation, {\n      toValue,\n      useNativeDriver: false,\n    }).start();\n    setIsExpanded(!isExpanded);\n  };\n\n  const handleLayout = (event: LayoutChangeEvent) => {\n    const { height } = event.nativeEvent.layout;\n    setContentHeight(height);\n  };\n\n  const animatedHeight = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, contentHeight],\n  });\n\n  return (\n    <View style={styles.container}>\n      <Pressable onPress={toggleExpanded} style={styles.header}>\n        <Text style={styles.headerText}>Filters</Text>\n        <Ionicons \n          name={isExpanded ? 'chevron-up' : 'chevron-down'} \n          size={24} \n          color=\"#666\"\n        />\n      </Pressable>\n\n      <Animated.View style={[styles.content, { height: animatedHeight }]}>\n        <View style={styles.scrollContainer} onLayout={handleLayout}>\n          <View style={styles.filterSection}>\n            <View style={styles.filterRow}>\n              <Text style={styles.filterTitle}>Type:</Text>\n              <View style={styles.filterButtons}>\n                <Pressable\n                  style={[\n                    styles.filterButton,\n                    filters.type === 'front' && styles.filterButtonActive,\n                  ]}\n                  onPress={() => onTypeFilter(filters.type === 'front' ? null : 'front')}\n                >\n                  <Text style={[\n                    styles.filterButtonText,\n                    filters.type === 'front' && styles.filterButtonTextActive,\n                  ]}>Front</Text>\n                </Pressable>\n                <Pressable\n                  style={[\n                    styles.filterButton,\n                    filters.type === 'tail' && styles.filterButtonActive,\n                  ]}\n                  onPress={() => onTypeFilter(filters.type === 'tail' ? null : 'tail')}\n                >\n                  <Text style={[\n                    styles.filterButtonText,\n                    filters.type === 'tail' && styles.filterButtonTextActive,\n                  ]}>Tail</Text>\n                </Pressable>\n              </View>\n            </View>\n          </View>\n\n          <View style={styles.filterSection}>\n            <View style={styles.filterRow}>\n              <Text style={styles.filterTitle}>Brand:</Text>\n              <View style={styles.filterButtons}>\n                {filterOptions.brands.map(brand => (\n                  <Pressable\n                    key={brand}\n                    style={[\n                      styles.filterButton,\n                      filters.brands.includes(brand) && styles.filterButtonActive,\n                    ]}\n                    onPress={() => onBrandFilter(brand)}\n                  >\n                    <Text style={[\n                      styles.filterButtonText,\n                      filters.brands.includes(brand) && styles.filterButtonTextActive,\n                    ]}>{brand}</Text>\n                  </Pressable>\n                ))}\n              </View>\n            </View>\n          </View>\n\n          <View style={styles.filterSection}>\n            <View style={styles.filterRow}>\n              <Text style={styles.filterTitle}>Series:</Text>\n              <View style={styles.filterButtons}>\n                {filterOptions.series.map(series => (\n                  <Pressable\n                    key={series}\n                    style={[\n                      styles.filterButton,\n                      filters.series.includes(series) && styles.filterButtonActive,\n                    ]}\n                    onPress={() => onSeriesFilter(series)}\n                  >\n                    <Text style={[\n                      styles.filterButtonText,\n                      filters.series.includes(series) && styles.filterButtonTextActive,\n                    ]}>{series}</Text>\n                  </Pressable>\n                ))}\n              </View>\n            </View>\n          </View>\n        </View>\n      </Animated.View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 12,\n  },\n  headerText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  content: {\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  scrollContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n  },\n  filterSection: {\n    padding: 8,\n    borderTopWidth: 1,\n    borderTopColor: '#eee',\n  },\n  filterRow: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  filterTitle: {\n    fontSize: 14,\n    color: '#666',\n    marginRight: 8,\n    minWidth: 50,\n    paddingTop: 6, // Align with filter buttons\n  },\n  filterButtons: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 6,\n  },\n  filterButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    backgroundColor: 'white',\n    borderWidth: 1,\n    borderColor: '#ddd',\n    marginBottom: 4,\n  },\n  filterButtonActive: {\n    backgroundColor: '#007AFF',\n    borderColor: '#007AFF',\n  },\n  filterButtonText: {\n    color: '#333',\n    fontSize: 13,\n  },\n  filterButtonTextActive: {\n    color: 'white',\n  },\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FilterPanel } from './FilterPanel';\nimport { FilterOptions } from '../types/filters';\n\ninterface FilterControlsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n    brandSeries: Record<string, string[]>;\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (filterType: keyof FilterOptions, values: string[]) => void;\n}\n\nexport function FilterControls({\n  filterOptions,\n  selectedBrands = [],\n  selectedSeries = [],\n  selectedTypes = [],\n  onFilterChange,\n}: FilterControlsProps) {\n  const handleBrandFilter = (brand: string) => {\n    const newBrands = selectedBrands.includes(brand)\n      ? selectedBrands.filter(b => b !== brand)\n      : [...selectedBrands, brand];\n    onFilterChange('brands', newBrands);\n  };\n\n  const handleSeriesFilter = (series: string) => {\n    const newSeries = selectedSeries.includes(series)\n      ? selectedSeries.filter(s => s !== series)\n      : [...selectedSeries, series];\n    onFilterChange('series', newSeries);\n  };\n\n  const handleTypeFilter = (type: 'front' | 'tail' | null) => {\n    onFilterChange('type', type ? [type] : []);\n  };\n\n  return (\n    <View style={styles.container}>\n      <FilterPanel\n        filters={{\n          brands: selectedBrands,\n          series: selectedSeries,\n          type: selectedTypes.length > 0 ? selectedTypes[0] as 'front' | 'tail' : null,\n        }}\n        filterOptions={filterOptions}\n        onBrandFilter={handleBrandFilter}\n        onSeriesFilter={handleSeriesFilter}\n        onTypeFilter={handleTypeFilter}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n}); ","export const MEASUREMENTS = {\n  AREA: {\n    METRIC: 'cm²',\n    IMPERIAL: 'in²',\n  },\n  LENGTH: {\n    METRIC: 'mm',\n    IMPERIAL: 'in',\n  },\n};\n\nexport const CACHE = {\n  DURATION: 24 * 60 * 60 * 1000, // 24 hours\n  PREFIX: 'scraper_cache_',\n};\n\nexport const TABLE = {\n  DEFAULT_SORT: {\n    FIELD: 'area' as const,\n    DIRECTION: 'asc' as const,\n  },\n  CELL_MIN_WIDTH: {\n    BRAND: 100,\n    SERIES: 120,\n    MODEL: 150,\n    SPECS: 80,\n  },\n};\n\nexport const SCRAPER = {\n  RETRY_ATTEMPTS: 3,\n  RETRY_DELAY: 1000, // 1 second\n  TIMEOUT: 10000, // 10 seconds\n}; ","import { BaseProduct } from '../types/scraper';\n\nexport function formatMeasurement(value: number, unit: string): string {\n  return `${value}${unit}`;\n}\n\nexport function convertArea(cmSquared: number): number {\n  return Math.round(cmSquared * 0.155); // Convert to square inches\n}\n\nexport function calculateAspectRatio(wingspan: number, area: number): number {\n  return Math.round((wingspan * wingspan / area) * 100) / 100;\n}\n\nexport function groupFoilsByBrand(foils: BaseProduct[]): Record<string, BaseProduct[]> {\n  return foils.reduce((acc, foil) => {\n    if (!acc[foil.brand]) {\n      acc[foil.brand] = [];\n    }\n    acc[foil.brand].push(foil);\n    return acc;\n  }, {} as Record<string, BaseProduct[]>);\n}\n\nexport function groupFoilsBySeries(foils: BaseProduct[]): Record<string, BaseProduct[]> {\n  return foils.reduce((acc, foil) => {\n    if (!acc[foil.series]) {\n      acc[foil.series] = [];\n    }\n    acc[foil.series].push(foil);\n    return acc;\n  }, {} as Record<string, BaseProduct[]>);\n}\n\nexport function getUniqueValues(foils: BaseProduct[], key: keyof BaseProduct): string[] {\n  return Array.from(new Set(foils.map(foil => foil[key] as string))).sort();\n} ","export const colors = {\n  BORDER: '#eee',\n  LIGHT_GRAY: '#f5f5f5',\n  TEXT_PRIMARY: '#1c1c1e',\n  SELECTED_ROW: '#e6f3ff',\n  HOVER_ROW: '#f8f9fa',\n  LINK: '#0066cc',\n}; ","export const spacing = {\n  SMALL: 8,\n  MEDIUM: 12,\n  LARGE: 16,\n  XLARGE: 24,\n}; ","import React, { useMemo } from 'react';\nimport { View, Text, Pressable, ScrollView, StyleSheet, Platform, ViewStyle } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { SortOption, SortField } from '../hooks/useSortedFoils';\nimport { tableConfig } from '../config/tableConfig';\nimport { MEASUREMENTS, TABLE } from '../constants/config';\nimport { formatMeasurement } from '../utils/dataTransform';\nimport { colors } from '../constants/colors';\nimport { spacing } from '../constants/spacing';\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  sortOption: SortOption;\n  onSort: (field: SortField) => void;\n  comparisonMode: boolean;\n  isSelected: (foil: BaseProduct) => boolean;\n  onFoilSelect: (foil: BaseProduct) => void;\n}\n\nexport const FoilsTable: React.FC<FoilsTableProps> = ({\n  foils,\n  sortOption,\n  onSort,\n  comparisonMode,\n  isSelected,\n  onFoilSelect,\n}) => {\n  // Calculate max widths for each column\n  const columnWidths = useMemo(() => {\n    const baseWidths = {\n      brand: 100,      // Base width for \"Brand\" + sort indicator\n      series: 120,     // Base width for \"Series\" + sort indicator\n      model: 160,      // Base width for longer model names\n      wingspan: 100,   // Width for \"Wingspan\" + numbers + unit\n      area: 100,       // Width for \"Area\" + numbers + unit\n      aspectRatio: 80, // Width for \"AR\" + numbers\n      cord: 90,        // Width for \"Cord\" + numbers + unit\n      type: 80,        // Width for \"Type\" + sort indicator\n      price: 90,       // Width for \"Price\" + numbers\n      link: 100,       // Width for \"Product Link\"\n    };\n\n    // Find maximum content lengths\n    foils.forEach(foil => {\n      const brandWidth = (foil.brand?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.brand = Math.max(baseWidths.brand, brandWidth);\n      \n      const seriesWidth = (foil.series?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.series = Math.max(baseWidths.series, seriesWidth);\n      \n      const modelWidth = (foil.model?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.model = Math.max(baseWidths.model, modelWidth);\n    });\n\n    return baseWidths;\n  }, [foils]);\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    row: {\n      flexDirection: 'row',\n      borderBottomWidth: 1,\n      borderBottomColor: colors.BORDER,\n    },\n    headerRow: {\n      flexDirection: 'row',\n      backgroundColor: colors.LIGHT_GRAY,\n      borderBottomColor: colors.BORDER,\n      borderBottomWidth: 1,\n    },\n    cell: {\n      padding: spacing.MEDIUM,\n      justifyContent: 'center',\n    },\n    textCell: {\n      alignItems: 'flex-start',\n    },\n    numericCell: {\n      alignItems: 'flex-end',\n    },\n    brandCell: {\n      width: columnWidths.brand,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    seriesCell: {\n      width: columnWidths.series,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    modelCell: {\n      width: columnWidths.model,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    wingspanCell: {\n      width: columnWidths.wingspan,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    areaCell: {\n      width: columnWidths.area,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    arCell: {\n      width: columnWidths.aspectRatio,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    cordCell: {\n      width: columnWidths.cord,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    typeCell: {\n      width: columnWidths.type,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    priceCell: {\n      width: columnWidths.price,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    linkCell: {\n      width: columnWidths.link,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    headerText: {\n      fontWeight: 'bold',\n      color: colors.TEXT_PRIMARY,\n      flex: 1,\n    },\n    numericText: {\n      textAlign: 'right',\n      width: '100%',\n    },\n    headerContent: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      width: '100%',\n    },\n    headerNumericContent: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      width: '100%',\n      gap: spacing.MEDIUM,\n    },\n    sortIndicator: {\n      width: 24,\n      textAlign: 'center',\n    },\n    selectable: Platform.select<ViewStyle>({\n      web: {\n        cursor: 'pointer',\n      },\n      default: {}\n    }),\n    selectedRow: {\n      backgroundColor: colors.SELECTED_ROW,\n    },\n    cellContent: {\n      width: '100%',\n    },\n    link: {\n      color: colors.LINK,\n      textDecorationLine: 'underline',\n    },\n    headerCell: {\n      ...Platform.select({\n        web: {\n          cursor: 'pointer',\n        },\n        default: {},\n      }),\n      backgroundColor: colors.headerBackground,\n      padding: spacing.small,\n      borderBottomWidth: 1,\n      borderBottomColor: colors.border,\n    },\n  });\n\n  const getSortIndicator = (field: SortField) => {\n    if (sortOption.field !== field) return '○';\n    return sortOption.direction === 'asc' ? '↑' : '↓';\n  };\n\n  const renderHeaderContent = (text: string, field: SortField, isNumeric: boolean = false) => (\n    <View style={isNumeric ? styles.headerNumericContent : styles.headerContent}>\n      <Text style={[styles.headerText, isNumeric && styles.numericText]}>{text}</Text>\n      <Text style={styles.sortIndicator}>{getSortIndicator(field)}</Text>\n    </View>\n  );\n\n  const renderRow = (foil: BaseProduct) => {\n    const rowKey = `row-${foil.brand}-${foil.model}`.toLowerCase().replace(/\\s+/g, '-');\n    const selected = isSelected(foil);\n    \n    return (\n      <Pressable\n        key={rowKey}\n        onPress={() => {\n          if (comparisonMode) {\n            console.log('Toggling selection for:', foil.model);\n            onFoilSelect(foil);\n          }\n        }}\n        style={[\n          styles.row, \n          selected && styles.selectedRow,\n          comparisonMode && styles.selectable\n        ]}\n      >\n        <View style={[styles.cell, styles.textCell, styles.brandCell]}>\n          <View style={styles.cellContent}>\n            <Text>{foil.brand}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.textCell, styles.seriesCell]}>\n          <View style={styles.cellContent}>\n            <Text>{foil.series}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.textCell, styles.modelCell]}>\n          <View style={styles.cellContent}>\n            <Text>{foil.model}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.wingspanCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.numericText}>{formatMeasurement(foil.specs.wingspan || 0, MEASUREMENTS.LENGTH.METRIC)}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.areaCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.numericText}>{formatMeasurement(foil.specs.area || 0, MEASUREMENTS.AREA.METRIC)}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.arCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.numericText}>{foil.specs.aspectRatio?.toFixed(1) || '-'}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.cordCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.numericText}>{formatMeasurement(foil.specs.cord || 0, MEASUREMENTS.LENGTH.METRIC) || '-'}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.textCell, styles.typeCell]}>\n          <View style={styles.cellContent}>\n            <Text>{foil.type.charAt(0).toUpperCase() + foil.type.slice(1)}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.priceCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.numericText}>{foil.price ? `$${foil.price}` : '-'}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.textCell, styles.linkCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.link} onPress={() => Platform.OS === 'web' ? window.open(foil.sourceUrl, '_blank') : null}>\n              View\n            </Text>\n          </View>\n        </View>\n      </Pressable>\n    );\n  };\n\n  return (\n    <ScrollView horizontal style={styles.container}>\n      <View>\n        <View style={styles.headerRow}>\n          <Pressable style={[styles.cell, styles.textCell, styles.brandCell]} onPress={() => onSort('brand')}>\n            {renderHeaderContent('Brand', 'brand')}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.textCell, styles.seriesCell]} onPress={() => onSort('series')}>\n            {renderHeaderContent('Series', 'series')}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.textCell, styles.modelCell]} onPress={() => onSort('model')}>\n            {renderHeaderContent('Model', 'model')}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.numericCell, styles.wingspanCell]} onPress={() => onSort('wingspan')}>\n            {renderHeaderContent('Wingspan', 'wingspan', true)}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.numericCell, styles.areaCell]} onPress={() => onSort('area')}>\n            {renderHeaderContent('Area', 'area', true)}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.numericCell, styles.arCell]} onPress={() => onSort('aspectRatio')}>\n            {renderHeaderContent('AR', 'aspectRatio', true)}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.numericCell, styles.cordCell]} onPress={() => onSort('cord')}>\n            {renderHeaderContent('Cord', 'cord', true)}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.textCell, styles.typeCell]} onPress={() => onSort('type')}>\n            {renderHeaderContent('Type', 'type')}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.numericCell, styles.priceCell]} onPress={() => onSort('price')}>\n            {renderHeaderContent('Price', 'price', true)}\n          </Pressable>\n          <View style={[styles.cell, styles.textCell, styles.linkCell]}>\n            {renderHeaderContent('Product Link', 'link')}\n          </View>\n        </View>\n        {foils.map(renderRow)}\n      </View>\n    </ScrollView>\n  );\n}; ","import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { spacing } from '../constants/spacing';\n\ninterface ComparisonControlsProps {\n  comparisonMode: boolean;\n  selectedFoils: BaseProduct[];\n  onCompareStart: () => void;\n  onCompareSelected: () => void;\n  onExitCompare: () => void;\n  isComparisonView?: boolean;\n}\n\nconst WebWrapper = Platform.select({\n  web: ({ children }: { children: React.ReactNode }) => (\n    <div style={{\n      position: 'fixed',\n      bottom: 50,\n      left: 0,\n      right: 0,\n      zIndex: 1000,\n      pointerEvents: 'none',\n    }}>\n      <div style={{ pointerEvents: 'auto', display: 'flex', justifyContent: 'flex-end', paddingRight: spacing.LARGE }}>\n        {children}\n      </div>\n    </div>\n  ),\n  default: ({ children }: { children: React.ReactNode }) => <>{children}</>,\n});\n\nexport function ComparisonControls({\n  comparisonMode,\n  selectedFoils,\n  onCompareStart,\n  onCompareSelected,\n  onExitCompare,\n  isComparisonView = false,\n}: ComparisonControlsProps) {\n  const content = !comparisonMode ? (\n    <Pressable\n      style={styles.floatingButton}\n      onPress={onCompareStart}\n    >\n      <Text style={styles.buttonText}>Compare Foils</Text>\n    </Pressable>\n  ) : (\n    <View style={styles.comparisonBar}>\n      {!isComparisonView && (\n        <>\n          <Text style={styles.selectionText}>\n            Selected: {selectedFoils.length}\n          </Text>\n          <View style={styles.buttonGroup}>\n            <Pressable\n              style={[styles.button, selectedFoils.length < 2 && styles.buttonDisabled]}\n              onPress={onCompareSelected}\n              disabled={selectedFoils.length < 2}\n            >\n              <Text style={styles.buttonText}>Compare</Text>\n            </Pressable>\n          </View>\n        </>\n      )}\n      <Pressable\n        style={[styles.button, styles.cancelButton]}\n        onPress={onExitCompare}\n      >\n        <Text style={styles.buttonText}>Back</Text>\n      </Pressable>\n    </View>\n  );\n\n  return Platform.OS === 'web' ? (\n    <WebWrapper>{content}</WebWrapper>\n  ) : (\n    <View style={styles.container}>\n      {content}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    right: 0,\n    paddingHorizontal: spacing.LARGE,\n    pointerEvents: 'box-none',\n  },\n  comparisonBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    gap: spacing.MEDIUM,\n    backgroundColor: 'transparent',\n  },\n  floatingButton: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    gap: spacing.MEDIUM,\n  },\n  button: {\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonDisabled: {\n    backgroundColor: '#ccc',\n  },\n  cancelButton: {\n    backgroundColor: '#FF3B30',\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '600',\n    fontSize: 14,\n  },\n  selectionText: {\n    fontSize: 14,\n    color: '#666',\n    marginRight: spacing.MEDIUM,\n  },\n}); ","import React from 'react';\nimport { View, Text, ScrollView, StyleSheet } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { MEASUREMENTS } from '../constants/config';\nimport { formatMeasurement } from '../utils/dataTransform';\nimport { colors } from '../constants/colors';\nimport { spacing } from '../constants/spacing';\n\ninterface ComparisonViewProps {\n  foils: BaseProduct[];\n  onClose: () => void;\n  onCompare: () => void;\n}\n\nexport function ComparisonView({ foils, onClose, onCompare }: ComparisonViewProps) {\n  return (\n    <ScrollView horizontal style={styles.container}>\n      <View>\n        {/* Header Row */}\n        <View style={styles.headerRow}>\n          <View style={[styles.cell, styles.headerCell]}>\n            <Text style={styles.headerText}>Brand</Text>\n          </View>\n          <View style={[styles.cell, styles.headerCell]}>\n            <Text style={styles.headerText}>Series</Text>\n          </View>\n          <View style={[styles.cell, styles.headerCell]}>\n            <Text style={styles.headerText}>Model</Text>\n          </View>\n          <View style={[styles.cell, styles.headerCell]}>\n            <Text style={styles.headerText}>Wingspan</Text>\n          </View>\n          <View style={[styles.cell, styles.headerCell]}>\n            <Text style={styles.headerText}>Area</Text>\n          </View>\n          <View style={[styles.cell, styles.headerCell]}>\n            <Text style={styles.headerText}>AR</Text>\n          </View>\n          <View style={[styles.cell, styles.headerCell]}>\n            <Text style={styles.headerText}>Price</Text>\n          </View>\n        </View>\n\n        {/* Data Rows */}\n        {foils.map(foil => (\n          <View key={`${foil.brand}-${foil.model}`} style={styles.row}>\n            <View style={[styles.cell, styles.dataCell]}>\n              <Text>{foil.brand}</Text>\n            </View>\n            <View style={[styles.cell, styles.dataCell]}>\n              <Text>{foil.series}</Text>\n            </View>\n            <View style={[styles.cell, styles.dataCell]}>\n              <Text>{foil.model}</Text>\n            </View>\n            <View style={[styles.cell, styles.dataCell]}>\n              <Text>{formatMeasurement(foil.specs.wingspan, MEASUREMENTS.LENGTH.METRIC)}</Text>\n            </View>\n            <View style={[styles.cell, styles.dataCell]}>\n              <Text>{formatMeasurement(foil.specs.area, MEASUREMENTS.AREA.METRIC)}</Text>\n            </View>\n            <View style={[styles.cell, styles.dataCell]}>\n              <Text>{foil.specs.aspectRatio?.toFixed(1) || '-'}</Text>\n            </View>\n            <View style={[styles.cell, styles.dataCell]}>\n              <Text>{foil.price ? `$${foil.price}` : '-'}</Text>\n            </View>\n          </View>\n        ))}\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  headerRow: {\n    flexDirection: 'row',\n    backgroundColor: colors.LIGHT_GRAY,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.BORDER,\n  },\n  row: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.BORDER,\n  },\n  cell: {\n    padding: spacing.MEDIUM,\n    minWidth: 120,\n    justifyContent: 'center',\n  },\n  headerCell: {\n    backgroundColor: colors.LIGHT_GRAY,\n  },\n  dataCell: {\n    backgroundColor: 'white',\n  },\n  headerText: {\n    fontWeight: 'bold',\n    color: colors.TEXT_PRIMARY,\n  }\n});","import React from 'react';\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\n\nexport function LoadingIndicator() {\n  return (\n    <View style={styles.container}>\n      <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}); ","import React from 'react';\nimport { View, Text, Pressable, StyleSheet } from 'react-native';\n\ninterface ErrorMessageProps {\n  message: string;\n  onRetry?: () => void;\n}\n\nexport function ErrorMessage({ message, onRetry }: ErrorMessageProps) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.message}>{message}</Text>\n      {onRetry && (\n        <Pressable\n          style={({ pressed }) => [\n            styles.retryButton,\n            pressed && styles.retryButtonPressed\n          ]}\n          onPress={onRetry}\n        >\n          <Text style={styles.retryButtonText}>Retry</Text>\n        </Pressable>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: '#ffebee',\n    borderRadius: 8,\n    margin: 16,\n  },\n  message: {\n    color: '#c62828',\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 12,\n  },\n  retryButton: {\n    backgroundColor: '#c62828',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 6,\n  },\n  retryButtonPressed: {\n    backgroundColor: '#b71c1c',\n  },\n  retryButtonText: {\n    color: '#fff',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n}); ","import React from 'react';\nimport { View, Text, StyleSheet, Pressable, Platform } from 'react-native';\nimport { useNavigation, useNavigationContainerRef } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../types/navigation';\n\ntype NavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\nexport const Footer = () => {\n  const navigation = useNavigation<NavigationProp>();\n\n  const handleNavigation = (screen: 'PrivacyPolicy' | 'TermsOfService') => {\n    navigation.navigate(screen);\n  };\n\n  return (\n    <View style={styles.footer}>\n      <Text style={styles.copyright}>© 2025 FoilQuiver</Text>\n      <Text style={styles.separator}>•</Text>\n      <Pressable \n        onPress={() => handleNavigation('PrivacyPolicy')}\n        style={({ pressed }) => [\n          styles.linkContainer,\n          pressed && styles.pressed\n        ]}\n        accessibilityRole=\"link\"\n      >\n        <Text style={styles.link}>Privacy Policy</Text>\n      </Pressable>\n      <Text style={styles.separator}>•</Text>\n      <Pressable \n        onPress={() => handleNavigation('TermsOfService')}\n        style={({ pressed }) => [\n          styles.linkContainer,\n          pressed && styles.pressed\n        ]}\n        accessibilityRole=\"link\"\n      >\n        <Text style={styles.link}>Terms of Service</Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  footer: {\n    padding: 12,\n    backgroundColor: '#f5f5f5',\n    borderTopWidth: 1,\n    borderTopColor: '#eee',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 8,\n  },\n  copyright: {\n    fontSize: 14,\n    color: '#666',\n  },\n  separator: {\n    fontSize: 14,\n    color: '#666',\n  },\n  linkContainer: {\n    padding: 4,\n    ...Platform.select({\n      web: {\n        cursor: 'pointer' as const,\n      },\n    }),\n  },\n  pressed: {\n    opacity: 0.7,\n  },\n  link: {\n    fontSize: 14,\n    color: '#0066cc',\n    textDecorationLine: 'underline',\n  },\n}); ","import React, { useState, useEffect } from 'react';\nimport { View, ScrollView, StyleSheet } from 'react-native';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { useFoils } from '../hooks/useFoils';\nimport { useSearchFoils } from '../hooks/useSearchFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { useSortedFoils, SortField } from '../hooks/useSortedFoils';\nimport { useComparison } from '../hooks/useComparison';\nimport { FilterControls } from '../components/FilterControls';\nimport { FoilsTable } from '../components/FoilsTable';\nimport { ComparisonControls } from '../components/ComparisonControls';\nimport { ComparisonView } from '../components/ComparisonView';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { ErrorMessage } from '../components/ErrorMessage';\nimport { Footer } from '../components/Footer';\nimport { FilterOptions } from '../types/filters';\nimport { RootStackParamList } from '../types/navigation';\nimport { BaseProduct } from '../types/scraper';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Browse'>;\n\nexport default function BrowseScreen({ route, navigation }: Props) {\n  const { foils, loading, error, refreshFoils } = useFoils();\n  const searchQuery = route.params?.searchQuery || '';\n  const { searchedFoils } = useSearchFoils(foils, searchQuery);\n  const { \n    filters, \n    setFilters, \n    filteredFoils, \n    filterOptions \n  } = useFilteredFoils(searchedFoils);\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(filteredFoils);\n  const { \n    comparisonMode, \n    selectedFoils, \n    setComparisonModeOn,\n    setComparisonModeOff,\n    toggleFoilSelection, \n    isSelected \n  } = useComparison();\n  \n  const [isComparisonView, setIsComparisonView] = useState(false);\n\n  useEffect(() => {\n    console.log('BrowseScreen mounted, loading:', loading);\n  }, [loading]);\n\n  useEffect(() => {\n    if (route.params?.searchQuery !== searchQuery) {\n      navigation.setParams({ searchQuery });\n    }\n  }, [searchQuery, navigation]);\n\n  const handleFilterChange = (filterType: keyof FilterOptions, values: string[]) => {\n    if (filterType === 'type') {\n      setFilters((prev: FilterOptions) => ({\n        ...prev,\n        type: values.length > 0 ? values[0] as 'front' | 'tail' : null\n      }));\n    } else {\n      setFilters((prev: FilterOptions) => ({\n        ...prev,\n        [filterType]: values\n      }));\n    }\n  };\n\n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleBrandFilter = (brand: string) => {\n    setFilters((prev: FilterOptions) => ({\n      ...prev,\n      brands: prev.brands.includes(brand)\n        ? prev.brands.filter((b: string) => b !== brand)\n        : [...prev.brands, brand]\n    }));\n  };\n\n  const handleSeriesFilter = (series: string) => {\n    setFilters((prev: FilterOptions) => ({\n      ...prev,\n      series: prev.series.includes(series)\n        ? prev.series.filter((s: string) => s !== series)\n        : [...prev.series, series]\n    }));\n  };\n\n  const handleCompareStart = () => {\n    setComparisonModeOn();\n  };\n\n  const handleCompareSelected = () => {\n    if (selectedFoils.length >= 2) {\n      setIsComparisonView(true);\n    }\n  };\n\n  const handleExitCompare = () => {\n    setIsComparisonView(false);\n    setComparisonModeOff();\n  };\n\n  if (loading) {\n    console.log('Rendering LoadingIndicator');\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return <ErrorMessage message={error} onRetry={refreshFoils} />;\n  }\n\n  return (\n    <View style={styles.container}>\n      <ScrollView style={styles.scrollView}>\n        <FilterControls\n          filterOptions={filterOptions}\n          selectedBrands={filters.brands}\n          selectedSeries={filters.series}\n          selectedTypes={filters.type ? [filters.type] : []}\n          onFilterChange={handleFilterChange}\n        />\n        {isComparisonView ? (\n          <ComparisonView \n            foils={selectedFoils} \n            onClose={() => setIsComparisonView(false)}\n            onCompare={() => {}}\n          />\n        ) : (\n          <FoilsTable\n            foils={sortedFoils}\n            onSort={handleSort}\n            comparisonMode={comparisonMode}\n            onFoilSelect={toggleFoilSelection}\n            isSelected={isSelected}\n            sortOption={sortOption}\n          />\n        )}\n      </ScrollView>\n      <ComparisonControls\n        comparisonMode={comparisonMode}\n        selectedFoils={selectedFoils}\n        onCompareStart={handleCompareStart}\n        onCompareSelected={handleCompareSelected}\n        onExitCompare={handleExitCompare}\n        isComparisonView={isComparisonView}\n      />\n      <Footer />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n}); ","import { useState, useEffect } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { ProductService } from '../services/productService';\n\nexport function useFoils() {\n  const [foils, setFoils] = useState<BaseProduct[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadFoils = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const products = await ProductService.getAllProducts();\n      setFoils(products);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load foils');\n      console.error('Error loading foils:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadFoils();\n  }, []);\n\n  const refreshFoils = () => {\n    loadFoils();\n  };\n\n  return {\n    foils,\n    loading,\n    error,\n    refreshFoils\n  };\n} ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useSearchFoils(foils: BaseProduct[], searchQuery: string) {\n  const searchedFoils = useMemo(() => {\n    if (!searchQuery.trim()) {\n      return foils;\n    }\n\n    const query = searchQuery.toLowerCase().trim();\n    return foils.filter(foil => {\n      const searchableFields = [\n        foil.brand,\n        foil.model,\n        foil.series,\n        foil.specs.area.toString(),\n        foil.specs.wingspan.toString(),\n        foil.specs.aspectRatio.toString(),\n      ];\n\n      return searchableFields.some(field => \n        field.toLowerCase().includes(query)\n      );\n    });\n  }, [foils, searchQuery]);\n\n  return { searchedFoils };\n} ","import { useState, useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\n\nexport function useFilteredFoils(foils: BaseProduct[]) {\n  const [filters, setFilters] = useState<FilterOptions>({\n    brands: [],\n    series: [],\n    type: null,\n  });\n\n  const filterOptions = useMemo(() => {\n    const brands = Array.from(new Set(foils.map(foil => foil.brand)));\n    const allSeries = Array.from(new Set(foils.map(foil => foil.series)));\n    const types = ['front', 'tail'];\n\n    // Create brandSeries mapping\n    const brandSeries = brands.reduce((acc, brand) => {\n      acc[brand] = Array.from(new Set(\n        foils\n          .filter(foil => foil.brand === brand)\n          .map(foil => foil.series)\n      ));\n      return acc;\n    }, {} as Record<string, string[]>);\n\n    // Filter foils based on selected type\n    const typeFilteredFoils = filters.type \n      ? foils.filter(foil => foil.type === filters.type)\n      : foils;\n\n    // Get series based on type-filtered foils\n    const typeFilteredSeries = Array.from(new Set(typeFilteredFoils.map(foil => foil.series)));\n\n    // Filter series based on selected brands and type\n    const series = filters.brands.length > 0\n      ? Array.from(new Set(\n          typeFilteredFoils\n            .filter(foil => filters.brands.includes(foil.brand))\n            .map(foil => foil.series)\n        ))\n      : typeFilteredSeries;\n\n    return {\n      brands,\n      series,\n      types,\n      brandSeries,\n    };\n  }, [foils, filters.brands, filters.type]);\n\n  const filteredFoils = useMemo(() => {\n    return foils.filter(foil => {\n      const brandMatch = filters.brands.length === 0 || filters.brands.includes(foil.brand);\n      const seriesMatch = filters.series.length === 0 || filters.series.includes(foil.series);\n      const typeMatch = !filters.type || foil.type === filters.type;\n\n      return brandMatch && seriesMatch && typeMatch;\n    });\n  }, [foils, filters]);\n\n  return {\n    filters,\n    setFilters,\n    filteredFoils,\n    filterOptions,\n  };\n} ","import { useState, useCallback } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useComparison() {\n  const [comparisonMode, setComparisonMode] = useState(false);\n  const [selectedFoils, setSelectedFoils] = useState<BaseProduct[]>([]);\n\n  const getFoilIdentifier = (foil: BaseProduct) => {\n    return foil.id || `${foil.brand}-${foil.model}`.toLowerCase().replace(/\\s+/g, '-');\n  };\n\n  const setComparisonModeOn = useCallback(() => {\n    setComparisonMode(true);\n    setSelectedFoils([]);\n  }, []);\n\n  const setComparisonModeOff = useCallback(() => {\n    setComparisonMode(false);\n    setSelectedFoils([]);\n  }, []);\n\n  const toggleFoilSelection = useCallback((foil: BaseProduct) => {\n    if (!comparisonMode) return;\n    \n    setSelectedFoils(prev => {\n      const foilId = getFoilIdentifier(foil);\n      const isCurrentlySelected = prev.some(f => getFoilIdentifier(f) === foilId);\n      \n      if (isCurrentlySelected) {\n        return prev.filter(f => getFoilIdentifier(f) !== foilId);\n      } else {\n        return [...prev, foil];\n      }\n    });\n  }, [comparisonMode]);\n\n  const isSelected = useCallback((foil: BaseProduct) => {\n    const foilId = getFoilIdentifier(foil);\n    return selectedFoils.some(f => getFoilIdentifier(f) === foilId);\n  }, [selectedFoils]);\n\n  return {\n    comparisonMode,\n    selectedFoils,\n    setComparisonModeOn,\n    setComparisonModeOff,\n    toggleFoilSelection,\n    isSelected,\n  };\n} ","import React from 'react';\nimport { ScrollView, Text, StyleSheet, View } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nexport const PrivacyPolicy = () => {\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.content}>\n        <Text style={styles.title}>Privacy Policy</Text>\n        <Text style={styles.lastUpdated}>Last Updated: February 2025</Text>\n        \n        <View style={styles.section}>\n          <Text style={styles.heading}>1. Information We Collect</Text>\n          <Text style={styles.text}>\n            FoilQuiver collects minimal user data. We use Plausible Analytics to collect anonymous usage statistics. \n            We do not use cookies or collect any personally identifiable information.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>2. How We Use Information</Text>\n          <Text style={styles.text}>\n            Anonymous usage data helps us understand how users interact with our site and improve our services.\n            We do not sell or share any user data with third parties.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>3. Data Sources</Text>\n          <Text style={styles.text}>\n            Product information is collected from publicly available manufacturer websites. \n            We make every effort to ensure accuracy but recommend verifying specifications with manufacturers.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>4. Contact Us</Text>\n          <Text style={styles.text}>\n            For privacy-related questions, please contact us at sungho@sparkmindbody.com\n          </Text>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  content: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  lastUpdated: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 24,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  heading: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 12,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n  },\n}); ","import React from 'react';\nimport { ScrollView, Text, StyleSheet, View } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nexport const TermsOfService = () => {\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.content}>\n        <Text style={styles.title}>Terms of Service</Text>\n        <Text style={styles.lastUpdated}>Last Updated: February 2025</Text>\n        \n        <View style={styles.section}>\n          <Text style={styles.heading}>1. Acceptance of Terms</Text>\n          <Text style={styles.text}>\n            By accessing and using FoilQuiver, you accept and agree to be bound by these Terms of Service.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>2. Use License</Text>\n          <Text style={styles.text}>\n            FoilQuiver provides product comparison information for personal, non-commercial use.\n            All content is provided \"as is\" without warranty of any kind.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>3. Disclaimer</Text>\n          <Text style={styles.text}>\n            While we strive for accuracy, we cannot guarantee the completeness or accuracy of product information.\n            Always verify specifications with manufacturers before making purchase decisions.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>4. Limitations</Text>\n          <Text style={styles.text}>\n            We shall not be liable for any damages arising from the use of FoilQuiver.\n            Product prices and specifications are subject to change without notice.\n          </Text>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  content: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  lastUpdated: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 24,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  heading: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 12,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n  },\n}); ","import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n    error: null\n  };\n\n  public static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Uncaught error:', error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return (\n        <View style={styles.container}>\n          <Text style={styles.text}>Something went wrong.</Text>\n          <Text style={styles.errorText}>{this.state.error?.message}</Text>\n        </View>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  text: {\n    fontSize: 16,\n    marginBottom: 10,\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 14,\n  },\n}); ","import React from 'react';\nimport { View, TextInput, Pressable, Text, StyleSheet } from 'react-native';\n\ninterface SearchBarProps {\n  value: string;\n  onChangeText: (text: string) => void;\n  onClear: () => void;\n  placeholder?: string;\n}\n\nexport function SearchBar({\n  value,\n  onChangeText,\n  onClear,\n  placeholder = 'Search foils...'\n}: SearchBarProps) {\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        value={value}\n        onChangeText={onChangeText}\n        placeholder={placeholder}\n        placeholderTextColor=\"#999\"\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n      />\n      {value.length > 0 && (\n        <Pressable\n          style={styles.clearButton}\n          onPress={onClear}\n        >\n          <Text style={styles.clearButtonText}>✕</Text>\n        </Pressable>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#f0f0f0',\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    marginHorizontal: 16,\n    marginVertical: 8,\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    fontSize: 16,\n    color: '#333',\n  },\n  clearButton: {\n    padding: 8,\n  },\n  clearButtonText: {\n    color: '#999',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n}); ","import React, { useState, useRef } from 'react';\nimport { NavigationContainer, NavigationContainerRef } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { View, StyleSheet, Text } from 'react-native';\nimport BrowseScreen from './src/screens/BrowseScreen';\nimport { PrivacyPolicy } from './src/screens/legal/PrivacyPolicy';\nimport { TermsOfService } from './src/screens/legal/TermsOfService';\nimport { RootStackParamList } from './src/types/navigation';\nimport { ErrorBoundary } from './src/components/ErrorBoundary';\nimport { SearchBar } from './src/components/SearchBar';\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const navigationRef = useRef<NavigationContainerRef<RootStackParamList>>(null);\n\n  const handleSearch = (text: string) => {\n    setSearchQuery(text);\n    if (navigationRef.current) {\n      navigationRef.current.setParams({ searchQuery: text });\n    }\n  };\n\n  return (\n    <ErrorBoundary>\n      <SafeAreaProvider>\n        <NavigationContainer ref={navigationRef}>\n          <Stack.Navigator>\n            <Stack.Screen \n              name=\"Browse\" \n              component={BrowseScreen}\n              initialParams={{ searchQuery }}\n              options={{\n                headerTitle: '',\n                headerLeft: () => (\n                  <View style={styles.headerContainer}>\n                    <Text style={styles.headerTitle}>FoilQuiver</Text>\n                    <View style={styles.searchBarContainer}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={handleSearch}\n                        onClear={() => handleSearch('')}\n                      />\n                    </View>\n                  </View>\n                ),\n                headerStyle: {\n                  backgroundColor: '#f4f4f4',\n                },\n              }}\n            />\n            <Stack.Screen \n              name=\"PrivacyPolicy\" \n              component={PrivacyPolicy}\n              options={{\n                title: 'Privacy Policy',\n                headerStyle: {\n                  backgroundColor: '#f4f4f4',\n                },\n              }}\n            />\n            <Stack.Screen \n              name=\"TermsOfService\" \n              component={TermsOfService}\n              options={{\n                title: 'Terms of Service',\n                headerStyle: {\n                  backgroundColor: '#f4f4f4',\n                },\n              }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </SafeAreaProvider>\n    </ErrorBoundary>\n  );\n}\n\nconst styles = StyleSheet.create({\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n    paddingRight: 16,\n    paddingLeft: 16,\n  },\n  headerTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginRight: 16,\n  },\n  searchBarContainer: {\n    flex: 1,\n  },\n}); ","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [871], () => (__webpack_require__(2548)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ProductService","_createClass","_classCallCheck","key","value","_getAllProducts","_asyncToGenerator","this","isWeb","response","fetch","ok","products","json","console","log","length","error","warn","allProducts","brand","require","toLowerCase","replace","push","apply","_toConsumableArray","cached","AsyncStorage","getItem","JSON","parse","arguments","useSortedFoils","foils","_useState","useState","field","direction","_useState2","_slicedToArray","sortOption","setSortOption","sortedFoils","useMemo","sort","a","b","valueA","valueB","price","specs","multiplier","localeCompare","FilterPanel","_ref","filters","filterOptions","onBrandFilter","onSeriesFilter","onTypeFilter","isExpanded","setIsExpanded","_useState3","Animated","Value","animation","_useState5","_useState6","contentHeight","setContentHeight","animatedHeight","interpolate","inputRange","outputRange","_jsxs","View","style","styles","container","children","Pressable","onPress","toValue","spring","useNativeDriver","start","header","_jsx","Text","headerText","Ionicons","name","size","color","content","height","scrollContainer","onLayout","event","nativeEvent","layout","filterSection","filterRow","filterTitle","filterButtons","filterButton","type","filterButtonActive","filterButtonText","filterButtonTextActive","brands","includes","series","StyleSheet","create","backgroundColor","borderBottomWidth","borderBottomColor","flexDirection","justifyContent","alignItems","padding","fontSize","fontWeight","overflow","position","left","right","borderTopWidth","borderTopColor","marginRight","minWidth","paddingTop","flex","flexWrap","gap","paddingHorizontal","paddingVertical","borderRadius","borderWidth","borderColor","marginBottom","FilterControls","_ref$selectedBrands","selectedBrands","_ref$selectedSeries","selectedSeries","_ref$selectedTypes","selectedTypes","onFilterChange","newBrands","filter","concat","newSeries","s","MEASUREMENTS","METRIC","IMPERIAL","formatMeasurement","unit","colors","BORDER","LIGHT_GRAY","TEXT_PRIMARY","SELECTED_ROW","HOVER_ROW","LINK","spacing","SMALL","MEDIUM","LARGE","XLARGE","FoilsTable","onSort","comparisonMode","isSelected","onFoilSelect","columnWidths","baseWidths","model","wingspan","area","aspectRatio","cord","link","forEach","foil","_foil$brand","_foil$series","_foil$model","brandWidth","Math","max","seriesWidth","modelWidth","row","headerRow","cell","textCell","numericCell","brandCell","width","flexShrink","flexGrow","seriesCell","modelCell","wingspanCell","areaCell","arCell","cordCell","typeCell","priceCell","linkCell","numericText","textAlign","headerContent","headerNumericContent","sortIndicator","selectable","cursor","selectedRow","cellContent","textDecorationLine","headerCell","_objectSpread","headerBackground","small","border","getSortIndicator","renderHeaderContent","text","isNumeric","undefined","ScrollView","horizontal","_foil$specs$aspectRat","rowKey","selected","toFixed","charAt","toUpperCase","slice","window","open","sourceUrl","WebWrapper","bottom","zIndex","pointerEvents","display","paddingRight","ComparisonControls","_ref2","selectedFoils","onCompareStart","onCompareSelected","onExitCompare","_ref2$isComparisonVie","isComparisonView","comparisonBar","_Fragment","selectionText","buttonGroup","button","buttonDisabled","disabled","buttonText","cancelButton","floatingButton","alignSelf","boxShadow","ComparisonView","onClose","onCompare","dataCell","LoadingIndicator","ActivityIndicator","ErrorMessage","message","onRetry","pressed","retryButton","retryButtonPressed","retryButtonText","margin","Footer","navigation","useNavigation","handleNavigation","screen","navigate","footer","copyright","separator","linkContainer","accessibilityRole","opacity","BrowseScreen","_route$params","route","_useFoils","setFoils","_useState4","loading","setLoading","setError","loadFoils","getAllProducts","err","useEffect","refreshFoils","useFoils","searchQuery","params","_useSearchFoils","searchedFoils","trim","query","toString","some","useSearchFoils","_useFilteredFoils","setFilters","Array","from","Set","brandSeries","reduce","acc","typeFilteredFoils","typeFilteredSeries","types","filteredFoils","brandMatch","seriesMatch","typeMatch","useFilteredFoils","_useSortedFoils","_useComparison","setComparisonMode","setSelectedFoils","getFoilIdentifier","setComparisonModeOn","useCallback","setComparisonModeOff","toggleFoilSelection","prev","foilId","f","useComparison","setIsComparisonView","_route$params2","setParams","scrollView","filterType","values","_defineProperty","PrivacyPolicy","SafeAreaView","title","lastUpdated","section","heading","lineHeight","TermsOfService","ErrorBoundary","_Component","_this","_len","args","_key","state","hasError","_inherits","errorInfo","_this$state$error","errorText","props","Component","SearchBar","onChangeText","onClear","_ref$placeholder","placeholder","TextInput","input","placeholderTextColor","autoCapitalize","autoCorrect","clearButton","clearButtonText","marginHorizontal","marginVertical","Stack","createNativeStackNavigator","headerContainer","paddingLeft","headerTitle","searchBarContainer","registerRootComponent","setSearchQuery","navigationRef","useRef","handleSearch","current","SafeAreaProvider","NavigationContainer","ref","Navigator","Screen","component","initialParams","options","headerLeft","headerStyle","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","n","getter","__esModule","d","definition","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}