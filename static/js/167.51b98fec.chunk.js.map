{"version":3,"file":"static/js/167.51b98fec.chunk.js","mappings":"4LAYO,SAASA,EAAeC,GAC7B,IAAAC,GAAoCC,EAAAA,EAAAA,UAAqB,CACvDC,MAAO,OACPC,UAAW,QACXC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAHKM,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAK1BI,GAAcC,EAAAA,EAAAA,UAAQ,WAC1B,OCfFC,EDesBX,ECdtBG,EDc6BI,EAAWJ,MCbxCC,EDa+CG,EAAWH,WCXnDQ,EAAAA,EAAAA,GAAID,GAAUE,MAAK,SAACC,EAAGC,GAC5B,IAAIC,EACAC,EAEU,UAAVd,GAA+B,WAAVA,GAAgC,UAAVA,GAA+B,SAAVA,GAClEa,EAASF,EAAEX,GAAOe,cAClBD,EAASF,EAAEZ,GAAOe,eACC,UAAVf,GACTa,EAASF,EAAEK,OAAS,EACpBF,EAASF,EAAEI,OAAS,GACXhB,KAASW,EAAEM,OACpBJ,EAASF,EAAEM,MAAMjB,IAAkC,EACnDc,EAASF,EAAEK,MAAMjB,IAAkC,IAEnDa,EAAS,GACTC,EAAS,IAGX,IAAMI,EAA2B,QAAdjB,EAAsB,GAAK,EAE9C,MAAsB,kBAAXY,GAAyC,kBAAXC,EAChCD,EAAOM,cAAcL,GAAUI,EAElB,kBAAXL,GAAyC,kBAAXC,GAC/BD,EAASC,GAAUI,EAEtB,CACT,IAhCK,IACLV,EACAR,EACAC,CDcA,GAAG,CAACJ,EAAOO,IAEX,MAAO,CACLA,WAAAA,EACAC,cAAAA,EACAC,YAAAA,EAEJ,C,8DEQA,MAYac,EAAwCA,EACnDvB,QACAwB,SACAC,eACAC,aACAnB,aACAoB,UACAC,cAEA,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,KACZC,EAAWF,EAAQG,EAAAA,GAGnBC,EAAaC,EAAAA,SAAc,IACxBP,EAAQQ,QAAO,CAACC,EAAOC,IACxBA,EAAOC,UACFF,EAAQG,EAAAA,GAAcF,EAAOG,IAE/BJ,GACN,IACF,CAACT,IAEEc,EAAkBtC,IACtB,MAAMuC,EAAWnC,EAAWJ,QAAUA,EAEtC,OACEwC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,MAAOC,EAAOC,kBAAkBC,SAAA,EACpCC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAO,CACXC,EAAOK,SACPL,EAAOM,WACPV,GAAYnC,EAAW8C,WAAaP,EAAOQ,kBAC3CN,SAAC,YACHC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAO,CACXC,EAAOK,SACPL,EAAOS,aACPb,IAAanC,EAAW8C,WAAaP,EAAOU,oBAC5CR,SAAC,aACE,EAILS,EAAsBtD,IAC1B,MAAMuD,EACO,UAAVvD,GAAqByB,EAAQ+B,OAAOC,OAAS,GACnC,WAAVzD,GAAsByB,EAAQiC,OAAOD,OAAS,GACpC,SAAVzD,GAAoByB,EAAQkC,KAAKF,OAAS,EAE7C,MAAO,CACLd,EAAOiB,WACPL,GAAcZ,EAAOkB,mBACtB,EAGGC,EAAkBC,GACf3B,EAAAA,GAAc2B,IAA2C,IAG5DC,EAAoB9B,IACxB,IAAKA,EAAOC,UAAW,OAAO,KAE9B,MAAM8B,EAAc,CAClBvB,MAAO,CACLC,EAAOuB,WACP,CAAExC,MAAOoC,EAAe5B,EAAOG,KAChB,UAAdH,EAAOG,IAAkBZ,EAAQ+B,OAAOC,OAAS,GAAMd,EAAOwB,mBAChD,WAAdjC,EAAOG,IAAmBZ,EAAQiC,OAAOD,OAAS,GAAMd,EAAOwB,mBACjD,SAAdjC,EAAOG,IAAiBZ,EAAQkC,KAAKF,OAAS,GAAMd,EAAOwB,qBAIhE,MAAkB,SAAdjC,EAAOG,IAEPS,EAAAA,EAAAA,KAACL,EAAAA,EAAI2B,OAAAC,OAAA,GAAKJ,EAAW,CAAApB,UACnBC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAO,CAACC,EAAOiB,WAAYjB,EAAO2B,gBAAgBzB,SAAEX,EAAOqC,YAMrE/B,EAAAA,EAAAA,MAACgC,EAAAA,EAASJ,OAAAC,OAAA,GACJJ,EAAW,CACfQ,QAASA,IAAMpD,EAAOa,EAAOG,IAAiBQ,SAAA,EAE9CC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAO,CACXY,EAAmBpB,EAAOG,IAC1B,CAAC,OAAQ,WAAY,cAAe,SAASqC,SAASxC,EAAOG,KAAOM,EAAOgC,kBAC3E9B,SAAEX,EAAOqC,QACVjC,EAAeJ,EAAOG,OACb,EAIVuC,EAAaA,CAACC,EAAmB3C,KACrC,IAAKA,EAAOC,UAAW,OAAO,KAE9B,MAAM2C,EAAc,CAClBnC,EAAOoC,KACP,CAAErD,MAAOoC,EAAe5B,EAAOG,MAGjC,OAAQH,EAAOG,IACb,IAAK,QACH,OAAOS,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOoC,EAAYjC,SAAEgC,EAAKG,QACzC,IAAK,SACH,OAAOlC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOoC,EAAYjC,SAAEgC,EAAKnB,SACzC,IAAK,QACH,OAAOZ,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOoC,EAAYjC,SAAEgC,EAAKI,QACzC,IAAK,OACH,OAAOnC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOoC,EAAYjC,SAAsB,IAApBgC,EAAK5D,MAAMiE,KAAa,IAAML,EAAK5D,MAAMiE,OAC7E,IAAK,WACH,OAAOpC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOoC,EAAYjC,SAA0B,IAAxBgC,EAAK5D,MAAMkE,SAAiB,IAAMN,EAAK5D,MAAMkE,WACjF,IAAK,cACH,OAAOrC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOoC,EAAYjC,SAAGgC,EAAK5D,MAAMmE,aAA0C,IAA3BP,EAAK5D,MAAMmE,YAA0BP,EAAK5D,MAAMmE,YAAYC,QAAQ,GAArC,MAC9F,IAAK,OACH,OAAOvC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOoC,EAAYjC,SAAEgC,EAAKlB,OACzC,IAAK,QACH,OAAOb,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOoC,EAAYjC,SAAEgC,EAAK7D,MAAQ,IAAI6D,EAAK7D,QAAU,MACpE,IAAK,OACH,OACE8B,EAAAA,EAAAA,KAACL,EAAAA,EAAI,CAACC,MAAOoC,EAAYjC,SACtBgC,EAAKS,YACJxC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRC,QAAUc,IACRA,EAAEC,kBACFC,OAAOC,KAAKb,EAAKS,UAAW,SAAS,EAEvC5C,MAAOA,EAAGiD,aAAc,CACtBhD,EAAOiD,WACPD,GAAWhD,EAAOkD,mBAClBhD,UAEFC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOC,EAAOmD,SAASjD,SAAC,aAKxC,QACE,OAAO,KACX,EAGF,OACEC,EAAAA,EAAAA,KAACL,EAAAA,EAAI,CAACC,MAAOC,EAAOoD,UAAUlD,UAC5BC,EAAAA,EAAAA,KAACkD,EAAAA,EAAU,CACTC,YAAU,EACVC,gCAAgC,EAChCC,sBAAuB,CACrBxD,EAAOyD,kBACP,CAAE1E,MAAO2E,KAAKC,IAAIxE,EAAYJ,GAASE,EAAW,EAAwB,EAApB2E,EAAAA,OAExD7D,MAAO,CACLC,EAAO6D,qBACP5E,GAAYe,EAAO8D,4BACnB5D,UAEFL,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,MAAO,CACXC,EAAO+D,aACP,CAAEhF,MAAOI,IACTe,SAAA,EACAC,EAAAA,EAAAA,KAACL,EAAAA,EAAI,CAACC,MAAO,CAACC,EAAOgE,YAAa,CAAEjF,MAAOI,IAAce,UACvDC,EAAAA,EAAAA,KAACL,EAAAA,EAAI,CAACC,MAAOC,EAAOiE,UAAU/D,SAC3BrB,EAAQqF,KAAI3E,IACXY,EAAAA,EAAAA,KAACf,EAAAA,SAAc,CAAAc,SACZmB,EAAiB9B,IADCA,EAAOG,WAMlCS,EAAAA,EAAAA,KAACL,EAAAA,EAAI,CAACC,MAAO,CACXC,EAAOmE,oBACP,CAAEpF,MAAOI,IACTe,UACAC,EAAAA,EAAAA,KAACkD,EAAAA,EAAU,CACTtD,MAAOC,EAAOoE,WACdC,8BAA8B,EAC9BC,SAAS,EAAMpE,SAEdhD,EAAMgH,KAAI,CAAChC,EAAMqC,KAChBpE,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CAERC,QAASA,IAAMnD,EAAauD,GAC5BnC,MAAOA,EAAGiD,aAAc,CACtBhD,EAAOwE,IACP,CAAEzF,MAAOI,GACToF,EAAQ,IAAM,GAAKvE,EAAOyE,QAC1B7F,EAAWsD,IAASlC,EAAO0E,YACF1B,GAAWhD,EAAO2E,YAC3CzE,SAEDrB,EAAQqF,KAAI3E,IACXY,EAAAA,EAAAA,KAACf,EAAAA,SAAc,CAAAc,SACZ+B,EAAWC,EAAM3C,IADCA,EAAOG,OAXzB,GAAGwC,EAAKG,SAASH,EAAKI,qBAqBlC,EAILtC,EAAS4E,EAAAA,EAAWC,OAAO,CAC/BzB,UAAW,CACT0B,KAAM,EACN/F,MAAO,OACPgG,gBAAiBC,EAAAA,EAAOC,WAAWC,QACnCC,WAAY,UAEdtB,qBAAsB,CACpBiB,KAAM,EACN/F,MAAO,QAET+E,2BAA4B,CAC1BsB,kBAAmBxB,EAAAA,GACnByB,kBAAmBzB,EAAAA,IAErBH,kBAAmB,CACjB6B,SAAU,GAEZvB,aAAc,CACZe,KAAM,EACNC,gBAAiBC,EAAAA,EAAOC,WAAWC,SAErClB,YAAa,CACXe,gBAAiBC,EAAAA,EAAOC,WAAWM,UACnCC,kBAAmB,EACnBC,kBAAmBT,EAAAA,EAAOE,SAE5BjB,UAAW,CACTyB,cAAe,MACfF,kBAAmB,EACnBC,kBAAmBT,EAAAA,EAAOO,WAE5BhE,WAAUE,OAAAC,OAAA,CACRgE,cAAe,MACfP,WAAY,SACZQ,eAAgB,gBAChBC,QAAS,GACTC,iBAAkB,EAClBC,iBAAkBd,EAAAA,EAAOe,QACI,CAC3BC,OAAQ,YAGZ/E,WAAY,CACVgF,MAAOjB,EAAAA,EAAOkB,KAAKX,UACnBY,WAAY,MACZC,SAAU,IAEZlF,mBAAoB,CAClB+E,MAAOjB,EAAAA,EAAOE,SAEhBV,IAAG/C,OAAAC,OAAA,CACDgE,cAAe,MACfF,kBAAmB,EACnBC,kBAAmBT,EAAAA,EAAOe,QACG,CAC3BC,OAAQ,YAGZvB,QAAS,CACPM,gBAAiBC,EAAAA,EAAOC,WAAWM,WAErCb,YAAa,CACXK,gBAAiB,GAAGC,EAAAA,EAAOE,aAE7BP,WAAY,CACVI,gBAAiB,GAAGC,EAAAA,EAAOE,aAE7B9C,KAAM,CACJ6D,MAAOjB,EAAAA,EAAOkB,KAAKhB,QACnBkB,SAAU,GACVR,QAAS,GACTC,iBAAkB,EAClBC,iBAAkBd,EAAAA,EAAOe,QAE3BM,UAAW,CACTtH,MAAO,KAETuH,SAAU,CACRvH,MAAO,IAETwH,WAAY,CACVxH,MAAO,KAETyH,WAAY,CACVzH,MAAO,GACP0H,UAAW,SAEbC,UAAW,CACT3H,MAAO,IACP0H,UAAW,SAEbE,iBAAkB,CAChB5H,MAAO,GACP2G,cAAe,MACfP,WAAY,SACZQ,eAAgB,gBAChBiB,IAAK,GAEPC,gBAAiB,CACf9H,MAAO,IACP2G,cAAe,MACfP,WAAY,SACZQ,eAAgB,gBAChBiB,IAAK,GAEP5E,iBAAkB,CAChByE,UAAW,OACX3B,KAAM,GAERgC,SAAU,CACR/H,MAAO,GACPoG,WAAY,SACZQ,eAAgB,SAChBE,iBAAkB,EAClBkB,qBAA8C,EAC9CC,wBAAiD,GAEnDC,eAAgB,CACdlI,MAAO,GACP2G,cAAe,MACfP,WAAY,SACZQ,eAAgB,SAChBE,iBAAkB,EAClBkB,qBAA8C,GAEhDpF,eAAgB,CACd8E,UAAW,UAEbxD,WAAUxB,OAAAC,OAAA,CACRqD,gBAAiBC,EAAAA,EAAOE,QACxBG,kBAAmB,EACnB6B,gBAAiB,EACjBC,aAAc,EACdC,SAAU,GACVjC,WAAY,UACiB,CAC3Ba,OAAQ,YAGZ9C,kBAAmB,CACjBmE,QAAS,IAEXlE,SAAU,CACR8C,MAAOjB,EAAAA,EAAOC,WAAWC,QACzBkB,SAAU,GACVD,WAAY,OAEdlG,kBAAmB,CACjByF,cAAe,SACfP,WAAY,SACZmC,OAAQ,GACR3B,eAAgB,SAChB5G,MAAO,GACP6H,IAAK,GAEPvG,SAAU,CACR4F,MAAOjB,EAAAA,EAAOkB,KAAKqB,MACnBnB,SAAU,GACVrH,MAAO,GACPuI,OAAQ,GACRE,WAAY,GACZf,UAAW,UAEbnG,WAAY,CACVmH,aAAc,GAEhBhH,aAAc,CACZiH,UAAW,GAEblH,iBAAkB,CAChByF,MAAOjB,EAAAA,EAAOE,QACdkB,SAAU,IAEZ1F,mBAAoB,CAClBuF,MAAOjB,EAAAA,EAAOE,QACdkB,SAAU,IAEZjC,oBAAqB,CACnBW,KAAM,GAERV,WAAY,CACVU,KAAM,GAERtD,mBAAoB,CAClBgE,kBAAmB,EACnBC,kBAAmBT,EAAAA,EAAOE,WCvaxByC,EACCA,EAAGzH,eACNC,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CACV6H,SAAU,QACVC,OAAQ,GACRC,KAAM,EACNC,MAAO,EACPC,OAAQ,IACRC,cAAe,QACf/H,UACAC,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CACVkI,cAAe,OACfC,QAAS,OACTvC,eAAgB,WAChBwC,aCzBC,GD0BDC,cAAe,GACflI,SACCA,MAmDT,EA5C2BmI,EAAGC,gBAAeC,oBAAmBC,gBAAeC,mBAAkBC,uBAE/F,GAA6B,IAAzBJ,EAAcxH,SAAiB4H,EACjC,OAAO,KAGT,MAAMC,EAAWD,GAmBfvI,EAAAA,EAAAA,KAACL,EAAAA,EAAI,CAACC,MAAOC,EAAO4I,cAAc1I,UAChCC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACR9B,MAAO,CAACC,EAAO6I,OAAQ7I,EAAO8I,cAC9BhH,QAAS0G,EAActI,UAEvBC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOC,EAAO+I,WAAW7I,SAAC,cAvBpCC,EAAAA,EAAAA,KAACL,EAAAA,EAAI,CAACC,MAAOC,EAAO4I,cAAc1I,UAChCL,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,MAAOC,EAAOgJ,YAAY9I,SAAA,EAC9BC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACR9B,MAAO,CAACC,EAAO6I,OAAQ7I,EAAOiJ,aAC9BnH,QAAS2G,EAAiBvI,UAE1BC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAO,CAACC,EAAO+I,WAAY/I,EAAOkJ,iBAAiBhJ,SAAC,aAE5DC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACR9B,MAAO,CAACC,EAAO6I,OAAQP,EAAcxH,OAAS,GAAKd,EAAOmJ,gBAC1DrH,QAASyG,EACTa,SAAUd,EAAcxH,OAAS,EAAEZ,UAEnCC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOC,EAAO+I,WAAW7I,SAAC,mBAexC,OACEC,EAAAA,EAAAA,KAACwH,EAAU,CAAAzH,SAAEyI,GAKd,EAKG3I,EAAS4E,EAAAA,EAAWC,OAAO,CAC/BzB,UAAW,CACTsC,cAAe,MACfC,eAAgB,gBAChBR,WAAY,SACZS,QAAS,GACTwC,cAAe,EACfrD,gBAAiBC,EAAAA,EAAOC,WAAWM,UACnC8D,eAAgB,EAChBC,eAAgBtE,EAAAA,EAAOe,QAEzB6C,cAAe,CACblD,cAAe,MACfP,WAAY,SACZQ,eAAgB,WAChBiB,ICjGM,GDkGN7B,gBAAiB,eAEnBwE,eAAc9H,OAAAC,OAAA,CACZ8H,UAAW,WACXzE,gBAAiB,UACjBM,kBCtGK,GDuGL6B,gBCxGM,GDyGNC,aAAc,GAEP,CACHsC,UAAW,8BACXzD,OAAQ,YAWdgD,YAAa,CACXtD,cAAe,MACfkB,IC1HM,ID4HRiC,OAAMpH,OAAAC,OAAA,CACJqD,gBAAiBC,EAAAA,EAAOE,QACxBG,kBC7HK,GD8HL6B,gBC/HM,GDgINC,aAAc,GAEP,CACHsC,UAAW,8BACXzD,OAAQ,YAWdmD,eAAgB,CACdpE,gBAAiBC,EAAAA,EAAOkB,KAAKqB,MAC7BF,QAAS,IAEX4B,YAAa,CACXlE,gBAAiBC,EAAAA,EAAOC,WAAWC,QACnCwE,YAAa,EACbC,YAAa3E,EAAAA,EAAOO,WAEtBuD,aAAc,CACZ/D,gBAAiBC,EAAAA,EAAOO,WAE1BwD,WAAY,CACV9C,MAAOjB,EAAAA,EAAOC,WAAWC,QACzBiB,WAAY,MACZC,SAAU,IAEZwD,cAAe,CACbxD,SAAU,GACVH,MAAOjB,EAAAA,EAAOkB,KAAKX,UACnBsE,YCnKM,IDqKRC,cAAe,CACb7D,MAAOjB,EAAAA,EAAOkB,KAAKX,UACnBa,SAAU,IAEZ2D,gBAAiB,CACfrE,cAAe,MACfkB,IAAK,GAEPoD,cAAe,CACbjF,gBAAiBC,EAAAA,EAAOE,SAE1B+E,kBAAmB,CACjBhE,MAAOjB,EAAAA,EAAOC,WAAWC,SAE3BgE,gBAAiB,CACfjD,MAAOjB,EAAAA,EAAOO,aElIlB,EAtCuB2E,EAAGhN,QAAOiN,UAASC,YAAWvL,cACnD,MAAM,WAAEpB,EAAU,cAAEC,EAAa,YAAEC,GAAgBV,EAAeC,GAmBlE,OACEiD,EAAAA,EAAAA,KAACL,EAAAA,EAAI,CAACC,MAAOC,EAAOoD,UAAUlD,UAC5BC,EAAAA,EAAAA,KAAC1B,EAAU,CACTvB,MAAOS,EACPe,OArBcrB,IAClBK,GAAc2M,IAAI,CAChBhN,QACAC,UAAW+M,EAAKhN,QAAUA,GAA4B,QAAnBgN,EAAK/M,UAAsB,OAAS,SACtE,EAkBCqB,aAfe2L,OAgBf1L,WAfaA,KAAM,EAgBnBnB,WAAY,CACVJ,MAAOI,EAAWJ,MAClBkD,UAAoC,QAAzB9C,EAAWH,WAExBuB,QAASA,EACTC,QAlBU,CACd+B,OAAQ,GACRE,OAAQ,GACRC,KAAM,OAiBC,EAMLhB,EAAS4E,EAAAA,EAAWC,OAAO,CAC/BzB,UAAW,CACT0B,KAAM,K,cClDK,SAASyF,IACtB,IAAMC,GAAaC,EAAAA,EAAAA,MAEbxL,GADYD,EAAAA,EAAAA,KAAVD,MACiB,IAEzB,OACEoB,EAAAA,EAAAA,KAACL,EAAAA,EAAI,CAACC,MAAO,CAACC,EAAOoD,UAAWnE,GAAYe,EAAO0K,iBAAiBxK,UAClEC,EAAAA,EAAAA,KAACL,EAAAA,EAAI,CAACC,MAAO,CAACC,EAAO2I,QAAS1J,GAAYe,EAAO2K,eAAezK,UAC9DL,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,MAAO,CAACC,EAAO4K,UAAW3L,GAAYe,EAAO6K,iBAAiB3K,SAAA,EAClEC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CAACC,QAAS,WAAF,OAAQ0I,EAAWM,SAAS,QAAQ,EAAC5K,UACrDC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOC,EAAO+K,KAAK7K,SAAC,wBAE5BC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOC,EAAOgL,UAAU9K,SAAC,YAC/BC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CAACC,QAAS,WAAF,OAAQ0I,EAAWM,SAAS,UAAU,EAAC5K,UACvDC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOC,EAAO+K,KAAK7K,SAAC,sBAE5BC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOC,EAAOgL,UAAU9K,SAAC,YAC/BC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CAACC,QAAS,WAAF,OAAQ0I,EAAWM,SAAS,UAAU,EAAC5K,UACvDC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOC,EAAO+K,KAAK7K,SAAC,uBAMtC,CAEA,IAAMF,EAAS4E,EAAAA,EAAWC,OAAO,CAC/BzB,UAAW,CACT2B,gBAAiBC,EAAAA,EAAOC,WAAWC,QACnCmE,eAAgB,EAChBC,eAAgBtE,EAAAA,EAAOe,OACvBH,QAAS,IAEX8E,gBAAiB,CACf9E,QAAS,IAEX+C,QAAS,CACPsC,SAAU,KACV7F,iBAAkB,OAClBM,cAAe,MACfC,eAAgB,SAChBR,WAAY,UAEdwF,cAAe,CACbjF,cAAe,SACfkB,IAAK,GAEPgE,UAAW,CACTlF,cAAe,MACfP,WAAY,SACZyB,IAAK,IAEPiE,gBAAiB,CACfjE,IAAK,GAEPmE,KAAM,CACJ9E,MAAOjB,EAAAA,EAAOkB,KAAKX,UACnBa,SAAU,IAEZ4E,UAAW,CACT/E,MAAOjB,EAAAA,EAAOkB,KAAKqB,MACnBnB,SAAU,M,oBC1DD8E,EAAkC,SAAHC,GAKrC,IAJLC,EAAKD,EAALC,MACAC,EAAWF,EAAXE,YACAC,EAAYH,EAAZG,aACAC,EAAQJ,EAARI,SAGMC,EAAY,GAAGJ,iBAErB,OACEvL,EAAAA,EAAAA,MAAC4L,EAAAA,GAAM,CAAAvL,SAAA,EACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAQsL,KACRrL,EAAAA,EAAAA,KAAA,QAAMuL,KAAK,cAAc/C,QAAS0C,IACjCC,IAAgBnL,EAAAA,EAAAA,KAAA,QAAMwL,IAAI,YAAYC,KAAMN,KAE7CnL,EAAAA,EAAAA,KAAA,QAAM0L,SAAS,WAAWlD,QAAS6C,KACnCrL,EAAAA,EAAAA,KAAA,QAAM0L,SAAS,iBAAiBlD,QAAS0C,IACxCE,IAAYpL,EAAAA,EAAAA,KAAA,QAAM0L,SAAS,WAAWlD,QAAS4C,KAEhDpL,EAAAA,EAAAA,KAAA,QAAMuL,KAAK,gBAAgB/C,QAAS6C,KACpCrL,EAAAA,EAAAA,KAAA,QAAMuL,KAAK,sBAAsB/C,QAAS0C,IACzCE,IAAYpL,EAAAA,EAAAA,KAAA,QAAMuL,KAAK,gBAAgB/C,QAAS4C,MAGvD,ECFe,SAASO,GAAa,MAAEC,EAAK,WAAEvB,EAAU,QAAE1L,EAAO,eAAEkN,EAAc,QAAEnN,IACjF,MAAM,MAAE3B,EAAK,QAAE+O,EAAO,MAAEC,EAAK,aAAEC,IAAiBC,EAAAA,EAAAA,MACzC1D,EAAkB2D,IAAuBjP,EAAAA,EAAAA,WAAS,IACnD,cAAEkP,EAAa,cAAEC,IAAkBC,EAAAA,EAAAA,GAAiBtP,EAAO4B,IAE3D,cAAE2N,GCjCH,SAAwBvP,EAAsBwP,GAuBnD,MAAO,CAAED,eAtBa7O,EAAAA,EAAAA,UAAQ,WAC5B,IAAK8O,EAAYC,OACf,OAAOzP,EAGT,IAAM0P,EAAQF,EAAYtO,cAAcuO,OACxC,OAAOzP,EAAM2P,QAAO,SAAA3K,GAUlB,MATyB,CACvBA,EAAKG,MACLH,EAAKI,MACLJ,EAAKnB,OACLmB,EAAK5D,MAAMiE,KAAKuK,WAChB5K,EAAK5D,MAAMkE,SAASsK,WACpB5K,EAAK5D,MAAMmE,YAAYqK,YAGDC,MAAK,SAAA1P,GAAK,OAChCA,EAAMe,cAAc2D,SAAS6K,EAAM,GAEvC,GACF,GAAG,CAAC1P,EAAOwP,IAGb,CDS4BM,CAAeV,EAAeP,EAAMkB,QAAQP,aAAe,KAC/E,WAAEjP,EAAU,cAAEC,EAAa,YAAEC,GAAgBV,EAAewP,IAC5D,cACJnE,EAAa,oBACb4E,EAAmB,WACnBtO,EAAU,eACVuO,GEvCG,WACL,IAAAhQ,GAA0CC,EAAAA,EAAAA,UAAwB,IAAGG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAA9DmL,EAAa/K,EAAA,GAAE6P,EAAgB7P,EAAA,GAEhC2P,GAAsBG,EAAAA,EAAAA,cAAY,SAACnL,GACvCkL,GAAiB,SAAA/C,GAEf,OAD0BA,EAAK0C,MAAK,SAAAO,GAAC,OAAIA,EAAEhL,QAAUJ,EAAKI,OAASgL,EAAEjL,QAAUH,EAAKG,KAAK,IAEhFgI,EAAKwC,QAAO,SAAAS,GAAC,QAAMA,EAAEhL,QAAUJ,EAAKI,OAASgL,EAAEjL,QAAUH,EAAKG,MAAM,IAEvE,GAANkL,QAAAzP,EAAAA,EAAAA,GAAWuM,GAAI,CAAEnI,GACnB,GACF,GAAG,IAEGtD,GAAayO,EAAAA,EAAAA,cAAY,SAACnL,GAC9B,OAAOoG,EAAcyE,MAAK,SAAAO,GAAC,OAAIA,EAAEhL,QAAUJ,EAAKI,OAASgL,EAAEjL,QAAUH,EAAKG,KAAK,GACjF,GAAG,CAACiG,IAEE6E,GAAiBE,EAAAA,EAAAA,cAAY,WACjCD,EAAiB,GACnB,GAAG,IAEH,MAAO,CACL9E,cAAAA,EACA4E,oBAAAA,EACAtO,WAAAA,EACAuO,eAAAA,EAEJ,CFaMK,GAaEC,EAAoBA,KACxBpB,GAAoB,EAAM,EAG5B,OAAIJ,GACK9L,EAAAA,EAAAA,KAACuN,EAAAA,EAAgB,IAGtBxB,GACK/L,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACL,MAAOC,EAAOkM,MAAMhM,SAAEgM,KAInCrM,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,MAAOC,EAAOoD,UAAUlD,SAAA,EAC5BC,EAAAA,EAAAA,KAAC+K,EAAO,CACNE,MAAM,6CACNC,YAAa,WAAWnO,EAAM4D,4BAA4ByL,EAAc1L,OAAOC,sFAC/EwK,aAAa,mCAEfzL,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,MAAOC,EAAO2I,QAAQzI,SAAA,EAC1BC,EAAAA,EAAAA,KAACL,EAAAA,EAAI,CAACC,MAAOC,EAAO2N,eAAezN,SAChCwI,GACCvI,EAAAA,EAAAA,KAAC+J,EAAc,CACbhN,MAAOoL,EACP6B,QAASsD,EACTrD,UAAWA,OACXvL,QAASA,KAGXsB,EAAAA,EAAAA,KAAC1B,EAAU,CACTvB,MAAOS,EACPe,OA1CQrB,IAClBK,GAAc2M,IAAI,CAChBhN,QACAC,UAAW+M,EAAKhN,QAAUA,GAA4B,QAAnBgN,EAAK/M,UAAsB,OAAS,SACtE,EAuCOqB,aAAcuO,EACdtO,WAAYA,EACZnB,WAAY,CACVJ,MAAOI,EAAWJ,MAClBkD,UAAoC,QAAzB9C,EAAWH,WAExBuB,QAASA,EACTC,QAASA,OAIfqB,EAAAA,EAAAA,KAACkI,EAAkB,CACjBC,cAAeA,EACfC,kBAjDsBqF,KAC5BvB,GAAoB,EAAK,EAiDnB7D,cAAeiF,EACfhF,iBAAkB0E,EAClBzE,iBAAkBA,QAGtBvI,EAAAA,EAAAA,KAACoK,EAAM,MAGb,CAEA,MAAMvK,EAAS4E,EAAAA,EAAWC,OAAO,CAC/BzB,UAAW,CACT0B,KAAM,EACNC,gBAAiBC,EAAAA,EAAOC,WAAWC,SAErCyD,QAAS,CACP7D,KAAM,EACNO,kBA1FsB,GA2FtBtG,MAAO,OACPoG,WAAY,cAEdwI,eAAgB,CACd7I,KAAM,EACN/F,MAAO,QAETmN,MAAO,CACLjG,MAAO,MACPL,QAAS,GACTa,UAAW,W","sources":["src/hooks/useSortedFoils.ts","src/utils/sorting.ts","src/components/FoilsTable.tsx","src/components/ComparisonControls.tsx","src/constants/spacing.ts","src/components/ComparisonView.tsx","src/components/Footer.tsx","src/components/SEOHead.tsx","src/screens/BrowseScreen.tsx","src/hooks/useSearchFoils.ts","src/hooks/useComparison.ts"],"sourcesContent":["import { useState, useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { sortProducts } from '../utils/sorting';\n\nexport type SortField = 'brand' | 'series' | 'model' | 'price' | 'area' | 'wingspan' | 'aspectRatio' | 'cord' | 'type' | 'link';\nexport type SortDirection = 'asc' | 'desc';\n\nexport interface SortOption {\n  field: SortField;\n  direction: SortDirection;\n}\n\nexport function useSortedFoils(foils: BaseProduct[]) {\n  const [sortOption, setSortOption] = useState<SortOption>({\n    field: 'area',\n    direction: 'asc'\n  });\n\n  const sortedFoils = useMemo(() => {\n    return sortProducts(foils, sortOption.field, sortOption.direction);\n  }, [foils, sortOption]);\n\n  return {\n    sortOption,\n    setSortOption,\n    sortedFoils\n  };\n} ","import { BaseProduct } from '../types/scraper';\nimport { SortField, SortDirection } from '../hooks/useSortedFoils';\n\nexport function sortProducts(\n  products: BaseProduct[],\n  field: SortField,\n  direction: SortDirection\n): BaseProduct[] {\n  return [...products].sort((a, b) => {\n    let valueA: string | number;\n    let valueB: string | number;\n\n    if (field === 'brand' || field === 'series' || field === 'model' || field === 'type') {\n      valueA = a[field].toLowerCase();\n      valueB = b[field].toLowerCase();\n    } else if (field === 'price') {\n      valueA = a.price || 0;\n      valueB = b.price || 0;\n    } else if (field in a.specs) {\n      valueA = a.specs[field as keyof typeof a.specs] || 0;\n      valueB = b.specs[field as keyof typeof b.specs] || 0;\n    } else {\n      valueA = '';\n      valueB = '';\n    }\n    \n    const multiplier = direction === 'asc' ? 1 : -1;\n    \n    if (typeof valueA === 'string' && typeof valueB === 'string') {\n      return valueA.localeCompare(valueB) * multiplier;\n    }\n    if (typeof valueA === 'number' && typeof valueB === 'number') {\n      return (valueA - valueB) * multiplier;\n    }\n    return 0;\n  });\n} ","/**\n * FoilsTable Component\n * \n * IMPORTANT: Column Alignment\n * - The table uses fixed column widths for consistent layout and horizontal scrolling\n * - Each column width in headerCell must match the corresponding cell width\n * - Current widths:\n *   - Regular columns (brand, model, type, series): 150px\n *   - Number columns (area, wingspan, AR, price): 100px\n *   - Link column: 100px\n * - When modifying column styles, always update both headerCell and cell styles to maintain alignment\n * - Table has a minWidth of 1200px to ensure proper layout on all screen sizes\n */\n\nimport React from 'react';\nimport { View, Text, Pressable, ScrollView, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { SortField } from '../hooks/useSortedFoils';\nimport { colors } from '../theme/colors';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT, COLUMN_WIDTHS, getTableWidth, getContentWidth, Column } from '../constants/layout';\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  onSort: (field: SortField) => void;\n  onFoilSelect: (foil: BaseProduct) => void;\n  isSelected: (foil: BaseProduct) => boolean;\n  sortOption: { field: SortField; ascending: boolean };\n  columns: Column[];\n  filters: {\n    brands: string[];\n    series: string[];\n    type: string[];\n  };\n}\n\nconst DEFAULT_COLUMNS = [\n  { id: 'brand', label: 'Brand', isVisible: true },\n  { id: 'series', label: 'Series', isVisible: false },\n  { id: 'model', label: 'Model', isVisible: true },\n  { id: 'area', label: 'Area', isVisible: true },\n  { id: 'wingspan', label: 'Span', isVisible: true },\n  { id: 'aspectRatio', label: 'AR', isVisible: true },\n  { id: 'type', label: 'Type', isVisible: true },\n  { id: 'price', label: 'Price', isVisible: true },\n  { id: 'link', label: 'Link', isVisible: true },\n];\n\nexport const FoilsTable: React.FC<FoilsTableProps> = ({\n  foils,\n  onSort,\n  onFoilSelect,\n  isSelected,\n  sortOption,\n  columns,\n  filters,\n}) => {\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n\n  // Calculate total width based on visible columns\n  const tableWidth = React.useMemo(() => {\n    return columns.reduce((total, column) => {\n      if (column.isVisible) {\n        return total + COLUMN_WIDTHS[column.id];\n      }\n      return total;\n    }, 0);\n  }, [columns]);\n\n  const renderSortIcon = (field: SortField) => {\n    const isActive = sortOption.field === field;\n    \n    return (\n      <View style={styles.sortIconContainer}>\n        <Text style={[\n          styles.sortIcon,\n          styles.sortIconUp,\n          isActive && sortOption.ascending && styles.sortIconUpActive\n        ]}>▲</Text>\n        <Text style={[\n          styles.sortIcon,\n          styles.sortIconDown,\n          isActive && !sortOption.ascending && styles.sortIconDownActive\n        ]}>▼</Text>\n      </View>\n    );\n  };\n\n  const getHeaderTextStyle = (field: SortField) => {\n    const isFiltered = \n      (field === 'brand' && filters.brands.length > 0) ||\n      (field === 'series' && filters.series.length > 0) ||\n      (field === 'type' && filters.type.length > 0);\n\n    return [\n      styles.headerText,\n      isFiltered && styles.headerTextFiltered\n    ];\n  };\n\n  const getColumnWidth = (columnId: string) => {\n    return COLUMN_WIDTHS[columnId as keyof typeof COLUMN_WIDTHS] || 100;\n  };\n\n  const renderHeaderCell = (column: typeof columns[0]) => {\n    if (!column.isVisible) return null;\n\n    const commonProps = {\n      style: [\n        styles.headerCell,\n        { width: getColumnWidth(column.id) },\n        (column.id === 'brand' && filters.brands.length > 0) && styles.headerCellFiltered,\n        (column.id === 'series' && filters.series.length > 0) && styles.headerCellFiltered,\n        (column.id === 'type' && filters.type.length > 0) && styles.headerCellFiltered,\n      ],\n    };\n\n    if (column.id === 'link') {\n      return (\n        <View {...commonProps}>\n          <Text style={[styles.headerText, styles.linkHeaderText]}>{column.label}</Text>\n        </View>\n      );\n    }\n\n    return (\n      <Pressable \n        {...commonProps}\n        onPress={() => onSort(column.id as SortField)}\n      >\n        <Text style={[\n          getHeaderTextStyle(column.id as SortField),\n          ['area', 'wingspan', 'aspectRatio', 'price'].includes(column.id) && styles.numberHeaderText\n        ]}>{column.label}</Text>\n        {renderSortIcon(column.id as SortField)}\n      </Pressable>\n    );\n  };\n\n  const renderCell = (foil: BaseProduct, column: typeof columns[0]) => {\n    if (!column.isVisible) return null;\n\n    const commonStyle = [\n      styles.cell,\n      { width: getColumnWidth(column.id) },\n    ];\n\n    switch (column.id) {\n      case 'brand':\n        return <Text style={commonStyle}>{foil.brand}</Text>;\n      case 'series':\n        return <Text style={commonStyle}>{foil.series}</Text>;\n      case 'model':\n        return <Text style={commonStyle}>{foil.model}</Text>;\n      case 'area':\n        return <Text style={commonStyle}>{foil.specs.area === 0 ? '-' : foil.specs.area}</Text>;\n      case 'wingspan':\n        return <Text style={commonStyle}>{foil.specs.wingspan === 0 ? '-' : foil.specs.wingspan}</Text>;\n      case 'aspectRatio':\n        return <Text style={commonStyle}>{!foil.specs.aspectRatio || foil.specs.aspectRatio === 0 ? '-' : foil.specs.aspectRatio.toFixed(2)}</Text>;\n      case 'type':\n        return <Text style={commonStyle}>{foil.type}</Text>;\n      case 'price':\n        return <Text style={commonStyle}>{foil.price ? `$${foil.price}` : '-'}</Text>;\n      case 'link':\n        return (\n          <View style={commonStyle}>\n            {foil.sourceUrl && (\n              <Pressable \n                onPress={(e) => {\n                  e.stopPropagation();\n                  window.open(foil.sourceUrl, '_blank');\n                }}\n                style={({ pressed }) => [\n                  styles.linkButton,\n                  pressed && styles.linkButtonPressed\n                ]}\n              >\n                <Text style={styles.linkText}>View</Text>\n              </Pressable>\n            )}\n          </View>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView \n        horizontal \n        showsHorizontalScrollIndicator={true}\n        contentContainerStyle={[\n          styles.scrollViewContent,\n          { width: Math.max(tableWidth, width - (isMobile ? 0 : CONTAINER_PADDING * 2)) }\n        ]}\n        style={[\n          styles.horizontalScrollView,\n          isMobile && styles.horizontalScrollViewMobile\n        ]}\n      >\n        <View style={[\n          styles.tableContent,\n          { width: tableWidth }\n        ]}>\n          <View style={[styles.tableHeader, { width: tableWidth }]}>\n            <View style={styles.headerRow}>\n              {columns.map(column => (\n                <React.Fragment key={column.id}>\n                  {renderHeaderCell(column)}\n                </React.Fragment>\n              ))}\n            </View>\n          </View>\n          <View style={[\n            styles.scrollViewContainer,\n            { width: tableWidth }\n          ]}>\n            <ScrollView \n              style={styles.scrollView}\n              showsVerticalScrollIndicator={true}\n              bounces={false}\n            >\n              {foils.map((foil, index) => (\n                <Pressable\n                  key={`${foil.brand}-${foil.model}`}\n                  onPress={() => onFoilSelect(foil)}\n                  style={({ pressed }) => [\n                    styles.row,\n                    { width: tableWidth },\n                    index % 2 === 0 && styles.rowEven,\n                    isSelected(foil) && styles.rowSelected,\n                    Platform.OS === 'web' && pressed && styles.rowHovered\n                  ]}\n                >\n                  {columns.map(column => (\n                    <React.Fragment key={column.id}>\n                      {renderCell(foil, column)}\n                    </React.Fragment>\n                  ))}\n                </Pressable>\n              ))}\n            </ScrollView>\n          </View>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    backgroundColor: colors.background.primary,\n    alignItems: 'center',\n  },\n  horizontalScrollView: {\n    flex: 1,\n    width: '100%',\n  },\n  horizontalScrollViewMobile: {\n    marginHorizontal: -CONTAINER_PADDING,\n    paddingHorizontal: CONTAINER_PADDING,\n  },\n  scrollViewContent: {\n    flexGrow: 0,\n  },\n  tableContent: {\n    flex: 1,\n    backgroundColor: colors.background.primary,\n  },\n  tableHeader: {\n    backgroundColor: colors.background.secondary,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.primary,\n  },\n  headerRow: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.secondary,\n  },\n  headerCell: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12,\n    borderRightWidth: 1,\n    borderRightColor: colors.border,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  headerText: {\n    color: colors.text.secondary,\n    fontWeight: '600',\n    fontSize: 16,\n  },\n  headerTextFiltered: {\n    color: colors.primary,\n  },\n  row: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  rowEven: {\n    backgroundColor: colors.background.secondary,\n  },\n  rowSelected: {\n    backgroundColor: `${colors.primary}15`,\n  },\n  rowHovered: {\n    backgroundColor: `${colors.primary}10`,\n  },\n  cell: {\n    color: colors.text.primary,\n    fontSize: 14,\n    padding: 12,\n    borderRightWidth: 1,\n    borderRightColor: colors.border,\n  },\n  modelCell: {\n    width: 150,\n  },\n  typeCell: {\n    width: 80,\n  },\n  seriesCell: {\n    width: 120,\n  },\n  numberCell: {\n    width: 80,\n    textAlign: 'right',\n  },\n  priceCell: {\n    width: 105,\n    textAlign: 'right',\n  },\n  numberHeaderCell: {\n    width: 80,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    gap: 4,\n  },\n  priceHeaderCell: {\n    width: 105,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    gap: 4,\n  },\n  numberHeaderText: {\n    textAlign: 'left',\n    flex: 1,\n  },\n  linkCell: {\n    width: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRightWidth: 0,\n    borderTopRightRadius: Platform.OS === 'web' ? 0 : 8,\n    borderBottomRightRadius: Platform.OS === 'web' ? 0 : 8,\n  },\n  linkHeaderCell: {\n    width: 80,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRightWidth: 0,\n    borderTopRightRadius: Platform.OS === 'web' ? 0 : 8,\n  },\n  linkHeaderText: {\n    textAlign: 'center',\n  },\n  linkButton: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    minWidth: 44,\n    alignItems: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  linkButtonPressed: {\n    opacity: 0.8,\n  },\n  linkText: {\n    color: colors.background.primary,\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  sortIconContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: 28,\n    justifyContent: 'center',\n    width: 16,\n    gap: 2,\n  },\n  sortIcon: {\n    color: colors.text.muted,\n    fontSize: 12,\n    width: 12,\n    height: 10,\n    lineHeight: 10,\n    textAlign: 'center',\n  },\n  sortIconUp: {\n    marginBottom: 0,\n  },\n  sortIconDown: {\n    marginTop: 0,\n  },\n  sortIconUpActive: {\n    color: colors.primary,\n    fontSize: 13,\n  },\n  sortIconDownActive: {\n    color: colors.primary,\n    fontSize: 13,\n  },\n  scrollViewContainer: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  headerCellFiltered: {\n    borderBottomWidth: 2,\n    borderBottomColor: colors.primary,\n  },\n});\n","import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { spacing } from '../constants/spacing';\nimport { colors } from '../theme/colors';\n\ninterface ComparisonControlsProps {\n  selectedFoils: BaseProduct[];\n  onCompareSelected: () => void;\n  onExitCompare: () => void;\n  onClearSelection: () => void;\n  isComparisonView?: boolean;\n}\n\nconst WebWrapper = Platform.select({\n  web: ({ children }: { children: React.ReactNode }) => (\n    <div style={{\n      position: 'fixed',\n      bottom: 64,  // 48px footer height + 16px spacing\n      left: 0,\n      right: 0,\n      zIndex: 2000,\n      pointerEvents: 'none',\n    }}>\n      <div style={{ \n        pointerEvents: 'auto', \n        display: 'flex', \n        justifyContent: 'flex-end', \n        paddingRight: spacing.LARGE,\n        paddingBottom: 0,\n      }}>\n        {children}\n      </div>\n    </div>\n  ),\n  default: ({ children }: { children: React.ReactNode }) => <>{children}</>,\n});\n\nconst ComparisonControls = ({ selectedFoils, onCompareSelected, onExitCompare, onClearSelection, isComparisonView }: ComparisonControlsProps) => {\n  // Only show controls if there are selected foils or we're in comparison view\n  if (selectedFoils.length === 0 && !isComparisonView) {\n    return null;\n  }\n\n  const content = !isComparisonView ? (\n    <View style={styles.comparisonBar}>\n      <View style={styles.buttonGroup}>\n        <Pressable\n          style={[styles.button, styles.clearButton]}\n          onPress={onClearSelection}\n        >\n          <Text style={[styles.buttonText, styles.clearButtonText]}>Clear</Text>\n        </Pressable>\n        <Pressable\n          style={[styles.button, selectedFoils.length < 2 && styles.buttonDisabled]}\n          onPress={onCompareSelected}\n          disabled={selectedFoils.length < 2}\n        >\n          <Text style={styles.buttonText}>Compare</Text>\n        </Pressable>\n      </View>\n    </View>\n  ) : (\n    <View style={styles.comparisonBar}>\n      <Pressable\n        style={[styles.button, styles.cancelButton]}\n        onPress={onExitCompare}\n      >\n        <Text style={styles.buttonText}>Back</Text>\n      </Pressable>\n    </View>\n  );\n\n  return Platform.OS === 'web' ? (\n    <WebWrapper>{content}</WebWrapper>\n  ) : (\n    <View style={styles.container}>\n      {content}\n    </View>\n  );\n};\n\nexport default ComparisonControls;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    paddingBottom: 8,\n    backgroundColor: colors.background.secondary,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n  },\n  comparisonBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    gap: spacing.MEDIUM,\n    backgroundColor: 'transparent',\n  },\n  floatingButton: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    gap: spacing.MEDIUM,\n  },\n  button: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonDisabled: {\n    backgroundColor: colors.text.muted,\n    opacity: 0.5,\n  },\n  clearButton: {\n    backgroundColor: colors.background.primary,\n    borderWidth: 1,\n    borderColor: colors.secondary,\n  },\n  cancelButton: {\n    backgroundColor: colors.secondary,\n  },\n  buttonText: {\n    color: colors.background.primary,\n    fontWeight: '600',\n    fontSize: 14,\n  },\n  selectionText: {\n    fontSize: 14,\n    color: colors.text.secondary,\n    marginRight: spacing.MEDIUM,\n  },\n  selectedCount: {\n    color: colors.text.secondary,\n    fontSize: 16,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  compareButton: {\n    backgroundColor: colors.primary,\n  },\n  compareButtonText: {\n    color: colors.background.primary,\n  },\n  clearButtonText: {\n    color: colors.secondary,\n  }\n}); ","export const spacing = {\n  SMALL: 8,\n  MEDIUM: 12,\n  LARGE: 16,\n  XLARGE: 24,\n}; ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FoilsTable } from './FoilsTable';\nimport { BaseProduct } from '../types/scraper';\nimport { SortField } from '../hooks/useSortedFoils';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\n\ninterface ComparisonViewProps {\n  foils: BaseProduct[];\n  onClose?: () => void;\n  onCompare?: () => void;\n  columns: { id: string; label: string; isVisible: boolean; }[];\n}\n\nconst ComparisonView = ({ foils, onClose, onCompare, columns }: ComparisonViewProps) => {\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(foils);\n  \n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleSelect = () => {};\n  const isSelected = () => false;\n\n  // Empty filters for comparison view\n  const filters = {\n    brands: [],\n    series: [],\n    type: []\n  };\n\n  return (\n    <View style={styles.container}>\n      <FoilsTable\n        foils={sortedFoils}\n        onSort={handleSort}\n        onFoilSelect={handleSelect}\n        isSelected={isSelected}\n        sortOption={{\n          field: sortOption.field,\n          ascending: sortOption.direction === 'asc'\n        }}\n        columns={columns}\n        filters={filters}\n      />\n    </View>\n  );\n};\n\nexport default ComparisonView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  }\n});","import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { colors } from '../theme/colors';\n\nexport default function Footer() {\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { width } = useWindowDimensions();\n  const isMobile = width < 768;\n\n  return (\n    <View style={[styles.container, isMobile && styles.containerMobile]}>\n      <View style={[styles.content, isMobile && styles.contentMobile]}>\n        <View style={[styles.linkGroup, isMobile && styles.linkGroupMobile]}>\n          <Pressable onPress={() => navigation.navigate('Terms')}>\n            <Text style={styles.link}>Terms of Service</Text>\n          </Pressable>\n          <Text style={styles.separator}>•</Text>\n          <Pressable onPress={() => navigation.navigate('Privacy')}>\n            <Text style={styles.link}>Privacy Policy</Text>\n          </Pressable>\n          <Text style={styles.separator}>•</Text>\n          <Pressable onPress={() => navigation.navigate('Contact')}>\n            <Text style={styles.link}>Contact Us</Text>\n          </Pressable>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.background.primary,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n    padding: 16,\n  },\n  containerMobile: {\n    padding: 12,\n  },\n  content: {\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  contentMobile: {\n    flexDirection: 'column',\n    gap: 8,\n  },\n  linkGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n  },\n  linkGroupMobile: {\n    gap: 8,\n  },\n  link: {\n    color: colors.text.secondary,\n    fontSize: 14,\n  },\n  separator: {\n    color: colors.text.muted,\n    fontSize: 14,\n  },\n}); ","import { Helmet } from 'react-helmet-async';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  canonicalUrl?: string;\n  imageUrl?: string;\n}\n\nexport const SEOHead: React.FC<SEOHeadProps> = ({\n  title,\n  description,\n  canonicalUrl,\n  imageUrl\n}) => {\n  const siteTitle = 'FoilQuiver';\n  const fullTitle = `${title} | ${siteTitle}`;\n  \n  return (\n    <Helmet>\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      {imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n      \n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      {imageUrl && <meta name=\"twitter:image\" content={imageUrl} />}\n    </Helmet>\n  );\n}; ","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, Platform } from 'react-native';\nimport type { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { useFoils } from '../hooks/useFoils';\nimport { useSearchFoils } from '../hooks/useSearchFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { useSortedFoils, SortField, SortOption } from '../hooks/useSortedFoils';\nimport { useComparison } from '../hooks/useComparison';\nimport { FoilsTable } from '../components/FoilsTable';\nimport ComparisonControls from '../components/ComparisonControls';\nimport ComparisonView from '../components/ComparisonView';\nimport Footer from '../components/Footer';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { SEOHead } from '../components/SEOHead';\nimport { RootStackParamList } from '../types/navigation';\nimport { colors } from '../theme/colors';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Browse'> & {\n  filters: {\n    brands: string[];\n    series: string[];\n    type: string[];\n  };\n  onFilterChange: (type: keyof FilterOptions, value: string) => void;\n  columns: { id: string; label: string; isVisible: boolean; }[];\n};\n\nconst CONTAINER_PADDING = 24;\n\nexport default function BrowseScreen({ route, navigation, filters, onFilterChange, columns }: Props) {\n  const { foils, loading, error, refreshFoils } = useFoils();\n  const [isComparisonView, setIsComparisonView] = useState(false);\n  const { filteredFoils, filterOptions } = useFilteredFoils(foils, filters);\n\n  const { searchedFoils } = useSearchFoils(filteredFoils, route.params?.searchQuery || '');\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(searchedFoils);\n  const { \n    selectedFoils,\n    toggleFoilSelection,\n    isSelected,\n    clearSelection\n  } = useComparison();\n\n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleCompareSelected = () => {\n    setIsComparisonView(true);\n  };\n\n  const handleExitCompare = () => {\n    setIsComparisonView(false);\n  };\n\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return <Text style={styles.error}>{error}</Text>;\n  }\n\n  return (\n    <View style={styles.container}>\n      <SEOHead\n        title=\"FoilQuiver - Browse and compare hydrofoils\"\n        description={`Compare ${foils.length} hydrofoils across ${filterOptions.brands.length} brands. Filter by type, brand, and specifications to find your perfect foil.`}\n        canonicalUrl=\"https://foilquiver.com/browse\"\n      />\n      <View style={styles.content}>\n        <View style={styles.tableContainer}>\n          {isComparisonView ? (\n            <ComparisonView \n              foils={selectedFoils} \n              onClose={handleExitCompare}\n              onCompare={() => {}}\n              columns={columns}\n            />\n          ) : (\n            <FoilsTable\n              foils={sortedFoils}\n              onSort={handleSort}\n              onFoilSelect={toggleFoilSelection}\n              isSelected={isSelected}\n              sortOption={{\n                field: sortOption.field,\n                ascending: sortOption.direction === 'asc'\n              }}\n              columns={columns}\n              filters={filters}\n            />\n          )}\n        </View>\n        <ComparisonControls\n          selectedFoils={selectedFoils}\n          onCompareSelected={handleCompareSelected}\n          onExitCompare={handleExitCompare}\n          onClearSelection={clearSelection}\n          isComparisonView={isComparisonView}\n        />\n      </View>\n      <Footer />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background.primary,\n  },\n  content: {\n    flex: 1,\n    paddingHorizontal: CONTAINER_PADDING,\n    width: '100%',\n    alignItems: 'flex-start',\n  },\n  tableContainer: {\n    flex: 1,\n    width: '100%',\n  },\n  error: {\n    color: 'red',\n    padding: 16,\n    textAlign: 'center',\n  },\n}); ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useSearchFoils(foils: BaseProduct[], searchQuery: string) {\n  const searchedFoils = useMemo(() => {\n    if (!searchQuery.trim()) {\n      return foils;\n    }\n\n    const query = searchQuery.toLowerCase().trim();\n    return foils.filter(foil => {\n      const searchableFields = [\n        foil.brand,\n        foil.model,\n        foil.series,\n        foil.specs.area.toString(),\n        foil.specs.wingspan.toString(),\n        foil.specs.aspectRatio.toString(),\n      ];\n\n      return searchableFields.some(field => \n        field.toLowerCase().includes(query)\n      );\n    });\n  }, [foils, searchQuery]);\n\n  return { searchedFoils };\n} ","import { useState, useCallback } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useComparison() {\n  const [selectedFoils, setSelectedFoils] = useState<BaseProduct[]>([]);\n\n  const toggleFoilSelection = useCallback((foil: BaseProduct) => {\n    setSelectedFoils(prev => {\n      const isAlreadySelected = prev.some(f => f.model === foil.model && f.brand === foil.brand);\n      if (isAlreadySelected) {\n        return prev.filter(f => !(f.model === foil.model && f.brand === foil.brand));\n      }\n      return [...prev, foil];\n    });\n  }, []);\n\n  const isSelected = useCallback((foil: BaseProduct) => {\n    return selectedFoils.some(f => f.model === foil.model && f.brand === foil.brand);\n  }, [selectedFoils]);\n\n  const clearSelection = useCallback(() => {\n    setSelectedFoils([]);\n  }, []);\n\n  return {\n    selectedFoils,\n    toggleFoilSelection,\n    isSelected,\n    clearSelection,\n  };\n} "],"names":["useSortedFoils","foils","_useState","useState","field","direction","_useState2","_slicedToArray","sortOption","setSortOption","sortedFoils","useMemo","products","_toConsumableArray","sort","a","b","valueA","valueB","toLowerCase","price","specs","multiplier","localeCompare","FoilsTable","onSort","onFoilSelect","isSelected","columns","filters","width","useWindowDimensions","isMobile","MOBILE_BREAKPOINT","tableWidth","React","reduce","total","column","isVisible","COLUMN_WIDTHS","id","renderSortIcon","isActive","_jsxs","View","style","styles","sortIconContainer","children","_jsx","Text","sortIcon","sortIconUp","ascending","sortIconUpActive","sortIconDown","sortIconDownActive","getHeaderTextStyle","isFiltered","brands","length","series","type","headerText","headerTextFiltered","getColumnWidth","columnId","renderHeaderCell","commonProps","headerCell","headerCellFiltered","Object","assign","linkHeaderText","label","Pressable","onPress","includes","numberHeaderText","renderCell","foil","commonStyle","cell","brand","model","area","wingspan","aspectRatio","toFixed","sourceUrl","e","stopPropagation","window","open","pressed","linkButton","linkButtonPressed","linkText","container","ScrollView","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","scrollViewContent","Math","max","CONTAINER_PADDING","horizontalScrollView","horizontalScrollViewMobile","tableContent","tableHeader","headerRow","map","scrollViewContainer","scrollView","showsVerticalScrollIndicator","bounces","index","row","rowEven","rowSelected","rowHovered","StyleSheet","create","flex","backgroundColor","colors","background","primary","alignItems","marginHorizontal","paddingHorizontal","flexGrow","secondary","borderBottomWidth","borderBottomColor","flexDirection","justifyContent","padding","borderRightWidth","borderRightColor","border","cursor","color","text","fontWeight","fontSize","modelCell","typeCell","seriesCell","numberCell","textAlign","priceCell","numberHeaderCell","gap","priceHeaderCell","linkCell","borderTopRightRadius","borderBottomRightRadius","linkHeaderCell","paddingVertical","borderRadius","minWidth","opacity","height","muted","lineHeight","marginBottom","marginTop","WebWrapper","position","bottom","left","right","zIndex","pointerEvents","display","paddingRight","paddingBottom","ComparisonControls","selectedFoils","onCompareSelected","onExitCompare","onClearSelection","isComparisonView","content","comparisonBar","button","cancelButton","buttonText","buttonGroup","clearButton","clearButtonText","buttonDisabled","disabled","borderTopWidth","borderTopColor","floatingButton","alignSelf","boxShadow","borderWidth","borderColor","selectionText","marginRight","selectedCount","buttonContainer","compareButton","compareButtonText","ComparisonView","onClose","onCompare","prev","handleSelect","Footer","navigation","useNavigation","containerMobile","contentMobile","linkGroup","linkGroupMobile","navigate","link","separator","maxWidth","SEOHead","_ref","title","description","canonicalUrl","imageUrl","fullTitle","Helmet","name","rel","href","property","BrowseScreen","route","onFilterChange","loading","error","refreshFoils","useFoils","setIsComparisonView","filteredFoils","filterOptions","useFilteredFoils","searchedFoils","searchQuery","trim","query","filter","toString","some","useSearchFoils","params","toggleFoilSelection","clearSelection","setSelectedFoils","useCallback","f","concat","useComparison","handleExitCompare","LoadingIndicator","tableContainer","handleCompareSelected"],"sourceRoot":""}