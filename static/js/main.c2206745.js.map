{"version":3,"file":"static/js/main.c2206745.js","mappings":"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","sources":["src/components/ErrorBoundary.tsx","src/components/SearchBar.tsx","src/components/GoogleSignIn.tsx","src/components/TableSettings.tsx","src/navigation/AppHeader.tsx","App.tsx","index.ts","src/components/LoadingIndicator.tsx","src/components/QuiverManager.tsx","src/config/env.ts","src/config/environment.ts","src/constants/layout.ts","src/context/AppContext.tsx","src/hooks/useFilteredFoils.ts","src/utils/dataTransform.ts","src/services/productService.ts","src/hooks/useFoils.ts","src/hooks/useQuivers.ts","src/theme/ThemeContext.tsx","src/theme/colors.ts","src/theme/spacing.ts","src/utils/analytics.ts","src/utils/foilUtils.ts","src/utils/logger.ts","src/utils/routes.ts","src/utils/storage.ts","src/utils/supabase.ts"],"sourcesContent":["import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Platform } from 'react-native';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    // Log error to your error reporting service\n    console.error('Error caught by boundary:', error, errorInfo);\n  }\n\n  handleRetry = () => {\n    this.setState({ hasError: false, error: null });\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorView error={this.state.error} onRetry={this.handleRetry} />;\n    }\n\n    return this.props.children;\n  }\n}\n\ninterface ErrorViewProps {\n  error: Error | null;\n  onRetry: () => void;\n}\n\nconst ErrorView: React.FC<ErrorViewProps> = ({ error, onRetry }) => {\n  const { colors } = useTheme();\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.primary }]}>\n      <View style={styles.content}>\n        <Text style={[styles.title, { color: colors.error }]}>\n          Something went wrong\n        </Text>\n        <Text style={[styles.message, { color: colors.text.secondary }]}>\n          {error?.message || 'An unexpected error occurred'}\n        </Text>\n        <TouchableOpacity\n          style={[styles.button, { backgroundColor: colors.primary }]}\n          onPress={onRetry}\n        >\n          <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n            Try Again\n          </Text>\n        </TouchableOpacity>\n        {__DEV__ && error && (\n          <Text style={[styles.stack, { color: colors.text.tertiary }]}>\n            {error.stack}\n          </Text>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: spacing.LARGE,\n  },\n  content: {\n    maxWidth: 600,\n    width: '100%',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: spacing.MEDIUM,\n    textAlign: 'center',\n  },\n  message: {\n    fontSize: 16,\n    marginBottom: spacing.LARGE,\n    textAlign: 'center',\n  },\n  button: {\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    marginBottom: spacing.LARGE,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  stack: {\n    fontSize: 12,\n    fontFamily: Platform.OS === 'ios' ? 'Menlo' : 'monospace',\n    marginTop: spacing.LARGE,\n    padding: spacing.MEDIUM,\n    width: '100%',\n  },\n}); ","import React, { useState, useEffect, useRef } from 'react';\nimport { View, TextInput, StyleSheet, TouchableOpacity, Platform, Text, useWindowDimensions } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\nimport { MOBILE_BREAKPOINT } from '../constants/layout';\n\ninterface SearchBarProps {\n  value: string;\n  onChangeText: (text: string) => void;\n  onClear: () => void;\n  placeholder?: string;\n  autoFocus?: boolean;\n  mode?: 'browse' | 'comparison' | 'quiver';\n  onFocus?: () => void;\n}\n\nexport const SearchBar: React.FC<SearchBarProps> = ({\n  value,\n  onChangeText,\n  onClear,\n  placeholder = 'Search foils...',\n  autoFocus = false,\n  mode = 'browse',\n  onFocus,\n}) => {\n  const { colors } = useTheme();\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n\n  const getPlaceholder = () => {\n    if (isMobile) {\n      // Mobile-specific shorter placeholders\n      switch (mode) {\n        case 'comparison':\n          return 'Search to add...';\n        case 'quiver':\n          return 'Search to add...';\n        default:\n          return 'Search foils...';\n      }\n    }\n\n    // Desktop placeholders\n    switch (mode) {\n      case 'comparison':\n        return 'Search foils to add to comparison...';\n      case 'quiver':\n        return 'Search foils to add to quiver...';\n      default:\n        return 'Search foils...';\n    }\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.secondary }]}>\n      {Platform.OS === 'web' ? (\n        <Text style={[styles.searchIcon, { color: colors.text.secondary }]}>🔍</Text>\n      ) : (\n        <Ionicons name=\"search\" size={20} color={colors.text.secondary} />\n      )}\n      <TextInput\n        style={[styles.input, { color: colors.text.primary }]}\n        value={value}\n        onChangeText={onChangeText}\n        placeholder={getPlaceholder()}\n        placeholderTextColor={colors.text.tertiary}\n        autoFocus={autoFocus}\n        onFocus={onFocus}\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n        clearButtonMode=\"never\"\n        returnKeyType=\"search\"\n        maxFontSizeMultiplier={1}\n        {...(Platform.OS === 'web' ? {\n          spellCheck: false,\n          autoComplete: 'off',\n        } : {\n          keyboardType: 'web-search',\n        })}\n      />\n      {value !== '' && (\n        <TouchableOpacity onPress={onClear} style={styles.clearButton}>\n          {Platform.OS === 'web' ? (\n            <Text style={[styles.clearIcon, { color: colors.text.secondary }]}>✕</Text>\n          ) : (\n            <Ionicons name=\"close-circle\" size={20} color={colors.text.secondary} />\n          )}\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: spacing.MEDIUM,\n    height: 40,\n    borderRadius: 8,\n    gap: spacing.SMALL,\n  },\n  input: {\n    flex: 1,\n    fontSize: 16,\n    height: '100%',\n    ...(Platform.OS === 'web' && {\n      outlineStyle: 'none',\n      border: 'none',\n      background: 'transparent',\n      lineHeight: 40,\n    }),\n  },\n  clearButton: {\n    height: '100%',\n    aspectRatio: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  searchIcon: {\n    fontSize: 16,\n    width: 20,\n    height: 20,\n    textAlign: 'center',\n    lineHeight: 20,\n  },\n  clearIcon: {\n    fontSize: 16,\n    width: 20,\n    height: 20,\n    textAlign: 'center',\n    lineHeight: 20,\n  },\n}); ","import React, { useEffect } from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { supabase } from '../utils/supabase';\nimport { GOOGLE_CLIENT_ID } from '../config/env';\n\ninterface GoogleSignInProps {\n  onSuccess?: () => void;\n}\n\ninterface GoogleCredentialResponse {\n  credential: string;\n}\n\ndeclare global {\n  interface Window {\n    google?: {\n      accounts: {\n        id: {\n          initialize: (config: any) => void;\n          renderButton: (element: HTMLElement, config: any) => void;\n          prompt: () => void;\n          revoke: (hint: string, callback: () => void) => void;\n        };\n      };\n    };\n  }\n}\n\nexport const GoogleSignIn = ({ onSuccess }: GoogleSignInProps) => {\n  useEffect(() => {\n    const initializeGoogleSignIn = () => {\n      if (Platform.OS !== 'web' || typeof window === 'undefined' || !window.google) return;\n\n      window.google.accounts.id.initialize({\n        client_id: GOOGLE_CLIENT_ID,\n        callback: async (response: GoogleCredentialResponse) => {\n          try {\n            const { error } = await supabase.auth.signInWithIdToken({\n              provider: 'google',\n              token: response.credential,\n            });\n\n            if (error) {\n              console.error('Error signing in with Google:', error);\n              return;\n            }\n\n            onSuccess?.();\n          } catch (error) {\n            console.error('Unexpected error during Google sign in:', error);\n          }\n        },\n        use_fedcm_for_prompt: true,\n      });\n\n      const buttonContainer = document.getElementById('google-signin-button');\n      if (buttonContainer) {\n        window.google.accounts.id.renderButton(buttonContainer, {\n          type: 'standard',\n          theme: 'outline',\n          size: 'large',\n          text: 'signin_with',\n          shape: 'pill',\n        });\n      }\n    };\n\n    if (Platform.OS === 'web') {\n      const script = document.createElement('script');\n      script.src = 'https://accounts.google.com/gsi/client';\n      script.async = true;\n      script.onload = initializeGoogleSignIn;\n      document.body.appendChild(script);\n\n      return () => {\n        document.body.removeChild(script);\n      };\n    }\n  }, [onSuccess]);\n\n  if (Platform.OS !== 'web') {\n    return null;\n  }\n\n  return (\n    <View style={styles.container}>\n      <div id=\"google-signin-button\" />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: 40,\n  },\n}); ","import React, { useState, useMemo, useEffect } from 'react';\nimport { View, Text, Pressable, StyleSheet, Modal, Platform, ScrollView, Image, Alert } from 'react-native';\nimport { MaterialIcons, Ionicons } from '@expo/vector-icons';\nimport { useTheme } from '../theme/ThemeContext';\nimport { FilterOptions } from '../types/filters';\nimport { BaseProduct } from '../types/scraper';\nimport { saveFilters, saveColumns, loadFilters, loadColumns, StoredFilters, StoredColumns } from '../utils/storage';\nimport { spacing } from '../theme/spacing';\nimport { supabase } from '../utils/supabase';\nimport { Session, User } from '@supabase/supabase-js';\nimport { GoogleSignIn } from './GoogleSignIn';\nimport { QuiversMenu } from './QuiversMenu';\nimport { QuiverManager } from './QuiverManager';\n\ninterface Column {\n  id: string;\n  label: string;\n  isVisible: boolean;\n}\n\ninterface TableSettingsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (type: keyof FilterOptions, value: string) => void;\n  onClearFilters: () => void;\n  columns: Column[];\n  onColumnVisibilityChange: (columnId: string) => void;\n  onResetColumns: () => void;\n  foils: BaseProduct[];\n}\n\nexport function TableSettings({\n  filterOptions,\n  selectedBrands,\n  selectedSeries,\n  selectedTypes,\n  onFilterChange,\n  onClearFilters,\n  columns,\n  onColumnVisibilityChange,\n  onResetColumns,\n  foils,\n}: TableSettingsProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [activeTab, setActiveTab] = useState<'filters' | 'columns' | 'account' | 'appearance'>('filters');\n  const { colors, isDark, toggleTheme } = useTheme();\n  const [session, setSession] = useState<Session | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [isQuiversModalVisible, setIsQuiversModalVisible] = useState(false);\n\n  // Get initial session and listen for auth changes\n  useEffect(() => {\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n      setUser(session?.user ?? null);\n    });\n\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n      setUser(session?.user ?? null);\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  // Load saved settings on mount\n  useEffect(() => {\n    const loadSavedSettings = async () => {\n      try {\n        // Load and apply saved filters\n        const savedFilters = await loadFilters();\n        if (savedFilters) {\n          savedFilters.brands.forEach(brand => onFilterChange('brands', brand));\n          savedFilters.series.forEach(series => onFilterChange('series', series));\n          savedFilters.types.forEach(type => onFilterChange('type', type));\n        }\n\n        // Load and apply saved column settings\n        const savedColumns = await loadColumns();\n        if (savedColumns) {\n          // Create a map of current column visibility\n          const currentColumns = Object.fromEntries(\n            columns.map(col => [col.id, col.isVisible])\n          );\n\n          // Update each column's visibility if it differs from saved state\n          Object.entries(savedColumns).forEach(([columnId, isVisible]) => {\n            if (currentColumns[columnId] !== isVisible) {\n              onColumnVisibilityChange(columnId);\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Error loading settings:', error);\n      }\n    };\n\n    loadSavedSettings();\n  }, []);\n\n  // Save filters when they change\n  useEffect(() => {\n    const saveFilterSettings = async () => {\n      try {\n        const filters: StoredFilters = {\n          brands: selectedBrands,\n          series: selectedSeries,\n          types: selectedTypes,\n        };\n        await saveFilters(filters);\n      } catch (error) {\n        console.error('Error saving filter settings:', error);\n      }\n    };\n\n    saveFilterSettings();\n  }, [selectedBrands, selectedSeries, selectedTypes]);\n\n  // Save column settings when they change\n  useEffect(() => {\n    const saveColumnSettings = async () => {\n      try {\n        const columnSettings: StoredColumns = {};\n        columns.forEach(column => {\n          columnSettings[column.id] = column.isVisible;\n        });\n        await saveColumns(columnSettings);\n      } catch (error) {\n        console.error('Error saving column settings:', error);\n      }\n    };\n\n    saveColumnSettings();\n  }, [columns]);\n\n  const handleSignOut = async () => {\n    try {\n      // First check if we have a valid session\n      const { data: { session } } = await supabase.auth.getSession();\n      if (!session) {\n        // If no session, just clean up the UI state\n        setSession(null);\n        setUser(null);\n        setIsOpen(false);\n        return;\n      }\n\n      // Sign out from Google if on web platform\n      if (Platform.OS === 'web' && window.google?.accounts) {\n        window.google.accounts.id.revoke(user?.email || '', () => {});\n      }\n\n      // Sign out from Supabase\n      await supabase.auth.signOut({ scope: 'local' });\n      \n      // Clean up UI state\n      setSession(null);\n      setUser(null);\n      setIsOpen(false);\n    } catch (error) {\n      console.error('Sign out error:', error);\n      // Even if there's an error, try to clean up the UI state\n      setSession(null);\n      setUser(null);\n      setIsOpen(false);\n    }\n  };\n\n  // Handle column visibility change\n  const handleColumnVisibilityChange = async (columnId: string) => {\n    onColumnVisibilityChange(columnId);\n  };\n\n  // Handle reset columns\n  const handleResetColumns = async () => {\n    onResetColumns();\n    try {\n      const columnSettings: StoredColumns = {};\n      columns.forEach(column => {\n        columnSettings[column.id] = column.isVisible;\n      });\n      await saveColumns(columnSettings);\n    } catch (error) {\n      console.error('Error resetting column settings:', error);\n    }\n  };\n\n  // Filter series based on selected brands\n  const availableSeries = useMemo(() => {\n    if (selectedBrands.length === 0) {\n      return filterOptions.series;\n    }\n\n    // Get all series from foils that match selected brands\n    const seriesSet = new Set<string>();\n    foils.forEach(foil => {\n      if (selectedBrands.includes(foil.brand) && foil.series) {\n        seriesSet.add(foil.series);\n      }\n    });\n\n    return Array.from(seriesSet).sort();\n  }, [filterOptions.series, selectedBrands, foils]);\n\n  const renderAccountTab = () => {\n    if (!session) {\n      return (\n        <View style={styles.contentWrapper}>\n          <View style={styles.content}>\n            <Text style={[styles.contentTitle, { color: colors.text.primary, marginBottom: 16 }]}>Sign In</Text>\n            <GoogleSignIn onSuccess={() => {\n              setIsOpen(false);\n            }} />\n          </View>\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.contentWrapper}>\n        <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n          <View style={styles.content}>\n            <View style={styles.userInfo}>\n              {user?.user_metadata?.avatar_url && (\n                <Image \n                  source={{ uri: user.user_metadata.avatar_url }} \n                  style={styles.avatarImage}\n                />\n              )}\n              <View style={styles.userTextInfo}>\n                <Text style={[styles.userName, { color: colors.text.primary }]}>\n                  {user?.user_metadata?.full_name || user?.email}\n                </Text>\n                <Text style={[styles.userEmail, { color: colors.text.secondary }]}>\n                  {user?.email}\n                </Text>\n              </View>\n            </View>\n\n            <View style={[styles.menuDivider, { backgroundColor: colors.border }]} />\n\n            <View style={styles.section}>\n              <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Quivers</Text>\n              <Pressable\n                style={[styles.menuButton, { backgroundColor: colors.background.secondary }]}\n                onPress={() => {\n                  setIsQuiversModalVisible(true);\n                }}\n              >\n                <View style={styles.menuButtonContent}>\n                  {Platform.OS === 'web' ? (\n                    <Text style={{ fontSize: 20, color: colors.text.primary }}>🎯</Text>\n                  ) : (\n                    <Ionicons name=\"bookmark-outline\" size={20} color={colors.text.primary} />\n                  )}\n                  <Text style={[styles.menuButtonText, { color: colors.text.primary }]}>Manage Quivers</Text>\n                </View>\n                <MaterialIcons name=\"chevron-right\" size={20} color={colors.text.secondary} />\n              </Pressable>\n            </View>\n\n            <View style={styles.section}>\n              <Pressable\n                style={({ pressed }) => [\n                  styles.menuButton,\n                  { backgroundColor: colors.background.secondary },\n                  pressed && { opacity: 0.7 }\n                ]}\n                onPress={() => {\n                  handleSignOut();\n                }}\n                role=\"button\"\n              >\n                <View style={styles.menuButtonContent}>\n                  {Platform.OS === 'web' ? (\n                    <Text style={{ fontSize: 20, color: colors.text.primary }}>⇥</Text>\n                  ) : (\n                    <Ionicons name=\"log-out-outline\" size={20} color={colors.text.primary} />\n                  )}\n                  <Text style={[styles.menuButtonText, { color: colors.text.primary }]}>Sign Out</Text>\n                </View>\n              </Pressable>\n            </View>\n          </View>\n        </ScrollView>\n      </View>\n    );\n  };\n\n  return (\n    <>\n      <Pressable \n        onPress={() => setIsOpen(true)}\n        style={[styles.iconButton, { backgroundColor: colors.background.secondary }]}\n      >\n        <MaterialIcons name=\"settings\" size={24} color={colors.text.primary} />\n      </Pressable>\n\n      <Modal\n        visible={isOpen}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => setIsOpen(false)}\n      >\n        <Pressable \n          style={[styles.modalOverlay, { backgroundColor: isDark ? 'rgba(0, 0, 0, 0.7)' : 'rgba(0, 0, 0, 0.5)' }]}\n          onPress={() => setIsOpen(false)}\n        >\n          <Pressable \n            style={[styles.modalContent, { backgroundColor: colors.background.primary }]}\n            onPress={e => e.stopPropagation()}\n          >\n            <View style={[styles.modalHeader, { borderBottomColor: colors.border }]}>\n              <Text style={[styles.modalTitle, { color: colors.text.primary }]}>Settings</Text>\n              <Pressable \n                onPress={() => setIsOpen(false)}\n                style={styles.closeButton}\n              >\n                <MaterialIcons name=\"close\" size={24} color={colors.text.secondary} />\n              </Pressable>\n            </View>\n\n            <View style={[styles.tabs, { borderBottomColor: colors.border }]}>\n              <Pressable\n                style={[styles.tab, activeTab === 'filters' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('filters')}\n              >\n                <Text style={[\n                  styles.tabText, \n                  { color: colors.text.secondary },\n                  activeTab === 'filters' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Filters {(selectedBrands.length > 0 || selectedSeries.length > 0 || selectedTypes.length > 0) && '•'}\n                </Text>\n              </Pressable>\n              <Pressable\n                style={[styles.tab, activeTab === 'columns' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('columns')}\n              >\n                <Text style={[\n                  styles.tabText,\n                  { color: colors.text.secondary },\n                  activeTab === 'columns' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Columns {columns.some(col => !col.isVisible) && '•'}\n                </Text>\n              </Pressable>\n              <Pressable\n                style={[styles.tab, activeTab === 'appearance' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('appearance')}\n              >\n                <Text style={[\n                  styles.tabText,\n                  { color: colors.text.secondary },\n                  activeTab === 'appearance' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Appearance\n                </Text>\n              </Pressable>\n              <Pressable\n                style={[styles.tab, activeTab === 'account' && [styles.activeTab, { borderBottomColor: colors.primary }]]}\n                onPress={() => setActiveTab('account')}\n              >\n                <Text style={[\n                  styles.tabText,\n                  { color: colors.text.secondary },\n                  activeTab === 'account' && [styles.activeTabText, { color: colors.primary }]\n                ]}>\n                  Account\n                </Text>\n              </Pressable>\n            </View>\n\n            {activeTab === 'filters' ? (\n              <View style={styles.contentWrapper}>\n                <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n                  <View style={styles.content}>\n                    <View style={styles.headerWithAction}>\n                      <Text style={[styles.contentTitle, { color: colors.text.primary }]}>Active Filters</Text>\n                      {(selectedBrands.length > 0 || selectedSeries.length > 0 || selectedTypes.length > 0) && (\n                        <Pressable \n                          onPress={onClearFilters}\n                          style={[styles.clearButton, { backgroundColor: colors.background.secondary }]}\n                        >\n                          <Text style={[styles.clearButtonText, { color: colors.text.secondary }]}>Clear All</Text>\n                        </Pressable>\n                      )}\n                    </View>\n                    <View style={styles.section}>\n                      <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Brand</Text>\n                      <View style={styles.chipContainer}>\n                        {filterOptions.brands.map((brand) => (\n                          <Pressable\n                            key={brand}\n                            style={[\n                              styles.chip,\n                              { backgroundColor: colors.background.secondary },\n                              selectedBrands.includes(brand) && [styles.chipSelected, { backgroundColor: colors.primary }],\n                            ]}\n                            onPress={() => onFilterChange('brands', brand)}\n                          >\n                            <Text \n                              style={[\n                                styles.chipText,\n                                { color: colors.text.secondary },\n                                selectedBrands.includes(brand) && [styles.chipTextSelected, { color: colors.text.inverse }],\n                              ]}\n                            >\n                              {brand}\n                            </Text>\n                          </Pressable>\n                        ))}\n                      </View>\n                    </View>\n\n                    <View style={styles.section}>\n                      <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Type</Text>\n                      <View style={styles.chipContainer}>\n                        {filterOptions.types.map((type) => (\n                          <Pressable\n                            key={type}\n                            style={[\n                              styles.chip,\n                              { backgroundColor: colors.background.secondary },\n                              selectedTypes.includes(type) && [styles.chipSelected, { backgroundColor: colors.primary }],\n                            ]}\n                            onPress={() => onFilterChange('type', type)}\n                          >\n                            <Text \n                              style={[\n                                styles.chipText,\n                                { color: colors.text.secondary },\n                                selectedTypes.includes(type) && [styles.chipTextSelected, { color: colors.text.inverse }],\n                              ]}\n                            >\n                              {type}\n                            </Text>\n                          </Pressable>\n                        ))}\n                      </View>\n                    </View>\n\n                    <View style={styles.section}>\n                      <Text style={[styles.sectionTitle, { color: colors.text.primary }]}>Series</Text>\n                      <View style={styles.chipContainer}>\n                        {availableSeries.length > 0 ? (\n                          availableSeries.map((series) => (\n                            <Pressable\n                              key={series}\n                              style={[\n                                styles.chip,\n                                { backgroundColor: colors.background.secondary },\n                                selectedSeries.includes(series) && [styles.chipSelected, { backgroundColor: colors.primary }],\n                              ]}\n                              onPress={() => onFilterChange('series', series)}\n                            >\n                              <Text \n                                style={[\n                                  styles.chipText,\n                                  { color: colors.text.secondary },\n                                  selectedSeries.includes(series) && [styles.chipTextSelected, { color: colors.text.inverse }],\n                                ]}\n                              >\n                                {series}\n                              </Text>\n                            </Pressable>\n                          ))\n                        ) : (\n                          <Text style={[styles.noSeriesText, { color: colors.text.secondary }]}>\n                            No series available for selected brands\n                          </Text>\n                        )}\n                      </View>\n                    </View>\n                  </View>\n                </ScrollView>\n              </View>\n            ) : activeTab === 'columns' ? (\n              <View style={styles.contentWrapper}>\n                <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n                  <View style={styles.content}>\n                    <View style={styles.headerWithAction}>\n                      <Text style={[styles.contentTitle, { color: colors.text.primary }]}>Visible Columns</Text>\n                      {columns.some(col => !col.isVisible) && (\n                        <Pressable \n                          onPress={handleResetColumns}\n                          style={[styles.clearButton, { backgroundColor: colors.background.secondary }]}\n                        >\n                          <Text style={[styles.clearButtonText, { color: colors.text.secondary }]}>Reset</Text>\n                        </Pressable>\n                      )}\n                    </View>\n                    <View style={styles.columnList}>\n                      {columns.map(column => (\n                        <Pressable\n                          key={column.id}\n                          style={styles.columnItem}\n                          onPress={() => handleColumnVisibilityChange(column.id)}\n                        >\n                          <Text style={[styles.columnLabel, { color: colors.text.primary }]}>{column.label}</Text>\n                          <View style={[\n                            styles.checkbox,\n                            { borderColor: colors.border },\n                            column.isVisible && [styles.checkboxChecked, { backgroundColor: colors.primary, borderColor: colors.primary }]\n                          ]}>\n                            {column.isVisible && (\n                              <MaterialIcons name=\"check\" size={16} color={colors.text.inverse} />\n                            )}\n                          </View>\n                        </Pressable>\n                      ))}\n                    </View>\n                  </View>\n                </ScrollView>\n              </View>\n            ) : activeTab === 'appearance' ? (\n              <View style={styles.contentWrapper}>\n                <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n                  <View style={styles.content}>\n                    <Text style={[styles.contentTitle, { color: colors.text.primary }]}>Theme Settings</Text>\n                    <View style={styles.section}>\n                      <Pressable\n                        style={[styles.menuButton, { backgroundColor: colors.background.secondary }]}\n                        onPress={toggleTheme}\n                      >\n                        <View style={styles.menuButtonContent}>\n                          <MaterialIcons \n                            name={isDark ? 'dark-mode' : 'light-mode'} \n                            size={20} \n                            color={colors.text.primary} \n                          />\n                          <Text style={[styles.menuButtonText, { color: colors.text.primary }]}>\n                            {isDark ? 'Dark Mode' : 'Light Mode'}\n                          </Text>\n                        </View>\n                      </Pressable>\n                    </View>\n                  </View>\n                </ScrollView>\n              </View>\n            ) : (\n              renderAccountTab()\n            )}\n          </Pressable>\n        </Pressable>\n      </Modal>\n\n      <Modal\n        visible={isQuiversModalVisible}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => setIsQuiversModalVisible(false)}\n      >\n        <View \n          style={[\n            styles.modalOverlay,\n            { backgroundColor: 'rgba(0, 0, 0, 0.5)' }\n          ]}\n          onStartShouldSetResponder={() => true}\n        >\n          <View \n            style={[\n              styles.modalContent,\n              { backgroundColor: colors.background.primary }\n            ]}\n          >\n            <QuiverManager\n              selectedFoils={[]}\n              onClose={() => setIsQuiversModalVisible(false)}\n              initialTab=\"saved\"\n              standalone={true}\n            />\n          </View>\n        </View>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n  },\n  button: {\n    padding: spacing.MEDIUM,\n  },\n  iconButton: {\n    padding: spacing.XSMALL,\n    borderRadius: 8,\n  },\n  modalContent: {\n    width: '100%',\n    maxWidth: 600,\n    borderRadius: 12,\n    maxHeight: '90%',\n    overflow: 'hidden',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: spacing.LARGE,\n    borderBottomWidth: 1,\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n  },\n  columnGroup: {\n    flexDirection: 'column',\n    gap: spacing.MEDIUM,\n  },\n  filterGroup: {\n    padding: spacing.MEDIUM,\n  },\n  filterList: {\n    gap: spacing.MEDIUM,\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: spacing.LARGE,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n  },\n  closeButton: {\n    padding: 4,\n  },\n  tabs: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n  },\n  tab: {\n    flex: 1,\n    padding: 12,\n    alignItems: 'center',\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n  },\n  tabText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  activeTabText: {\n    // Remove static color reference since we're applying it dynamically\n  },\n  content: {\n    padding: 16,\n    width: '100%',\n  },\n  contentWrapper: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    flexGrow: 1,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginBottom: 12,\n  },\n  chipContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  chip: {\n    borderRadius: 16,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n  },\n  chipSelected: {},\n  chipText: {\n    fontSize: 14,\n  },\n  chipTextSelected: {},\n  columnList: {\n    gap: 12,\n  },\n  columnItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n  },\n  columnLabel: {\n    fontSize: 14,\n  },\n  checkbox: {\n    width: 20,\n    height: 20,\n    borderRadius: 4,\n    borderWidth: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  checkboxChecked: {},\n  headerWithAction: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  contentTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  clearButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n  },\n  clearButtonText: {\n    fontSize: 14,\n  },\n  noSeriesText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  // User Menu Styles\n  userInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n    marginBottom: 16,\n  },\n  userTextInfo: {\n    flex: 1,\n  },\n  avatarImage: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n  },\n  userName: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  userEmail: {\n    fontSize: 14,\n  },\n  menuDivider: {\n    height: 1,\n    marginBottom: 16,\n  },\n  menuButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      userSelect: 'none',\n      outline: 'none',\n      WebkitTapHighlightColor: 'transparent',\n    }),\n  },\n  menuButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n  },\n  menuButtonText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n}); ","import React, { lazy, Suspense, useEffect, useMemo, useContext } from 'react';\nimport { View, Text, StyleSheet, Pressable, Platform, useWindowDimensions, Alert, TouchableOpacity } from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackParamList, RootStackNavigationProp } from '../types/navigation';\nimport { SearchBar } from '../components/SearchBar';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { TableSettings } from '../components/TableSettings';\nimport { useTheme } from '../theme/ThemeContext';\nimport { useFoils } from '../hooks/useFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { FilterOptions } from '../types/filters';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT, DEFAULT_COLUMNS, getTableWidth, getContentWidth, Column } from '../constants/layout';\nimport { loadColumns, loadFilters, saveFilters } from '../utils/storage';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useApp } from '../context/AppContext';\nimport { routes } from '../utils/routes';\nimport { getEnvironmentConfig } from '../config/environment';\nimport { generateFoilId } from '../utils/foilUtils';\nimport { QuiverManager } from '../components/QuiverManager';\nimport { QuiverContext } from '../../App';\n\n// Lazy load screens with proper suspense boundaries\nconst BrowseScreen = React.lazy(() => import('../screens/BrowseScreen'));\nconst ComparisonScreen = React.lazy(() => import('../screens/ComparisonScreen'));\nconst QuiverScreen = React.lazy(() => import('../screens/QuiverScreen'));\nconst PrivacyPolicy = React.lazy(() => import('../screens/legal/PrivacyPolicy'));\nconst TermsOfService = React.lazy(() => import('../screens/legal/TermsOfService'));\nconst Contact = React.lazy(() => import('../screens/legal/Contact'));\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nconst ICON_NAMES = {\n  home: 'home-outline' as const,\n  browse: 'search-outline' as const,\n  compare: 'git-compare-outline' as const,\n  settings: 'settings-outline' as const,\n  quiver: 'bookmark-outline' as const,\n};\n\nfunction TabBarIcon({ name, color }: { name: keyof typeof ICON_NAMES; color: string }) {\n  if (Platform.OS === 'web') {\n    // Use text alternatives for web\n    const webIcons: Record<keyof typeof ICON_NAMES, string> = {\n      home: '🏠',\n      browse: '🔍',\n      compare: '⚖️',\n      settings: '⚙️',\n      quiver: '🔖'\n    };\n    return <Text style={{ fontSize: 20, color }}>{webIcons[name]}</Text>;\n  }\n  return <Ionicons name={ICON_NAMES[name]} size={24} color={color} />;\n}\n\n// Define linking configuration for web\nconst linking = {\n  prefixes: [getEnvironmentConfig().webUrl],\n  config: {\n    screens: {\n      Browse: {\n        path: routes.browse,\n        parse: {\n          mode: (mode: string) => mode,\n        },\n      },\n      Comparison: routes.comparison,\n      Quiver: routes.quiver,\n      Terms: routes.terms,\n      Privacy: routes.privacy,\n      Contact: routes.contact,\n    },\n  },\n};\n\n// Screen wrapper with suspense and navigation props\nconst ScreenWrapper = ({ \n  children, \n  ...props \n}: { \n  children: React.ReactElement; \n  [key: string]: any;\n}) => (\n  <Suspense fallback={<LoadingIndicator />}>\n    {React.cloneElement(children, props)}\n  </Suspense>\n);\n\nexport const AppHeader = () => {\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { colors } = useTheme();\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const { foils } = useFoils();\n  const { \n    searchQuery, \n    setSearchQuery, \n    filters, \n    setFilters, \n    columns, \n    setColumns,\n    setCurrentScreen \n  } = useApp();\n  const { filterOptions } = useFilteredFoils(foils, filters);\n  const { showQuiverManager } = useContext(QuiverContext);\n\n  // Calculate brands from foils\n  const brands = React.useMemo(() => {\n    if (!foils?.length) return [];\n    return [...new Set(foils.map(foil => foil.brand))].sort();\n  }, [foils]);\n\n  // Add missing function definitions\n  const handleLogoPress = () => {\n    navigation.navigate('Browse', {});\n  };\n\n  const handleSearch = (text: string) => {\n    setSearchQuery(text);\n    navigation.setParams({ searchQuery: text });\n  };\n\n  const getViewMode = (route: any) => {\n    if (route.name === 'Comparison') return 'comparison';\n    if (route.name === 'Quiver') return 'quiver';\n    return 'browse';\n  };\n\n  const getSearchPlaceholder = (route: any) => {\n    switch (route.name) {\n      case 'Comparison':\n        return 'Search foils to add to comparison...';\n      case 'Quiver':\n        return 'Search foils to add to quiver...';\n      default:\n        return 'Search foils...';\n    }\n  };\n\n  const handleSearchFocus = (route: any) => {\n    if (route.name === 'Browse') {\n      navigation.setParams({ showSearchDropdown: true });\n    }\n  };\n\n  const handleFilterChange = (type: keyof FilterOptions, value: string) => {\n    setFilters(prev => ({\n      ...prev,\n      [type]: prev[type].includes(value)\n        ? prev[type].filter(item => item !== value)\n        : [...prev[type], value]\n    }));\n  };\n\n  const handleFilterChangeWrapper = (type: string, value: string) => {\n    handleFilterChange(type as keyof FilterOptions, value);\n  };\n\n  const handleClearFilters = () => {\n    setFilters({\n      brands: [],\n      series: [],\n      type: []\n    });\n  };\n\n  const handleColumnVisibilityChange = (columnId: string) => {\n    setColumns(prev => \n      prev.map(col => \n        col.id === columnId ? { ...col, isVisible: !col.isVisible } : col\n      )\n    );\n  };\n\n  const handleResetColumns = () => {\n    setColumns(DEFAULT_COLUMNS);\n  };\n\n  // Calculate table width based on visible columns\n  const tableWidth = React.useMemo(() => getTableWidth(columns), [columns]);\n\n  // Calculate content width including padding\n  const contentWidth = React.useMemo(() => \n    getContentWidth(tableWidth, width, isMobile), \n    [tableWidth, width, isMobile]\n  );\n\n  // Calculate container width for header alignment\n  const containerWidth = React.useMemo(() => {\n    if (isMobile) {\n      return '100%';\n    }\n    // Match the table's container width exactly\n    return Math.min(tableWidth + (CONTAINER_PADDING * 2), width);\n  }, [tableWidth, width, isMobile]);\n\n  // Load saved column settings on mount\n  useEffect(() => {\n    const loadSavedColumnSettings = async () => {\n      try {\n        const savedColumns = await loadColumns();\n        if (savedColumns) {\n          const updatedColumns = DEFAULT_COLUMNS.map(col => ({\n            ...col,\n            isVisible: typeof savedColumns[col.id] === 'boolean' ? savedColumns[col.id] : col.isVisible\n          }));\n          setColumns(updatedColumns);\n        }\n      } catch (error) {\n        console.error('Error loading column settings:', error);\n      }\n    };\n\n    loadSavedColumnSettings();\n  }, []);\n\n  // Load saved filter settings on mount\n  useEffect(() => {\n    const loadSavedSettings = async () => {\n      try {\n        const savedFilters = await loadFilters();\n        if (savedFilters) {\n          setFilters({\n            brands: savedFilters.brands || [],\n            series: savedFilters.series || [],\n            type: savedFilters.types || []\n          });\n        }\n      } catch (error) {\n        console.error('Error loading filter settings:', error);\n      }\n    };\n\n    loadSavedSettings();\n  }, []);\n\n  const headerMainContainerStyle = React.useMemo(() => {\n    if (isMobile) {\n      return {\n        width: '100%' as const,\n        paddingHorizontal: CONTAINER_PADDING\n      };\n    }\n\n    // For web, match the table width exactly without additional padding\n    const containerWidth = getTableWidth(columns);\n    return {\n      width: containerWidth,\n      maxWidth: getContentWidth(containerWidth, width, false),\n      alignSelf: 'center' as const\n    };\n  }, [columns, width, isMobile]);\n\n  const renderHeaderRight = (route: any) => {\n    if (isMobile) {\n      return (\n        <View style={styles.headerRightContainerMobile}>\n          <TouchableOpacity\n            style={[styles.headerButton]}\n            onPress={showQuiverManager}\n          >\n            <TabBarIcon name=\"quiver\" color={colors.text.primary} />\n          </TouchableOpacity>\n          <TableSettings\n            filterOptions={filterOptions}\n            selectedBrands={filters.brands}\n            selectedSeries={filters.series}\n            selectedTypes={filters.type}\n            onFilterChange={handleFilterChangeWrapper}\n            onClearFilters={handleClearFilters}\n            columns={columns}\n            onColumnVisibilityChange={handleColumnVisibilityChange}\n            onResetColumns={handleResetColumns}\n            foils={foils}\n          />\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.headerRightContainerWeb}>\n        <TouchableOpacity\n          style={[styles.headerButton]}\n          onPress={showQuiverManager}\n        >\n          <TabBarIcon name=\"quiver\" color={colors.text.primary} />\n          {!isMobile && (\n            <Text style={[styles.headerButtonText, { color: colors.text.primary }]}>\n              My Quivers\n            </Text>\n          )}\n        </TouchableOpacity>\n        <TableSettings\n          filterOptions={filterOptions}\n          selectedBrands={filters.brands}\n          selectedSeries={filters.series}\n          selectedTypes={filters.type}\n          onFilterChange={handleFilterChangeWrapper}\n          onClearFilters={handleClearFilters}\n          columns={columns}\n          onColumnVisibilityChange={handleColumnVisibilityChange}\n          onResetColumns={handleResetColumns}\n          foils={foils}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: colors.background.primary,\n        },\n        headerShadowVisible: false,\n      }}\n    >\n      <Stack.Screen \n        name=\"Browse\"\n        options={({ route }) => ({\n          headerTitle: route.params?.title || '',\n          headerLeft: () => (\n            <View style={[\n              styles.headerOuterContainer,\n              { backgroundColor: colors.background.primary },\n              !isMobile && { alignItems: 'center' }\n            ]}>\n              {isMobile ? (\n                // Mobile Layout\n                <View style={styles.headerMainContainerMobile}>\n                  <View style={styles.headerTopRowMobile}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainerMobile,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitleMobile, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={styles.searchBarContainerMobile}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              ) : (\n                // Web Layout\n                <View style={[\n                  styles.headerMainContainerWeb,\n                  headerMainContainerStyle\n                ]}>\n                  <View style={[\n                    styles.headerContentWeb,\n                    { \n                      width: '100%',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }\n                  ]}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainer,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={[styles.searchBarContainerWeb, { flex: 1 }]}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              )}\n            </View>\n          ),\n        })}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <BrowseScreen\n              {...props}\n              filters={filters}\n              onFilterChange={handleFilterChangeWrapper}\n              columns={columns}\n              brands={brands}\n            />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Comparison\"\n        options={({ route }) => ({\n          headerTitle: route.params?.title || '',\n          headerLeft: () => (\n            <View style={[\n              styles.headerOuterContainer,\n              { backgroundColor: colors.background.primary },\n              !isMobile && { alignItems: 'center' }\n            ]}>\n              {isMobile ? (\n                // Mobile Layout\n                <View style={styles.headerMainContainerMobile}>\n                  <View style={styles.headerTopRowMobile}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainerMobile,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitleMobile, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={styles.searchBarContainerMobile}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              ) : (\n                // Web Layout\n                <View style={[\n                  styles.headerMainContainerWeb,\n                  headerMainContainerStyle\n                ]}>\n                  <View style={[\n                    styles.headerContentWeb,\n                    { \n                      width: '100%',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }\n                  ]}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainer,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={[styles.searchBarContainerWeb, { flex: 1 }]}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              )}\n            </View>\n          ),\n        })}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <ComparisonScreen {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Quiver\"\n        options={({ route }) => ({\n          headerTitle: '',\n          headerLeft: () => (\n            <View style={[\n              styles.headerOuterContainer,\n              { backgroundColor: colors.background.primary },\n              !isMobile && { alignItems: 'center' }\n            ]}>\n              {isMobile ? (\n                // Mobile Layout\n                <View style={styles.headerMainContainerMobile}>\n                  <View style={styles.headerTopRowMobile}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainerMobile,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitleMobile, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={styles.searchBarContainerMobile}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              ) : (\n                // Web Layout\n                <View style={[\n                  styles.headerMainContainerWeb,\n                  headerMainContainerStyle\n                ]}>\n                  <View style={[\n                    styles.headerContentWeb,\n                    { \n                      width: '100%',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }\n                  ]}>\n                    <Pressable \n                      onPress={handleLogoPress}\n                      style={({ pressed }) => [\n                        styles.logoContainer,\n                        pressed && styles.logoPressed\n                      ]}\n                    >\n                      <Text style={[styles.headerTitle, { color: colors.primary }]}>Foilquiver</Text>\n                    </Pressable>\n                    <View style={[styles.searchBarContainerWeb, { flex: 1 }]}>\n                      <SearchBar \n                        value={searchQuery}\n                        onChangeText={(text) => handleSearch(text)}\n                        onClear={() => handleSearch('')}\n                        mode={getViewMode(route)}\n                        placeholder={getSearchPlaceholder(route)}\n                        onFocus={() => handleSearchFocus(route)}\n                      />\n                    </View>\n                    {renderHeaderRight(route)}\n                  </View>\n                </View>\n              )}\n            </View>\n          ),\n        })}\n      >\n        {(props) => {\n          const currentQuiverFoils = React.useMemo(() => {\n            if (!props.route.params?.foil_ids || !Array.isArray(foils)) return [];\n            return foils.filter(f => {\n              if (!f) return false;\n              const foilId = generateFoilId(f);\n              return props.route.params.foil_ids.includes(foilId);\n            });\n          }, [props.route.params?.foil_ids, foils]);\n\n          return (\n            <ScreenWrapper>\n              <QuiverScreen {...props}\n                searchProps={{\n                  value: searchQuery,\n                  onChangeText: handleSearch,\n                  onClear: () => setSearchQuery(''),\n                  mode: 'quiver',\n                  placeholder: 'Search foils in quiver...'\n                }}\n                tableSettingsProps={{\n                  filterOptions,\n                  selectedBrands: filters.brands,\n                  selectedSeries: filters.series,\n                  selectedTypes: filters.type,\n                  onFilterChange: handleFilterChangeWrapper,\n                  onClearFilters: handleClearFilters,\n                  columns,\n                  onColumnVisibilityChange: handleColumnVisibilityChange,\n                  onResetColumns: handleResetColumns,\n                  foils: currentQuiverFoils\n                }}\n              />\n            </ScreenWrapper>\n          );\n        }}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Terms\"\n        options={{\n          headerShown: false,\n        }}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <TermsOfService {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Privacy\"\n        options={{\n          headerShown: false,\n        }}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <PrivacyPolicy {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n\n      <Stack.Screen\n        name=\"Contact\"\n        options={{\n          headerShown: false,\n        }}\n      >\n        {(props) => (\n          <ScreenWrapper>\n            <Contact {...props} />\n          </ScreenWrapper>\n        )}\n      </Stack.Screen>\n    </Stack.Navigator>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerOuterContainer: {\n    flex: 1,\n    paddingHorizontal: CONTAINER_PADDING,\n  },\n  // Mobile Styles\n  headerMainContainerMobile: {\n    width: '100%',\n  },\n  headerTopRowMobile: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    height: 48,\n    width: '100%',\n    gap: 8,\n  },\n  logoContainerMobile: {\n    height: '100%',\n    justifyContent: 'center',\n    minWidth: 80,\n  },\n  headerTitleMobile: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  searchBarContainerMobile: {\n    flex: 1,\n    height: 36,\n    minWidth: 120,\n    maxWidth: 200,\n  },\n  headerRightContainerMobile: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n    zIndex: 2000,\n  },\n  // Web Styles\n  headerMainContainerWeb: {\n    height: 72,\n    width: '100%',\n  },\n  headerContentWeb: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 24,\n    height: '100%',\n    width: '100%',\n  },\n  searchBarContainerWeb: {\n    flex: 1,\n    height: 40,\n  },\n  // Common Styles\n  logoContainer: {\n    height: '100%',\n    justifyContent: 'center',\n    minWidth: 120,\n  },\n  logoPressed: {\n    opacity: 0.7,\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  headerRightContainerWeb: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n    paddingRight: CONTAINER_PADDING,\n    zIndex: 2000,\n  },\n  headerButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    padding: 6,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      userSelect: 'none',\n    }),\n  },\n  headerButtonText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n}); ","import React, { useRef, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNavigationContainerRef, LinkingOptions, getStateFromPath, getPathFromState } from '@react-navigation/native';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { View } from 'react-native';\nimport { ErrorBoundary } from './src/components/ErrorBoundary';\nimport { ThemeProvider } from './src/theme/ThemeContext';\nimport { AppProvider } from './src/context/AppContext';\nimport { LoadingIndicator } from './src/components/LoadingIndicator';\nimport { QuiverManager } from './src/components/QuiverManager';\nimport { routes } from './src/utils/routes';\nimport { RootStackParamList } from './src/types/navigation';\nimport { getPrefixes } from './src/config/environment';\nimport { AppHeader } from './src/navigation/AppHeader';\nimport { Platform } from 'react-native';\n\nexport const QuiverContext = React.createContext<{\n  showQuiverManager: () => void;\n  hideQuiverManager: () => void;\n}>({\n  showQuiverManager: () => {},\n  hideQuiverManager: () => {},\n});\n\nexport default function App() {\n  const navigationRef = createNavigationContainerRef<RootStackParamList>();\n  const [isQuiverManagerVisible, setIsQuiverManagerVisible] = useState(false);\n  \n  const showQuiverManager = () => setIsQuiverManagerVisible(true);\n  const hideQuiverManager = () => setIsQuiverManagerVisible(false);\n\n  const linking: LinkingOptions<RootStackParamList> = {\n    prefixes: getPrefixes(),\n    config: {\n      screens: {\n        Browse: {\n          path: '/',\n          parse: {\n            mode: (mode: string) => mode,\n          },\n          stringify: {\n            mode: (mode: string) => mode,\n          },\n        },\n        Comparison: {\n          path: '/comparison',\n          exact: true,\n          stringify: {\n            quiverName: (name: string) => name,\n            foils: (foils: any[]) => JSON.stringify(foils),\n          },\n        },\n        Quiver: {\n          path: '/quiver/:quiverId',\n          parse: {\n            quiverId: (id: string) => id,\n            quiverName: (name: string) => name,\n            foils: (foils: string) => foils ? JSON.parse(foils) : undefined,\n          },\n          stringify: {\n            quiverId: (id: string) => id,\n            quiverName: (name: string) => name,\n            foils: (foils: any[]) => JSON.stringify(foils),\n          },\n        },\n        Terms: '/terms',\n        Privacy: '/privacy',\n        Contact: '/contact',\n      },\n    },\n    getStateFromPath: (path, options) => {\n      // Handle direct navigation to comparison\n      if (path === '/comparison') {\n        return {\n          routes: [\n            {\n              name: 'Comparison',\n              params: {},\n            },\n          ],\n        };\n      }\n      return getStateFromPath(path, options);\n    },\n    getPathFromState: (state, config) => {\n      // Handle comparison route specially\n      if (state.routes[state.routes.length - 1].name === 'Comparison') {\n        return '/comparison';\n      }\n      const path = getPathFromState(state, config);\n      return path || '/';\n    },\n  };\n\n  return (\n    <ThemeProvider>\n      <AppProvider>\n        <QuiverContext.Provider value={{ showQuiverManager, hideQuiverManager }}>\n          <HelmetProvider>\n            <ErrorBoundary>\n              <SafeAreaProvider>\n                <NavigationContainer \n                  ref={navigationRef}\n                  linking={linking}\n                  fallback={<LoadingIndicator />}\n                >\n                  <View style={{ flex: 1 }}>\n                    <AppHeader />\n                    {isQuiverManagerVisible && (\n                      <QuiverManager\n                        standalone={false}\n                        isModalVisible={isQuiverManagerVisible}\n                        onClose={hideQuiverManager}\n                        initialTab=\"saved\"\n                      />\n                    )}\n                  </View>\n                </NavigationContainer>\n              </SafeAreaProvider>\n            </ErrorBoundary>\n          </HelmetProvider>\n        </QuiverContext.Provider>\n      </AppProvider>\n    </ThemeProvider>\n  );\n} ","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import React from 'react';\nimport { View, Text, ActivityIndicator, StyleSheet } from 'react-native';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\ninterface LoadingIndicatorProps {\n  message?: string;\n  size?: 'small' | 'large';\n  fullScreen?: boolean;\n}\n\nexport const LoadingIndicator: React.FC<LoadingIndicatorProps> = ({\n  message = 'Loading...',\n  size = 'large',\n  fullScreen = true,\n}) => {\n  const { colors } = useTheme();\n\n  return (\n    <View\n      style={[\n        styles.container,\n        fullScreen && styles.fullScreen,\n        { backgroundColor: colors.background.primary },\n      ]}\n    >\n      <ActivityIndicator size={size} color={colors.primary} />\n      {message && (\n        <Text style={[styles.message, { color: colors.text.secondary }]}>\n          {message}\n        </Text>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: spacing.LARGE,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fullScreen: {\n    flex: 1,\n  },\n  message: {\n    marginTop: spacing.MEDIUM,\n    fontSize: 16,\n    textAlign: 'center',\n  },\n}); ","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Modal,\n  TextInput,\n  ScrollView,\n  Alert,\n  Platform,\n  useWindowDimensions,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { useQuivers } from '../hooks/useQuivers';\nimport { BaseProduct } from '../types/scraper';\nimport { Quiver } from '../types/quiver';\nimport { useTheme } from '../theme/ThemeContext';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT } from '../constants/layout';\nimport { spacing } from '../theme/spacing';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { trackAction, ANALYTICS_EVENTS } from '../utils/analytics';\nimport { logger } from '../utils/logger';\nimport { useApp } from '../context/AppContext';\nimport { generateFoilId } from '../utils/foilUtils';\n\ninterface QuiverManagerProps {\n  selectedFoils?: BaseProduct[];\n  onClose?: () => void;\n  initialTab?: 'save' | 'saved';\n  standalone?: boolean;\n  isModalVisible?: boolean;\n  hideStandaloneButton?: boolean;\n  onQuiverSaved?: (quiverId: string, quiverName: string) => void;\n}\n\nexport const QuiverManager: React.FC<QuiverManagerProps> = ({\n  selectedFoils = [],\n  onClose,\n  initialTab = 'save',\n  standalone = false,\n  isModalVisible,\n  hideStandaloneButton = false,\n  onQuiverSaved,\n}) => {\n  const { colors } = useTheme();\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { setSelectedFoils } = useApp();\n\n  const [isModalVisibleInternal, setIsModalVisibleInternal] = useState(!standalone);\n  const modalVisible = isModalVisible !== undefined ? isModalVisible : isModalVisibleInternal;\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [activeTab, setActiveTab] = useState<'save' | 'saved'>(initialTab);\n  const [editingQuiverId, setEditingQuiverId] = useState<string | null>(null);\n  const [editingName, setEditingName] = useState('');\n\n  const {\n    quivers,\n    isLoading,\n    error,\n    createQuiver,\n    deleteQuiver,\n    reloadQuivers,\n    updateQuiver\n  } = useQuivers();\n\n  const handleCreateQuiver = async () => {\n    if (!name.trim()) {\n      if (Platform.OS === 'web') {\n        window.alert('Please enter a name for your quiver');\n      } else {\n        Alert.alert('Error', 'Please enter a name for your quiver');\n      }\n      return;\n    }\n\n    try {\n      const result = await createQuiver({\n        name: name.trim(),\n        description: description.trim(),\n        foils: selectedFoils, // Use selected foils if they exist\n      });\n\n      if (result) {\n        trackAction(ANALYTICS_EVENTS.SAVE_QUIVER, {\n          foilCount: selectedFoils.length,\n          isNewQuiver: true,\n          fromComparison: selectedFoils.length > 0,\n        });\n        \n        setName('');\n        setDescription('');\n        setIsModalVisibleInternal(false);\n        onClose?.();\n        onQuiverSaved?.(result.id, result.name);\n\n        // Navigate to QuiverView with the new quiver\n        navigation.navigate('Quiver', {\n          quiverId: result.id,\n          quiverName: result.name,\n          foil_ids: selectedFoils.map(f => generateFoilId(f))\n        });\n      } else {\n        throw new Error('Failed to create quiver - no result returned');\n      }\n    } catch (error) {\n      console.error('Error creating quiver:', error);\n      if (Platform.OS === 'web') {\n        window.alert(`Failed to save quiver: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      } else {\n        Alert.alert('Error', `Failed to save quiver: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    }\n  };\n\n  const handleDeleteQuiver = async (quiverId: string) => {\n    try {\n      const userConfirmed = await new Promise<boolean>((resolve) => {\n        Alert.alert(\n          'Delete Quiver',\n          'Are you sure you want to delete this quiver? This action cannot be undone.',\n          [\n            {\n              text: 'Cancel',\n              style: 'cancel',\n              onPress: () => resolve(false),\n            },\n            {\n              text: 'Delete',\n              style: 'destructive',\n              onPress: () => resolve(true),\n            },\n          ],\n          { cancelable: false }\n        );\n      });\n\n      if (!userConfirmed) return;\n\n      const success = await deleteQuiver(quiverId);\n      \n      if (success) {\n        trackAction(ANALYTICS_EVENTS.DELETE_QUIVER, {\n          quiverId,\n        });\n        Alert.alert('Success', 'Quiver deleted successfully');\n      } else {\n        Alert.alert('Error', 'Failed to delete quiver. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error deleting quiver:', error);\n      Alert.alert('Error', 'An unexpected error occurred. Please try again.');\n    }\n  };\n\n  const handleViewQuiver = (quiver: Quiver) => {\n    // Close the modal first\n    setIsModalVisibleInternal(false);\n    onClose?.();\n\n    // Clear any existing selected foils before navigating\n    setSelectedFoils([]);\n\n    // Navigate to Quiver screen with the quiver's data\n    navigation.navigate('Quiver', {\n        quiverId: quiver.id,\n        quiverName: quiver.name,\n        foil_ids: quiver.foil_ids || []\n    });\n  };\n\n  const handleStartRename = (quiver: Quiver) => {\n    setEditingQuiverId(quiver.id);\n    setEditingName(quiver.name);\n  };\n\n  const handleSaveRename = async () => {\n    if (!editingQuiverId || !editingName.trim()) return;\n\n    try {\n      const success = await updateQuiver(editingQuiverId, { name: editingName.trim() });\n      if (success) {\n        trackAction(ANALYTICS_EVENTS.UPDATE_QUIVER, {\n          quiverId: editingQuiverId,\n          action: 'rename',\n        });\n        \n        if (Platform.OS === 'web') {\n          window.alert('Quiver renamed successfully');\n        } else {\n          Alert.alert('Success', 'Quiver renamed successfully');\n        }\n        setEditingQuiverId(null);\n        setEditingName('');\n        reloadQuivers();\n      }\n    } catch (error) {\n      console.error('Error renaming quiver:', error);\n      Alert.alert('Error', 'Failed to rename quiver');\n    }\n  };\n\n  const getFoilCount = (quiver: Quiver) => {\n    if (quiver.foil_ids && Array.isArray(quiver.foil_ids)) {\n        return quiver.foil_ids.length;\n    }\n    return 0;\n  };\n\n  const renderQuiverList = () => {\n    if (isLoading) {\n      return (\n        <View style={styles.centerContent}>\n          <Text style={[styles.message, { color: colors.text.secondary }]}>\n            Loading quivers...\n          </Text>\n        </View>\n      );\n    }\n\n    if (error) {\n      return (\n        <View style={styles.centerContent}>\n          <Text style={[styles.message, { color: colors.error }]}>\n            {error}\n          </Text>\n        </View>\n      );\n    }\n\n    return (\n      <View>\n        {quivers.length === 0 ? (\n          <View style={styles.centerContent}>\n            <Text style={[styles.message, { color: colors.text.secondary }]}>\n              No saved quivers yet\n            </Text>\n          </View>\n        ) : (\n          quivers.map((quiver) => {\n            return (\n              <View\n                key={quiver.id}\n                style={[\n                  styles.quiverItem,\n                  { borderBottomColor: colors.border }\n                ]}\n              >\n                <TouchableOpacity \n                  style={styles.quiverInfo}\n                  onPress={() => handleViewQuiver(quiver)}\n                >\n                  {editingQuiverId === quiver.id ? (\n                    <View style={styles.renameContainer}>\n                      <TextInput\n                        style={[\n                          styles.renameInput,\n                          { \n                            color: colors.text.primary,\n                            borderColor: colors.border,\n                            backgroundColor: colors.background.secondary\n                          }\n                        ]}\n                        value={editingName}\n                        onChangeText={setEditingName}\n                        placeholder=\"Enter new name\"\n                        placeholderTextColor={colors.text.tertiary}\n                        autoFocus\n                      />\n                      <TouchableOpacity\n                        style={[styles.renameButton, { backgroundColor: colors.error }]}\n                        onPress={() => {\n                          setEditingQuiverId(null);\n                          setEditingName('');\n                        }}\n                      >\n                        <Text style={[styles.renameButtonText, { color: colors.text.inverse }]}>Cancel</Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        style={[styles.renameButton, { backgroundColor: colors.primary }]}\n                        onPress={handleSaveRename}\n                      >\n                        <Text style={[styles.renameButtonText, { color: colors.text.inverse }]}>Save</Text>\n                      </TouchableOpacity>\n                    </View>\n                  ) : (\n                    <>\n                      <View style={styles.quiverNameContainer}>\n                        <Text style={[styles.quiverName, { color: colors.text.primary }]}>\n                          {quiver.name}\n                        </Text>\n                        <TouchableOpacity\n                          onPress={() => handleStartRename(quiver)}\n                          style={styles.renameIcon}\n                        >\n                          {Platform.OS === 'web' ? (\n                            <Text style={{ color: colors.text.secondary }}>✎</Text>\n                          ) : (\n                            <Ionicons name=\"pencil\" size={16} color={colors.text.secondary} />\n                          )}\n                        </TouchableOpacity>\n                      </View>\n                      {quiver.description && (\n                        <Text style={[styles.quiverDescription, { color: colors.text.secondary }]}>\n                          {quiver.description}\n                        </Text>\n                      )}\n                      <Text style={[styles.quiverMeta, { color: colors.text.tertiary }]}>\n                        {getFoilCount(quiver)} foils • {new Date(quiver.updated_at).toLocaleDateString()}\n                      </Text>\n                    </>\n                  )}\n                </TouchableOpacity>\n                {Platform.OS === 'web' ? (\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      try {\n                        const confirmed = window.confirm('Are you sure you want to delete this quiver? This action cannot be undone.');\n                        if (confirmed) {\n                          deleteQuiver(quiver.id).then(success => {\n                            if (success) {\n                              reloadQuivers();\n                            } else {\n                              window.alert('Failed to delete quiver');\n                            }\n                          }).catch(error => {\n                            console.error('Delete error:', error);\n                            window.alert('Error deleting quiver');\n                          });\n                        }\n                      } catch (error) {\n                        console.error('Delete error:', error);\n                        window.alert('Error in delete operation');\n                      }\n                    }}\n                    style={{\n                      padding: '8px',\n                      borderWidth: '1px',\n                      borderStyle: 'solid',\n                      borderColor: colors.error,\n                      borderRadius: '8px',\n                      minWidth: '70px',\n                      backgroundColor: colors.background.primary,\n                      cursor: 'pointer',\n                      color: colors.error,\n                      fontWeight: '600',\n                      fontSize: '14px',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      zIndex: 10,\n                      position: 'relative',\n                      pointerEvents: 'auto',\n                    }}\n                  >\n                    Delete\n                  </button>\n                ) : (\n                  <TouchableOpacity\n                    style={[\n                      styles.deleteButton, \n                      { \n                        borderColor: colors.error,\n                        backgroundColor: colors.background.primary \n                      }\n                    ]}\n                    onPress={() => {\n                      handleDeleteQuiver(quiver.id);\n                    }}\n                  >\n                    <Ionicons name=\"trash-outline\" size={20} color={colors.error} />\n                  </TouchableOpacity>\n                )}\n              </View>\n            );\n          })\n        )}\n        \n        <View style={styles.createButtonContainer}>\n          <TouchableOpacity\n            style={[\n              styles.createEmptyButton,\n              { backgroundColor: colors.primary }\n            ]}\n            onPress={() => setActiveTab('save')}\n          >\n            <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n              Create New Quiver\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  const content = (\n    <>\n      <View style={[styles.modalHeader, { borderBottomColor: colors.border }]}>\n        <Text style={[styles.modalTitle, { color: colors.text.primary }]}>\n          Manage Quivers\n        </Text>\n        {onClose && (\n          <TouchableOpacity onPress={onClose}>\n            {Platform.OS === 'web' ? (\n              <Text style={{ fontSize: 24, color: colors.text.primary }}>×</Text>\n            ) : (\n              <Ionicons name=\"close\" size={24} color={colors.text.primary} />\n            )}\n          </TouchableOpacity>\n        )}\n      </View>\n\n      {selectedFoils.length > 0 && (\n        <View style={[styles.tabContainer, { borderBottomColor: colors.border }]}>\n          <TouchableOpacity\n            style={[\n              styles.tab,\n              activeTab === 'save' && [\n                styles.activeTab,\n                { borderBottomColor: colors.primary }\n              ]\n            ]}\n            onPress={() => setActiveTab('save')}\n          >\n            <Text\n              style={[\n                styles.tabText,\n                { color: activeTab === 'save' ? colors.primary : colors.text.secondary }\n              ]}\n            >\n              Save Quiver\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={[\n              styles.tab,\n              activeTab === 'saved' && [\n                styles.activeTab,\n                { borderBottomColor: colors.primary }\n              ]\n            ]}\n            onPress={() => setActiveTab('saved')}\n          >\n            <Text\n              style={[\n                styles.tabText,\n                { color: activeTab === 'saved' ? colors.primary : colors.text.secondary }\n              ]}\n            >\n              Saved Quivers\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n\n      <ScrollView style={styles.modalBody}>\n        {activeTab === 'save' ? (\n          <View style={styles.form}>\n            <View style={styles.formField}>\n              <Text style={[styles.label, { color: colors.text.secondary }]}>\n                Name\n              </Text>\n              <TextInput\n                style={[\n                  styles.input,\n                  { \n                    color: colors.text.primary,\n                    borderColor: colors.border,\n                    backgroundColor: colors.background.secondary\n                  }\n                ]}\n                value={name}\n                onChangeText={setName}\n                placeholder=\"Enter quiver name\"\n                placeholderTextColor={colors.text.tertiary}\n              />\n            </View>\n\n            <View style={styles.formField}>\n              <Text style={[styles.label, { color: colors.text.secondary }]}>\n                Description (optional)\n              </Text>\n              <TextInput\n                style={[\n                  styles.input,\n                  styles.textArea,\n                  { \n                    color: colors.text.primary,\n                    borderColor: colors.border,\n                    backgroundColor: colors.background.secondary\n                  }\n                ]}\n                value={description}\n                onChangeText={setDescription}\n                placeholder=\"Enter description\"\n                placeholderTextColor={colors.text.tertiary}\n                multiline\n                numberOfLines={3}\n              />\n            </View>\n\n            <TouchableOpacity\n              style={[\n                styles.createButton,\n                { backgroundColor: colors.primary }\n              ]}\n              onPress={handleCreateQuiver}\n            >\n              <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n                {selectedFoils.length > 0 ? 'Save Quiver' : 'Create Empty Quiver'}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        ) : (\n          <View style={styles.quiverList}>\n            {renderQuiverList()}\n          </View>\n        )}\n      </ScrollView>\n    </>\n  );\n\n  if (standalone) {\n    return content;\n  }\n\n  return (\n    <>\n      {selectedFoils.length > 0 && !standalone && !isModalVisible && !hideStandaloneButton && (\n        <TouchableOpacity\n          style={[\n            styles.saveButton,\n            { backgroundColor: colors.primary }\n          ]}\n          onPress={() => setIsModalVisibleInternal(true)}\n        >\n          {Platform.OS === 'web' ? (\n            <Text style={{ fontSize: 20, color: colors.text.inverse, marginRight: 8 }}>+</Text>\n          ) : (\n            <Ionicons name=\"bookmark-outline\" size={20} color={colors.text.inverse} />\n          )}\n          <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n            Save Quiver\n          </Text>\n        </TouchableOpacity>\n      )}\n      <Modal\n        visible={modalVisible}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => {\n          setIsModalVisibleInternal(false);\n          onClose?.();\n        }}\n      >\n        <TouchableOpacity\n          style={[\n            styles.modalOverlay,\n            standalone && styles.standaloneOverlay\n          ]}\n          activeOpacity={1}\n          onPress={() => {\n            setIsModalVisibleInternal(false);\n            onClose?.();\n          }}\n        >\n          <TouchableOpacity\n            style={[\n              styles.modalContent,\n              { backgroundColor: colors.background.primary },\n              isMobile && styles.modalContentMobile\n            ]}\n            activeOpacity={1}\n            onPress={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n          >\n            {content}\n          </TouchableOpacity>\n        </TouchableOpacity>\n      </Modal>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  saveButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    gap: 8,\n    minHeight: 40,\n    minWidth: 120,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n    }),\n  },\n  buttonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    textAlign: 'center',\n    ...(Platform.OS === 'web' && {\n      userSelect: 'none',\n    }),\n  },\n  modalOverlay: {\n    position: 'absolute' as const,\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: CONTAINER_PADDING,\n    zIndex: 2000,\n    ...(Platform.OS === 'web' && {\n      position: 'absolute' as const,\n      pointerEvents: 'auto',\n    }),\n  },\n  modalContent: {\n    width: '100%',\n    maxWidth: 600,\n    borderRadius: 12,\n    maxHeight: '90%',\n    zIndex: 2001,\n    ...(Platform.OS === 'web' && {\n      pointerEvents: 'auto',\n      userSelect: 'none',\n    }),\n  },\n  modalContentMobile: {\n    maxWidth: '100%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: spacing.LARGE,\n    borderBottomWidth: 1,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n  },\n  modalBody: {\n    flex: 1,\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: spacing.MEDIUM,\n    alignItems: 'center',\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n  },\n  tabText: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  form: {\n    padding: spacing.LARGE,\n  },\n  formField: {\n    marginBottom: spacing.LARGE,\n  },\n  label: {\n    fontSize: 14,\n    marginBottom: spacing.SMALL,\n  },\n  input: {\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: spacing.MEDIUM,\n    fontSize: 16,\n    ...(Platform.OS === 'web' && {\n      outlineStyle: 'none',\n    }),\n  },\n  textArea: {\n    height: 80,\n    paddingTop: spacing.MEDIUM,\n    textAlignVertical: 'top',\n  },\n  createButton: {\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  quiverList: {\n    padding: spacing.LARGE,\n  },\n  quiverItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: spacing.MEDIUM,\n    borderBottomWidth: 1,\n  },\n  quiverInfo: {\n    flex: 1,\n    marginRight: spacing.MEDIUM,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  quiverName: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  quiverDescription: {\n    fontSize: 14,\n    marginBottom: 4,\n  },\n  quiverMeta: {\n    fontSize: 12,\n  },\n  deleteButton: {\n    padding: spacing.SMALL,\n    borderWidth: 1,\n    borderRadius: 8,\n    minWidth: Platform.OS === 'web' ? 70 : 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 10,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      position: 'relative',\n    }),\n  },\n  deleteIcon: {\n    fontSize: 14,\n    fontWeight: '600',\n  },\n  centerContent: {\n    padding: spacing.LARGE,\n    alignItems: 'center',\n  },\n  message: {\n    fontSize: 16,\n  },\n  standaloneOverlay: {\n    position: 'relative',\n    backgroundColor: 'transparent',\n  },\n  renameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n  },\n  renameInput: {\n    flex: 1,\n    height: 32,\n    borderWidth: 1,\n    borderRadius: 4,\n    paddingHorizontal: spacing.SMALL,\n    fontSize: 14,\n  },\n  renameButton: {\n    paddingHorizontal: spacing.MEDIUM,\n    paddingVertical: spacing.SMALL,\n    borderRadius: 4,\n  },\n  renameButtonText: {\n    fontSize: 12,\n    fontWeight: '500',\n  },\n  quiverNameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.SMALL,\n  },\n  renameIcon: {\n    padding: spacing.SMALL,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  createButtonContainer: {\n    borderTopWidth: 1,\n    marginTop: spacing.LARGE,\n    paddingTop: spacing.LARGE,\n    paddingBottom: spacing.MEDIUM,\n  },\n  createEmptyButton: {\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    alignItems: 'center',\n    minWidth: 180,\n    alignSelf: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      userSelect: 'none',\n      boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n    }),\n  },\n}); ","// Supabase Configuration\nexport const SUPABASE_URL = 'https://zhylhvuhhoialsgqrxxr.supabase.co';\nexport const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpoeWxodnVoaG9pYWxzZ3FyeHhyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzkxNjM3NTgsImV4cCI6MjA1NDczOTc1OH0.wrZ05wA3EcbBubG3Mrxmx--fA9ThE2_M9k9WYTmGpag';\n\n// Google OAuth Configuration\nexport const GOOGLE_CLIENT_ID = '159399186219-fagq1jdgjps8q6fq70e9ua8pnmjac7bs.apps.googleusercontent.com'; ","import { Platform } from 'react-native';\n\nexport type Environment = 'development' | 'staging' | 'production';\n\ninterface EnvironmentConfig {\n  apiUrl: string;\n  webUrl: string;\n  appScheme: string;\n}\n\nconst ENV: Environment = process.env.EXPO_PUBLIC_ENV as Environment || 'development';\n\nconst configs: Record<Environment, EnvironmentConfig> = {\n  development: {\n    apiUrl: 'http://localhost:3000',\n    webUrl: 'http://localhost:19006',\n    appScheme: 'foilquiver-dev',\n  },\n  staging: {\n    apiUrl: 'https://api.staging.foilquiver.com',\n    webUrl: 'https://staging.foilquiver.com',\n    appScheme: 'foilquiver-staging',\n  },\n  production: {\n    apiUrl: 'https://api.foilquiver.com',\n    webUrl: 'https://foilquiver.com',\n    appScheme: 'foilquiver',\n  },\n};\n\nexport const getEnvironmentConfig = (): EnvironmentConfig => {\n  return configs[ENV];\n};\n\nexport const getPrefixes = (): string[] => {\n  const config = getEnvironmentConfig();\n  if (Platform.OS === 'web') {\n    return [config.webUrl];\n  }\n  return [`${config.appScheme}://`];\n};\n\nexport const isProduction = () => ENV === 'production';\nexport const isDevelopment = () => ENV === 'development';\nexport const isStaging = () => ENV === 'staging'; ","// Layout constants\nexport const CONTAINER_PADDING = 16;\nexport const MAX_CONTENT_WIDTH = 1200;\nexport const MOBILE_BREAKPOINT = 768;\n\n// Column width constants\nexport const COLUMN_WIDTHS = {\n  brand: 100,\n  series: 120,\n  model: 150,\n  area: 80,\n  wingspan: 80,\n  aspectRatio: 80,\n  type: 80,\n  price: 105,\n  link: 80,\n} as const;\n\nexport type Column = {\n  id: keyof typeof COLUMN_WIDTHS;\n  label: string;\n  isVisible: boolean;\n};\n\n// Default column configuration\nexport const DEFAULT_COLUMNS: Column[] = [\n  { id: 'brand', label: 'Brand', isVisible: true },\n  { id: 'series', label: 'Series', isVisible: false },\n  { id: 'model', label: 'Model', isVisible: true },\n  { id: 'area', label: 'Area', isVisible: true },\n  { id: 'wingspan', label: 'Span', isVisible: true },\n  { id: 'aspectRatio', label: 'AR', isVisible: true },\n  { id: 'type', label: 'Type', isVisible: true },\n  { id: 'price', label: 'Price', isVisible: true },\n  { id: 'link', label: 'Link', isVisible: true },\n];\n\n// Helper functions for width calculations\nexport const getTableWidth = (columns: Column[]) => {\n  return columns.reduce((total, column) => {\n    if (column.isVisible) {\n      return total + (COLUMN_WIDTHS[column.id] || 100);\n    }\n    return total;\n  }, 0);\n};\n\nexport const getContentWidth = (tableWidth: number, screenWidth: number, isMobile: boolean) => {\n  if (isMobile) {\n    return screenWidth;\n  }\n  return Math.min(tableWidth, screenWidth - 48);\n}; ","import React, { createContext, useContext, useState, useEffect, Dispatch, SetStateAction } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\nimport { Column } from '../constants/layout';\nimport { loadColumns, loadFilters, saveFilters } from '../utils/storage';\nimport { DEFAULT_COLUMNS } from '../constants/layout';\n\ninterface AppContextType {\n  // Search state\n  searchQuery: string;\n  setSearchQuery: Dispatch<SetStateAction<string>>;\n  \n  // Filter state\n  filters: FilterOptions;\n  setFilters: Dispatch<SetStateAction<FilterOptions>>;\n  \n  // Column settings\n  columns: Column[];\n  setColumns: Dispatch<SetStateAction<Column[]>>;\n  \n  // Selected foils state\n  selectedFoils: BaseProduct[];\n  setSelectedFoils: Dispatch<SetStateAction<BaseProduct[]>>;\n  \n  // Navigation state\n  currentScreen: string | null;\n  setCurrentScreen: Dispatch<SetStateAction<string | null>>;\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\nexport const AppProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  // Search state\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  // Filter state\n  const [filters, setFilters] = useState<FilterOptions>({\n    brands: [],\n    series: [],\n    type: []\n  });\n  \n  // Column settings\n  const [columns, setColumns] = useState<Column[]>(DEFAULT_COLUMNS);\n  \n  // Selected foils state\n  const [selectedFoils, setSelectedFoils] = useState<BaseProduct[]>([]);\n  \n  // Navigation state - initialize as null to prevent default routing\n  const [currentScreen, setCurrentScreen] = useState<string | null>(null);\n\n  // Load saved filters and columns on mount\n  useEffect(() => {\n    const loadSavedSettings = async () => {\n      try {\n        const savedFilters = await loadFilters();\n        if (savedFilters) {\n          setFilters({\n            brands: savedFilters.brands || [],\n            series: savedFilters.series || [],\n            type: savedFilters.types || []\n          });\n        }\n\n        const savedColumns = await loadColumns();\n        if (savedColumns && Array.isArray(savedColumns)) {\n          setColumns(savedColumns.map((col: Partial<Column>) => ({\n            ...DEFAULT_COLUMNS.find(defaultCol => defaultCol.id === col.id)!,\n            ...col\n          })));\n        }\n      } catch (error) {\n        console.error('Error loading saved settings:', error);\n      }\n    };\n\n    loadSavedSettings();\n  }, []);\n\n  // Save filters when they change\n  useEffect(() => {\n    saveFilters({\n      brands: filters.brands,\n      series: filters.series,\n      types: filters.type\n    });\n  }, [filters]);\n\n  // Reset filters when screen changes\n  useEffect(() => {\n    if (currentScreen) {\n      setFilters({ brands: [], series: [], type: [] });\n    }\n  }, [currentScreen]);\n\n  const value = {\n    searchQuery,\n    setSearchQuery,\n    filters,\n    setFilters,\n    columns,\n    setColumns,\n    selectedFoils,\n    setSelectedFoils,\n    currentScreen,\n    setCurrentScreen,\n  };\n\n  return (\n    <AppContext.Provider value={value}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}; ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\nimport { groupFoilsByBrand, groupFoilsBySeries } from '../utils/dataTransform';\n\nexport function useFilteredFoils(foils: BaseProduct[], filters: FilterOptions) {\n  const filterOptions = useMemo(() => {\n    const brands = Array.from(new Set(foils.map(foil => foil.brand))).sort();\n    \n    // Group foils by brand\n    const foilsByBrand = groupFoilsByBrand(foils);\n    \n    // Get series based on selected brands\n    let availableSeries: string[] = [];\n    if (filters.brands.length === 0) {\n      // If no brands selected, show all series\n      availableSeries = Array.from(new Set(foils.map(foil => foil.series))).sort();\n    } else {\n      // If brands are selected, only show series from those brands\n      const filteredFoils = filters.brands.flatMap(brand => foilsByBrand[brand] || []);\n      availableSeries = Array.from(new Set(filteredFoils.map(foil => foil.series))).sort();\n    }\n\n    const types = ['front', 'tail'];\n\n    return { brands, series: availableSeries, types };\n  }, [foils, filters.brands]);\n\n  const filteredFoils = useMemo(() => {\n    return foils.filter(foil => {\n      const brandMatch = filters.brands.length === 0 || filters.brands.includes(foil.brand);\n      const seriesMatch = filters.series.length === 0 || filters.series.includes(foil.series);\n      const typeMatch = filters.type.length === 0 || filters.type.includes(foil.type);\n\n      return brandMatch && seriesMatch && typeMatch;\n    });\n  }, [foils, filters.brands, filters.series, filters.type]);\n\n  return {\n    filteredFoils,\n    filterOptions,\n  };\n} ","import { BaseProduct } from '../types/scraper';\n\nexport function formatMeasurement(value: number, unit: string): string {\n  return `${value}${unit}`;\n}\n\nexport function convertArea(cmSquared: number): number {\n  return Math.round(cmSquared * 0.155); // Convert to square inches\n}\n\nexport function calculateAspectRatio(wingspan: number, area: number): number {\n  return Math.round((wingspan * wingspan / area) * 100) / 100;\n}\n\nexport function groupFoilsByBrand(foils: BaseProduct[]): Record<string, BaseProduct[]> {\n  return foils.reduce((acc, foil) => {\n    if (!acc[foil.brand]) {\n      acc[foil.brand] = [];\n    }\n    acc[foil.brand].push(foil);\n    return acc;\n  }, {} as Record<string, BaseProduct[]>);\n}\n\nexport function groupFoilsBySeries(foils: BaseProduct[]): Record<string, BaseProduct[]> {\n  return foils.reduce((acc, foil) => {\n    if (!acc[foil.series]) {\n      acc[foil.series] = [];\n    }\n    acc[foil.series].push(foil);\n    return acc;\n  }, {} as Record<string, BaseProduct[]>);\n}\n\nexport function getUniqueValues(foils: BaseProduct[], key: keyof BaseProduct): string[] {\n  return Array.from(new Set(foils.map(foil => foil[key] as string))).sort();\n} ","import { BaseProduct } from '../types/scraper';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport class ProductService {\n  private static isWeb = Platform.OS === 'web';\n  private static DATA_PATH = '/data/foils.json';\n  private static CACHE_DIR = '.cache';\n\n  // Get base URL for data loading\n  private static getBaseUrl(): string {\n    if (process.env.NODE_ENV === 'development') {\n      return '';\n    }\n    return process.env.NODE_ENV === 'staging' \n      ? 'https://staging.foilquiver.com'\n      : 'https://foilquiver.com';\n  }\n\n  static async getAllProducts(): Promise<BaseProduct[]> {\n    try {\n      if (this.isWeb) {\n        const baseUrl = this.getBaseUrl();\n\n        // Try loading from data directory first\n        try {\n          const response = await fetch(`${baseUrl}${this.DATA_PATH}`);\n          if (response.ok) {\n            const products = await response.json();\n            console.log(`Loaded ${products.length} products from ${this.DATA_PATH}`);\n            return products;\n          } else {\n            console.warn(`Failed to load from ${this.DATA_PATH} (${response.status}), trying .cache directory...`);\n          }\n        } catch (error) {\n          console.warn(`Failed to load from ${this.DATA_PATH}, trying .cache directory...`, error);\n        }\n\n        // Try loading from .cache as fallback\n        try {\n          // Normalize brand names to match file names\n          const brands = ['armstrong', 'lift-foils', 'axis-foils', 'code-foils', 'kt-foils', 'uni-foil'];\n          const allProducts: BaseProduct[] = [];\n          \n          for (const brand of brands) {\n            try {\n              const response = await fetch(`${baseUrl}/${this.CACHE_DIR}/${brand}.json`);\n              if (response.ok) {\n                const products = await response.json();\n                console.log(`Loaded ${products.length} products for ${brand} from .cache`);\n                allProducts.push(...products);\n              }\n            } catch (error) {\n              console.warn(`No cache file found for ${brand}`);\n            }\n          }\n\n          if (allProducts.length > 0) {\n            return allProducts;\n          }\n        } catch (error) {\n          console.warn('Failed to load from .cache directory', error);\n        }\n      } else {\n        // For mobile, use AsyncStorage\n        const cached = await AsyncStorage.getItem('foils');\n        if (cached) {\n          const products = JSON.parse(cached);\n          console.log(`Loaded ${products.length} products from AsyncStorage`);\n          return products;\n        }\n      }\n    } catch (error) {\n      console.error('Error loading foils data:', error);\n    }\n    \n    console.warn('No foils data found in any location');\n    return [];\n  }\n} ","import { useState, useEffect } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { ProductService } from '../services/productService';\n\nexport function useFoils() {\n  const [foils, setFoils] = useState<BaseProduct[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadFoils = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const products = await ProductService.getAllProducts();\n      setFoils(products);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load foils');\n      console.error('Error loading foils:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadFoils();\n  }, []);\n\n  const refreshFoils = () => {\n    loadFoils();\n  };\n\n  return {\n    foils,\n    loading,\n    error,\n    refreshFoils\n  };\n} ","import { useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Platform } from 'react-native';\nimport { supabase } from '../utils/supabase';\nimport { Quiver, CreateQuiverInput, UpdateQuiverInput } from '../types/quiver';\nimport { BaseProduct } from '../types/scraper';\nimport { generateFoilId, generateUUID } from '../utils/foilUtils';\nimport { logger } from '../utils/logger';\nimport { Environment } from '../config/environment';\n\nconst STORAGE_KEYS = {\n  QUIVERS: '@foilquiver/quivers',\n} as const;\n\n// Get the current environment\nconst getEnvironment = (): 'dev' | 'staging' | 'prod' => {\n  if (process.env.NODE_ENV === 'development') return 'dev';\n  if (window.location.hostname.includes('staging')) return 'staging';\n  return 'prod';\n};\n\n// Get the table name for the current environment\nconst getTableName = () => {\n  const env = getEnvironment();\n  return `${env}_quivers`;\n};\n\n// Storage helper that works for both web and native\nconst storage = {\n  getItem: async (key: string): Promise<string | null> => {\n    if (Platform.OS === 'web') {\n      return localStorage.getItem(key);\n    }\n    return AsyncStorage.getItem(key);\n  },\n  setItem: async (key: string, value: string): Promise<void> => {\n    if (Platform.OS === 'web') {\n      localStorage.setItem(key, value);\n      return;\n    }\n    return AsyncStorage.setItem(key, value);\n  },\n  removeItem: async (key: string): Promise<void> => {\n    if (Platform.OS === 'web') {\n      localStorage.removeItem(key);\n      return;\n    }\n    return AsyncStorage.removeItem(key);\n  }\n};\n\n// Local interface for creating quivers\ninterface LocalCreateQuiverInput {\n    name: string;\n    description?: string;\n    foils: BaseProduct[];\n    is_public?: boolean;\n}\n\n// Local interface for syncing quivers\ninterface LocalQuiverData {\n    name: string;\n    description?: string;\n    foils: BaseProduct[];\n    is_public?: boolean;\n}\n\nconst ENV: Environment = process.env.EXPO_PUBLIC_ENV as Environment || 'development';\n\nexport const useQuivers = () => {\n  const [quivers, setQuivers] = useState<Quiver[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadQuivers = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const { data: { session } } = await supabase.auth.getSession();\n      \n      if (session?.user) {\n        const { data, error: supabaseError } = await supabase\n          .from(getTableName())\n          .select('*')\n          .eq('environment', getEnvironment())\n          .eq('user_id', session.user.id)\n          .order('updated_at', { ascending: false });\n\n        if (supabaseError) throw supabaseError;\n        setQuivers(data || []);\n      } else {\n        const storedQuivers = await storage.getItem(STORAGE_KEYS.QUIVERS);\n        if (storedQuivers) {\n          setQuivers(JSON.parse(storedQuivers));\n        } else {\n          setQuivers([]);\n        }\n      }\n    } catch (err) {\n      console.error('Error loading quivers:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load quivers');\n      setQuivers([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const createQuiver = async (input: LocalCreateQuiverInput): Promise<Quiver | null> => {\n    try {\n      setError(null);\n      const { data: { session } } = await supabase.auth.getSession();\n\n      if (session?.user) {\n        const tableName = getTableName();\n        const env = getEnvironment();\n\n        const foil_ids = input.foils.map(foil => generateFoilId(foil));\n\n        const insertData = {\n          name: input.name,\n          description: input.description || '',\n          user_id: session.user.id,\n          environment: env,\n          foil_ids,\n          is_public: input.is_public || false\n        };\n\n        const { error: insertError } = await supabase\n          .from(tableName)\n          .insert(insertData);\n\n        if (insertError) {\n          logger.error('Insert error:', {\n            message: insertError.message,\n            details: insertError.details,\n            hint: insertError.hint,\n            code: insertError.code\n          });\n          throw insertError;\n        }\n\n        const { data: newData, error: selectError } = await supabase\n          .from(tableName)\n          .select('*')\n          .eq('user_id', session.user.id)\n          .eq('name', input.name)\n          .order('created_at', { ascending: false })\n          .limit(1)\n          .single();\n\n        if (selectError) throw selectError;\n        if (!newData) throw new Error('Failed to retrieve created quiver');\n\n        const newQuiver = {\n          ...newData,\n          foils: input.foils\n        };\n\n        setQuivers(prev => [newQuiver, ...prev]);\n        return newQuiver;\n      } else {\n        const env = getEnvironment();\n        const foil_ids = input.foils.map(foil => generateFoilId(foil));\n        \n        const newQuiver: Quiver = {\n          id: generateUUID(),\n          name: input.name,\n          description: input.description || '',\n          foil_ids,\n          is_public: input.is_public || false,\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n          user_id: 'local',\n          environment: env\n        };\n\n        const updatedQuivers = [newQuiver, ...quivers];\n        await storage.setItem(STORAGE_KEYS.QUIVERS, JSON.stringify(updatedQuivers));\n        setQuivers(updatedQuivers);\n        return newQuiver;\n      }\n    } catch (err) {\n      console.error('Error creating quiver:', err);\n      throw err;\n    }\n  };\n\n  const deleteQuiver = async (id: string): Promise<boolean> => {\n    try {\n      setError(null);\n      const { data: { session } } = await supabase.auth.getSession();\n\n      if (session?.user) {\n        const { error: supabaseError } = await supabase\n          .from(getTableName())\n          .delete()\n          .eq('id', id)\n          .eq('user_id', session.user.id)\n          .eq('environment', getEnvironment());\n\n        if (supabaseError) throw supabaseError;\n      }\n\n      const updatedQuivers = quivers.filter(quiver => quiver.id !== id);\n      setQuivers(updatedQuivers);\n\n      if (!session?.user) {\n        await storage.setItem(STORAGE_KEYS.QUIVERS, JSON.stringify(updatedQuivers));\n      }\n\n      return true;\n    } catch (err) {\n      console.error('Error deleting quiver:', err);\n      setError(err instanceof Error ? err.message : 'Failed to delete quiver');\n      return false;\n    }\n  };\n\n  // Update an existing quiver\n  const updateQuiver = async (quiverId: string, updates: UpdateQuiverInput) => {\n    setError(null);\n    try {\n      const { data: { session } } = await supabase.auth.getSession();\n      \n      if (session?.user) {\n        const { error } = await supabase\n          .from(getTableName())\n          .update(updates)\n          .eq('id', quiverId);\n\n        if (error) throw error;\n        await loadQuivers();\n        return true;\n      } else {\n        // Local storage update logic\n        const storedQuivers = await storage.getItem(STORAGE_KEYS.QUIVERS);\n        if (!storedQuivers) return false;\n\n        const parsedQuivers: Quiver[] = JSON.parse(storedQuivers);\n        const updatedQuivers = parsedQuivers.map(quiver => {\n          if (quiver.id === quiverId) {\n            return {\n              ...quiver,\n              ...updates,\n              updated_at: new Date().toISOString()\n            };\n          }\n          return quiver;\n        });\n\n        await storage.setItem(STORAGE_KEYS.QUIVERS, JSON.stringify(updatedQuivers));\n        setQuivers(updatedQuivers);\n        return true;\n      }\n    } catch (error) {\n      console.error('Error updating quiver:', error);\n      setError('Failed to update quiver');\n      return false;\n    }\n  };\n\n  // Sync storage quivers to Supabase when user logs in\n  const syncQuiversToSupabase = async () => {\n    try {\n      const { data: { session } } = await supabase.auth.getSession();\n      if (!session?.user) return;\n\n      const localQuivers = await storage.getItem(STORAGE_KEYS.QUIVERS);\n      if (!localQuivers) return;\n\n      const parsedQuivers: LocalQuiverData[] = JSON.parse(localQuivers);\n      const env = getEnvironment();\n      \n      // Insert all local quivers to Supabase\n      for (const quiver of parsedQuivers) {\n        const foil_ids = quiver.foils.map(foil => generateFoilId(foil));\n        const insertData = {\n          name: quiver.name,\n          description: quiver.description || '',\n          foil_ids,\n          is_public: quiver.is_public || false,\n          user_id: session.user.id,\n          environment: env\n        };\n        await supabase\n          .from(getTableName())\n          .insert([insertData]);\n      }\n\n      // Clear storage after successful sync\n      await storage.removeItem(STORAGE_KEYS.QUIVERS);\n      \n      // Reload quivers from Supabase\n      await loadQuivers();\n    } catch (err) {\n      console.error('Error syncing quivers:', err);\n    }\n  };\n\n  // Load quivers on mount and when auth state changes\n  useEffect(() => {\n    loadQuivers();\n\n    // Listen for auth state changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event) => {\n      if (event === 'SIGNED_IN') {\n        await syncQuiversToSupabase();\n      }\n      await loadQuivers();\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  return {\n    quivers,\n    isLoading,\n    error,\n    createQuiver,\n    updateQuiver,\n    deleteQuiver,\n    reloadQuivers: loadQuivers,\n  };\n}; ","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useColorScheme } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getColors, ThemeColors } from './colors';\n\ntype ThemeContextType = {\n  isDark: boolean;\n  colors: ThemeColors;\n  toggleTheme: () => void;\n};\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nconst THEME_STORAGE_KEY = '@foilquiver/theme';\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const systemColorScheme = useColorScheme();\n  const [isDark, setIsDark] = useState<boolean>(systemColorScheme === 'dark');\n\n  useEffect(() => {\n    // Load saved theme preference\n    const loadTheme = async () => {\n      try {\n        const savedTheme = await AsyncStorage.getItem(THEME_STORAGE_KEY);\n        if (savedTheme !== null) {\n          setIsDark(savedTheme === 'dark');\n        }\n      } catch (error) {\n        console.error('Error loading theme:', error);\n      }\n    };\n\n    loadTheme();\n  }, []);\n\n  const toggleTheme = async () => {\n    try {\n      const newTheme = !isDark;\n      setIsDark(newTheme);\n      await AsyncStorage.setItem(THEME_STORAGE_KEY, newTheme ? 'dark' : 'light');\n    } catch (error) {\n      console.error('Error saving theme:', error);\n    }\n  };\n\n  const colors = getColors(isDark ? 'dark' : 'light');\n\n  return (\n    <ThemeContext.Provider value={{ isDark, colors, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}; ","import { ColorSchemeName } from 'react-native';\n\nexport type ThemeColors = {\n  background: {\n    primary: string;\n    secondary: string;\n    tertiary: string;\n  };\n  text: {\n    primary: string;\n    secondary: string;\n    tertiary: string;\n    inverse: string;\n  };\n  border: string;\n  primary: string;\n  error: string;\n  success: string;\n  warning: string;\n};\n\n// Sunset theme colors (accent colors)\nconst SPACE_CADET = '#1F214D';\nconst EMINENCE = '#50366F';\nconst MAGENTA_DYE = '#BF3475';\nconst BURNT_SIENNA = '#EE6C45';\nconst SUNGLOW = '#FFCE61';\n\n// Neutral colors for text and backgrounds\nconst NEUTRAL = {\n  50: '#F9FAFB',\n  100: '#F3F4F6',\n  200: '#E5E7EB',\n  300: '#D1D5DB',\n  400: '#9CA3AF',\n  500: '#6B7280',\n  600: '#4B5563',\n  700: '#374151',\n  800: '#1F2937',\n  900: '#111827',\n};\n\nconst lightColors: ThemeColors = {\n  background: {\n    primary: NEUTRAL[50],\n    secondary: NEUTRAL[100],\n    tertiary: NEUTRAL[200],\n  },\n  text: {\n    primary: NEUTRAL[900],\n    secondary: NEUTRAL[700],\n    tertiary: NEUTRAL[500],\n    inverse: NEUTRAL[50],\n  },\n  border: NEUTRAL[200],\n  primary: MAGENTA_DYE,\n  error: '#DC2626',\n  success: '#059669',\n  warning: SUNGLOW,\n};\n\nconst darkColors: ThemeColors = {\n  background: {\n    primary: NEUTRAL[900],\n    secondary: NEUTRAL[800],\n    tertiary: NEUTRAL[700],\n  },\n  text: {\n    primary: NEUTRAL[50],\n    secondary: NEUTRAL[200],\n    tertiary: NEUTRAL[400],\n    inverse: NEUTRAL[900],\n  },\n  border: NEUTRAL[700],\n  primary: MAGENTA_DYE,\n  error: '#EF4444',\n  success: '#10B981',\n  warning: SUNGLOW,\n};\n\nexport const getColors = (colorScheme: ColorSchemeName): ThemeColors => {\n  return colorScheme === 'dark' ? darkColors : lightColors;\n};\n\n// For backward compatibility\nexport const colors = lightColors; \n\n","export const spacing = {\n  XSMALL: 4,\n  SMALL: 8,\n  MEDIUM: 12,\n  LARGE: 16,\n  XLARGE: 24,\n  XXLARGE: 32,\n  \n  // Component-specific spacing\n  CONTAINER_PADDING: 24,\n  BUTTON_PADDING_H: 16,\n  BUTTON_PADDING_V: 8,\n  BUTTON_GAP: 12,\n  CONTROLS_BOTTOM: 24,\n\n  // Screen and view layout\n  SCREEN_PADDING: 24,\n  TABLE_CONTAINER_PADDING: 24,\n  HEADER_PADDING: 12,\n  CONTENT_PADDING: 16,\n  \n  // Controls and bottom elements\n  CONTROLS_CONTAINER_BOTTOM: 24,\n  CONTROLS_CONTAINER_PADDING: 24,\n} as const; ","import { Platform } from 'react-native';\n\ninterface PlausibleEvent {\n  name: string;\n  props?: Record<string, string | number | boolean>;\n}\n\ndeclare global {\n  interface Window {\n    plausible?: (eventName: string, options?: { props: Record<string, any> }) => void;\n  }\n}\n\nexport const trackEvent = (event: PlausibleEvent) => {\n  if (Platform.OS === 'web' && window.plausible) {\n    window.plausible(event.name, event.props ? { props: event.props } : undefined);\n  }\n};\n\nexport const trackPageView = (screenName: string, props?: Record<string, any>) => {\n  trackEvent({\n    name: 'pageview',\n    props: {\n      page: screenName,\n      ...props\n    }\n  });\n};\n\nexport const trackAction = (action: string, props?: Record<string, any>) => {\n  trackEvent({\n    name: action,\n    props\n  });\n};\n\n// Common analytics events\nexport const ANALYTICS_EVENTS = {\n  // Page views\n  VIEW_COMPARISON: 'view_comparison',\n  VIEW_QUIVER: 'view_quiver',\n  \n  // Actions\n  COMPARE_FOILS: 'compare_foils',\n  SAVE_QUIVER: 'save_quiver',\n  DELETE_QUIVER: 'delete_quiver',\n  UPDATE_QUIVER: 'update_quiver',\n  FILTER_FOILS: 'filter_foils',\n  SORT_FOILS: 'sort_foils',\n  SEARCH_FOILS: 'search_foils',\n} as const; ","import { BaseProduct } from '../types/scraper';\n\nexport const generateFoilId = (foil: BaseProduct): string => {\n  return `${foil.brand.toLowerCase()}-${foil.model.toLowerCase().replace(/\\s+/g, '-')}`;\n};\n\n// Generate a UUID v4 that works across platforms\nexport const generateUUID = (): string => {\n  // Use crypto.randomUUID if available (web)\n  if (typeof crypto !== 'undefined' && crypto.randomUUID) {\n    return crypto.randomUUID();\n  }\n\n  // Fallback implementation for mobile\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}; ","type LogLevel = 'debug' | 'info' | 'warn' | 'error';\n\nclass Logger {\n  private static instance: Logger;\n  private isDevelopment = process.env.NODE_ENV === 'development' || __DEV__;\n\n  private constructor() {\n    // Log environment status on initialization\n    if (this.isDevelopment) {\n      console.info('[Logger] Initialized in development mode');\n      console.info('[Logger] Environment:', process.env.NODE_ENV);\n    }\n  }\n\n  static getInstance(): Logger {\n    if (!Logger.instance) {\n      Logger.instance = new Logger();\n    }\n    return Logger.instance;\n  }\n\n  private log(level: LogLevel, message: string, ...args: any[]) {\n    // Always log errors, only log other levels in development\n    if (this.isDevelopment || level === 'error') {\n      const timestamp = new Date().toISOString();\n      const formattedMessage = `[${timestamp}] [${level.toUpperCase()}] ${message}`;\n      \n      switch (level) {\n        case 'debug':\n          console.debug(formattedMessage, ...args);\n          break;\n        case 'info':\n          console.info(formattedMessage, ...args);\n          break;\n        case 'warn':\n          console.warn(formattedMessage, ...args);\n          break;\n        case 'error':\n          console.error(formattedMessage, ...args);\n          break;\n      }\n    }\n  }\n\n  debug(message: string, ...args: any[]) {\n    this.log('debug', message, ...args);\n  }\n\n  info(message: string, ...args: any[]) {\n    this.log('info', message, ...args);\n  }\n\n  warn(message: string, ...args: any[]) {\n    this.log('warn', message, ...args);\n  }\n\n  error(message: string, ...args: any[]) {\n    this.log('error', message, ...args);\n  }\n}\n\nexport const logger = Logger.getInstance(); ","export const routes = {\n  browse: '/',\n  comparison: '/comparison',\n  quiver: '/quiver/:quiverId',\n  terms: '/terms',\n  privacy: '/privacy',\n  contact: '/contact',\n} as const;\n\n// Add a helper function to clean routes for navigation\nexport const cleanRoute = (route: string) => route.slice(1); // Remove leading slash \n\nexport const getRouteFromPath = (path: string) => {\n  return path.startsWith('/') ? path : `/${path}`;\n}; ","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { logger } from './logger';\nimport { FilterOptions } from '../types/filters';\nimport { SortField } from '../hooks/useSortedFoils';\n\nconst STORAGE_KEYS = {\n  FILTERS: '@foilquiver/filters',\n  COLUMNS: '@foilquiver/columns',\n  THEME: '@foilquiver/theme',\n  SORT: '@foilquiver/sort',\n} as const;\n\nexport interface StoredFilters {\n  brands: string[];\n  series: string[];\n  types: string[];\n}\n\nexport interface StoredColumns {\n  [key: string]: boolean;\n}\n\nexport interface StoredSort {\n  field: SortField;\n  ascending: boolean;\n}\n\nclass Storage {\n  async set(key: string, value: any): Promise<void> {\n    try {\n      const jsonValue = JSON.stringify(value);\n      await AsyncStorage.setItem(key, jsonValue);\n    } catch (error) {\n      logger.error('Error setting storage item:', error);\n      throw error;\n    }\n  }\n\n  async get<T>(key: string): Promise<T | null> {\n    try {\n      const jsonValue = await AsyncStorage.getItem(key);\n      return jsonValue != null ? JSON.parse(jsonValue) : null;\n    } catch (error) {\n      logger.error('Error getting storage item:', error);\n      throw error;\n    }\n  }\n\n  async remove(key: string): Promise<void> {\n    try {\n      await AsyncStorage.removeItem(key);\n    } catch (error) {\n      logger.error('Error removing storage item:', error);\n      throw error;\n    }\n  }\n\n  async clear(): Promise<void> {\n    try {\n      await AsyncStorage.clear();\n    } catch (error) {\n      logger.error('Error clearing storage:', error);\n      throw error;\n    }\n  }\n\n  async getAllKeys(): Promise<readonly string[]> {\n    try {\n      return await AsyncStorage.getAllKeys();\n    } catch (error) {\n      logger.error('Error getting all storage keys:', error);\n      throw error;\n    }\n  }\n}\n\nexport const storage = new Storage();\n\nexport const saveFilters = async (filters: StoredFilters) => {\n  try {\n    await AsyncStorage.setItem(STORAGE_KEYS.FILTERS, JSON.stringify(filters));\n  } catch (error) {\n    console.error('Error saving filters:', error);\n  }\n};\n\nexport const loadFilters = async (): Promise<StoredFilters | null> => {\n  try {\n    const savedFilters = await AsyncStorage.getItem(STORAGE_KEYS.FILTERS);\n    return savedFilters ? JSON.parse(savedFilters) : null;\n  } catch (error) {\n    console.error('Error loading filters:', error);\n    return null;\n  }\n};\n\nexport const saveColumns = async (columns: StoredColumns) => {\n  try {\n    await AsyncStorage.setItem(STORAGE_KEYS.COLUMNS, JSON.stringify(columns));\n  } catch (error) {\n    console.error('Error saving columns:', error);\n  }\n};\n\nexport const loadColumns = async (): Promise<StoredColumns | null> => {\n  try {\n    const savedColumns = await AsyncStorage.getItem(STORAGE_KEYS.COLUMNS);\n    return savedColumns ? JSON.parse(savedColumns) : null;\n  } catch (error) {\n    console.error('Error loading columns:', error);\n    return null;\n  }\n};\n\nexport const saveSortOption = async (sort: StoredSort) => {\n  try {\n    await AsyncStorage.setItem(STORAGE_KEYS.SORT, JSON.stringify(sort));\n  } catch (error) {\n    console.error('Error saving sort option:', error);\n  }\n};\n\nexport const loadSortOption = async (): Promise<StoredSort | null> => {\n  try {\n    const savedSort = await AsyncStorage.getItem(STORAGE_KEYS.SORT);\n    return savedSort ? JSON.parse(savedSort) : null;\n  } catch (error) {\n    console.error('Error loading sort option:', error);\n    return null;\n  }\n};\n\nexport const clearAllSettings = async () => {\n  try {\n    const keys = Object.values(STORAGE_KEYS);\n    await AsyncStorage.multiRemove(keys);\n  } catch (error) {\n    console.error('Error clearing settings:', error);\n  }\n}; ","import { createClient } from '@supabase/supabase-js';\nimport { Platform } from 'react-native';\nimport { SUPABASE_URL, SUPABASE_ANON_KEY } from '../config/env';\nimport { getEnvironmentConfig } from '../config/environment';\n\n// Get the site URL based on the environment\nconst getSiteUrl = () => {\n  if (Platform.OS !== 'web') return undefined;\n  \n  const { webUrl } = getEnvironmentConfig();\n  const hostname = window.location.hostname;\n  if (hostname === 'localhost' || hostname.includes('127.0.0.1')) {\n    return webUrl;\n  }\n  return window.location.origin;\n};\n\n// Initialize the Supabase client\nexport const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {\n  auth: {\n    flowType: 'pkce',\n    detectSessionInUrl: true,\n    autoRefreshToken: true,\n    persistSession: true,\n    storage: typeof window !== 'undefined' ? window.localStorage : {\n      getItem: () => null,\n      setItem: () => {},\n      removeItem: () => {},\n    },\n    storageKey: 'sb-auth-token',\n    ...(Platform.OS === 'web' && {\n      redirectTo: getSiteUrl(),\n      cookieOptions: {\n        name: 'sb-auth-token',\n        lifetime: 60 * 60 * 24 * 365,\n        domain: typeof window !== 'undefined' ? window.location.hostname : undefined,\n        sameSite: 'lax',\n        secure: false,\n        path: '/',\n        httpOnly: false\n      }\n    }),\n  },\n  global: {\n    headers: {\n      'X-Client-Info': 'supabase-js-web'\n    },\n  },\n}); "],"names":["ErrorBoundary","React","constructor","props","super","this","state","hasError","error","getDerivedStateFromError","componentDidCatch","errorInfo","handleRetry","setState","render","_jsx","ErrorView","onRetry","children","colors","useTheme","View","style","styles","container","backgroundColor","background","primary","_jsxs","content","Text","title","color","message","text","secondary","TouchableOpacity","button","onPress","buttonText","inverse","StyleSheet","create","flex","alignItems","justifyContent","padding","spacing","LARGE","maxWidth","width","fontSize","fontWeight","marginBottom","MEDIUM","textAlign","Object","assign","paddingHorizontal","paddingVertical","borderRadius","cursor","stack","fontFamily","marginTop","SearchBar","value","onChangeText","onClear","placeholder","autoFocus","mode","onFocus","useWindowDimensions","isMobile","MOBILE_BREAKPOINT","searchIcon","TextInput","input","getPlaceholder","placeholderTextColor","tertiary","autoCapitalize","autoCorrect","clearButtonMode","returnKeyType","maxFontSizeMultiplier","spellCheck","autoComplete","clearButton","clearIcon","flexDirection","height","gap","SMALL","outlineStyle","border","lineHeight","aspectRatio","GoogleSignIn","onSuccess","useEffect","initializeGoogleSignIn","window","google","accounts","id","initialize","client_id","GOOGLE_CLIENT_ID","callback","async","supabase","auth","signInWithIdToken","provider","token","response","credential","use_fedcm_for_prompt","buttonContainer","document","getElementById","renderButton","type","theme","size","shape","script","createElement","src","onload","body","appendChild","removeChild","minHeight","TableSettings","filterOptions","selectedBrands","selectedSeries","selectedTypes","onFilterChange","onClearFilters","columns","onColumnVisibilityChange","onResetColumns","foils","isOpen","setIsOpen","useState","activeTab","setActiveTab","isDark","toggleTheme","session","setSession","user","setUser","isQuiversModalVisible","setIsQuiversModalVisible","getSession","then","data","subscription","onAuthStateChange","_event","unsubscribe","savedFilters","loadFilters","brands","forEach","brand","series","types","savedColumns","loadColumns","currentColumns","fromEntries","map","col","isVisible","entries","columnId","loadSavedSettings","filters","saveFilters","saveFilterSettings","columnSettings","column","saveColumns","saveColumnSettings","availableSeries","useMemo","length","seriesSet","Set","foil","includes","add","Array","from","sort","_Fragment","Pressable","iconButton","MaterialIcons","name","Modal","visible","transparent","animationType","onRequestClose","modalOverlay","modalContent","e","stopPropagation","modalHeader","borderBottomColor","modalTitle","closeButton","tabs","tab","tabText","activeTabText","some","contentWrapper","ScrollView","scrollView","contentContainerStyle","scrollContent","headerWithAction","contentTitle","clearButtonText","section","sectionTitle","chipContainer","chip","chipSelected","chipText","chipTextSelected","noSeriesText","columnList","columnItem","handleColumnVisibilityChange","columnLabel","label","checkbox","borderColor","checkboxChecked","menuButton","menuButtonContent","menuButtonText","userInfo","user_metadata","avatar_url","Image","source","uri","avatarImage","userTextInfo","userName","full_name","email","userEmail","menuDivider","pressed","opacity","revoke","signOut","scope","handleSignOut","role","onStartShouldSetResponder","QuiverManager","selectedFoils","onClose","initialTab","standalone","position","XSMALL","maxHeight","overflow","borderBottomWidth","buttonGroup","columnGroup","filterGroup","filterList","flexGrow","flexWrap","borderWidth","userSelect","outline","WebkitTapHighlightColor","BrowseScreen","ComparisonScreen","QuiverScreen","PrivacyPolicy","TermsOfService","Contact","Stack","createNativeStackNavigator","TabBarIcon","webIcons","home","browse","compare","settings","quiver","getEnvironmentConfig","webUrl","routes","comparison","terms","privacy","contact","ScreenWrapper","_ref","_objectWithoutPropertiesLoose","_excluded","Suspense","fallback","LoadingIndicator","AppHeader","navigation","useNavigation","useFoils","searchQuery","setSearchQuery","setFilters","setColumns","setCurrentScreen","useApp","useFilteredFoils","showQuiverManager","useContext","QuiverContext","handleLogoPress","navigate","handleSearch","setParams","getViewMode","route","getSearchPlaceholder","handleSearchFocus","showSearchDropdown","handleFilterChangeWrapper","handleFilterChange","prev","filter","item","handleClearFilters","handleResetColumns","DEFAULT_COLUMNS","tableWidth","getTableWidth","getContentWidth","Math","min","CONTAINER_PADDING","updatedColumns","loadSavedColumnSettings","headerMainContainerStyle","containerWidth","alignSelf","renderHeaderRight","headerRightContainerMobile","headerButton","headerRightContainerWeb","headerButtonText","Navigator","screenOptions","headerStyle","headerShadowVisible","Screen","options","headerTitle","params","headerLeft","headerOuterContainer","headerMainContainerMobile","headerTopRowMobile","logoContainerMobile","logoPressed","headerTitleMobile","searchBarContainerMobile","headerMainContainerWeb","headerContentWeb","logoContainer","searchBarContainerWeb","currentQuiverFoils","foil_ids","isArray","f","foilId","generateFoilId","searchProps","tableSettingsProps","headerShown","minWidth","zIndex","paddingRight","hideQuiverManager","registerRootComponent","navigationRef","createNavigationContainerRef","isQuiverManagerVisible","setIsQuiverManagerVisible","linking","prefixes","getPrefixes","config","screens","Browse","path","parse","stringify","Comparison","exact","quiverName","JSON","Quiver","quiverId","undefined","Terms","Privacy","getStateFromPath","getPathFromState","ThemeProvider","AppProvider","Provider","HelmetProvider","SafeAreaProvider","NavigationContainer","ref","isModalVisible","fullScreen","ActivityIndicator","hideStandaloneButton","onQuiverSaved","setSelectedFoils","isModalVisibleInternal","setIsModalVisibleInternal","modalVisible","setName","description","setDescription","editingQuiverId","setEditingQuiverId","editingName","setEditingName","quivers","isLoading","createQuiver","deleteQuiver","reloadQuivers","updateQuiver","useQuivers","handleSaveRename","trim","trackAction","ANALYTICS_EVENTS","UPDATE_QUIVER","action","alert","Alert","getFoilCount","tabContainer","modalBody","form","formField","textArea","multiline","numberOfLines","createButton","result","Error","SAVE_QUIVER","foilCount","isNewQuiver","fromComparison","quiverList","centerContent","quiverItem","quiverInfo","handleViewQuiver","renameContainer","renameInput","renameButton","renameButtonText","quiverNameContainer","handleStartRename","renameIcon","quiverDescription","quiverMeta","Date","updated_at","toLocaleDateString","onClick","confirm","success","catch","borderStyle","display","pointerEvents","createButtonContainer","createEmptyButton","saveButton","marginRight","standaloneOverlay","activeOpacity","modalContentMobile","preventDefault","boxShadow","top","left","right","bottom","paddingTop","textAlignVertical","deleteButton","deleteIcon","borderTopWidth","paddingBottom","SUPABASE_URL","SUPABASE_ANON_KEY","ENV","process","EXPO_PUBLIC_ENV","configs","development","apiUrl","appScheme","staging","production","COLUMN_WIDTHS","model","area","wingspan","price","link","reduce","total","screenWidth","AppContext","createContext","currentScreen","find","defaultCol","context","foilsByBrand","acc","push","groupFoilsByBrand","filteredFoils","flatMap","brandMatch","seriesMatch","typeMatch","ProductService","getBaseUrl","getAllProducts","isWeb","baseUrl","fetch","DATA_PATH","ok","json","allProducts","CACHE_DIR","products","cached","AsyncStorage","getItem","setFoils","loading","setLoading","setError","loadFoils","err","refreshFoils","STORAGE_KEYS","getEnvironment","location","hostname","getTableName","storage","localStorage","key","setItem","removeItem","setQuivers","setIsLoading","loadQuivers","supabaseError","select","eq","order","ascending","storedQuivers","event","localQuivers","parsedQuivers","env","insertData","is_public","user_id","environment","insert","syncQuiversToSupabase","tableName","insertError","logger","details","hint","code","newData","selectError","limit","single","newQuiver","generateUUID","created_at","toISOString","updatedQuivers","updates","update","delete","ThemeContext","THEME_STORAGE_KEY","systemColorScheme","useColorScheme","setIsDark","savedTheme","loadTheme","getColors","newTheme","MAGENTA_DYE","SUNGLOW","NEUTRAL","lightColors","warning","darkColors","colorScheme","XLARGE","XXLARGE","BUTTON_PADDING_H","BUTTON_PADDING_V","BUTTON_GAP","CONTROLS_BOTTOM","SCREEN_PADDING","TABLE_CONTAINER_PADDING","HEADER_PADDING","CONTENT_PADDING","CONTROLS_CONTAINER_BOTTOM","CONTROLS_CONTAINER_PADDING","trackEvent","plausible","trackPageView","screenName","page","VIEW_COMPARISON","VIEW_QUIVER","COMPARE_FOILS","DELETE_QUIVER","FILTER_FOILS","SORT_FOILS","SEARCH_FOILS","toLowerCase","replace","crypto","randomUUID","c","r","random","toString","Logger","isDevelopment","getInstance","instance","log","level","args","toUpperCase","debug","info","warn","FILTERS","COLUMNS","THEME","SORT","set","jsonValue","get","remove","clear","getAllKeys","saveSortOption","loadSortOption","savedSort","createClient","flowType","detectSessionInUrl","autoRefreshToken","persistSession","storageKey","redirectTo","getSiteUrl","origin","cookieOptions","lifetime","domain","sameSite","secure","httpOnly","global","headers"],"sourceRoot":""}