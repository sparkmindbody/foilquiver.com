{"version":3,"file":"static/js/358.0888e618.chunk.js","mappings":"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","sources":["src/components/Footer.tsx","src/components/AppLayout.tsx","src/components/FoilCollectionView.tsx","src/components/FoilsTable.tsx","src/components/SEOHead.tsx","src/components/Toast.tsx","src/hooks/useSearchFoils.ts","src/hooks/useSortedFoils.ts","src/utils/sorting.ts","src/components/ErrorMessage.tsx","src/components/QuiverView.tsx","src/screens/QuiverScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\nexport default function Footer() {\n  const navigation = useNavigation<RootStackNavigationProp>();\n  const { width } = useWindowDimensions();\n  const { colors } = useTheme();\n  const isMobile = width < 768;\n\n  return (\n    <View style={[\n      styles.container, \n      isMobile && styles.containerMobile,\n      { \n        backgroundColor: colors.background.primary,\n        borderTopColor: colors.border\n      }\n    ]}>\n      <View style={[styles.content, isMobile && styles.contentMobile]}>\n        <View style={[styles.linksContainer, isMobile && styles.linksContainerMobile]}>\n          <View style={[styles.linkGroup, isMobile && styles.linkGroupMobile]}>\n            <Pressable onPress={() => navigation.navigate('Terms')}>\n              <Text style={[styles.link, { color: colors.text.secondary }]}>Terms of Service</Text>\n            </Pressable>\n            <Text style={[styles.separator, { color: colors.text.tertiary }]}>•</Text>\n            <Pressable onPress={() => navigation.navigate('Privacy')}>\n              <Text style={[styles.link, { color: colors.text.secondary }]}>Privacy Policy</Text>\n            </Pressable>\n            <Text style={[styles.separator, { color: colors.text.tertiary }]}>•</Text>\n            <Pressable onPress={() => navigation.navigate('Contact')}>\n              <Text style={[styles.link, { color: colors.text.secondary }]}>Contact Us</Text>\n            </Pressable>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    padding: spacing.LARGE,\n  },\n  containerMobile: {\n    padding: 0,\n  },\n  content: {\n    padding: 0,\n    borderTopWidth: 1,\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n  },\n  contentMobile: {\n    flexDirection: 'column',\n    gap: 8,\n  },\n  linksContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  linksContainerMobile: {\n    flexDirection: 'column',\n    gap: spacing.SMALL,\n  },\n  linkGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: spacing.LARGE,\n  },\n  linkGroupMobile: {\n    gap: 8,\n  },\n  link: {\n    fontSize: 14,\n  },\n  separator: {\n    fontSize: 14,\n  },\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Footer from './Footer';\nimport { useTheme } from '../theme/ThemeContext';\n\ninterface AppLayoutProps {\n  children: React.ReactNode;\n  showFooter?: boolean;\n}\n\nexport const AppLayout: React.FC<AppLayoutProps> = ({ \n  children, \n  showFooter = true,\n}) => {\n  const { colors } = useTheme();\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.primary }]}>\n      <View style={styles.content}>\n        {children}\n      </View>\n      {showFooter && <Footer />}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: 1,\n    width: '100%',\n  },\n}); ","import React, { useState, useCallback } from 'react';\nimport { View, StyleSheet, Alert, Platform } from 'react-native';\nimport { FoilsTable } from './FoilsTable';\nimport { Toast } from './Toast';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\nimport { BaseProduct, FilterOptions } from '../types/scraper';\nimport { Column } from '../constants/layout';\nimport { useSearchFoils } from '../hooks/useSearchFoils';\nimport { useRoute } from '@react-navigation/native';\nimport { RootStackParamList } from '../types/navigation';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\nimport { SortField } from '../types/scraper';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\n\ninterface FoilCollectionViewProps {\n  foils: BaseProduct[];\n  allFoils: BaseProduct[];\n  columns: Column[];\n  searchQuery: string;\n  onSearch?: (query: string) => void;\n  onUpdateFoils?: (foils: BaseProduct[]) => void;\n  renderHeader?: () => React.ReactNode;\n  renderControls?: () => React.ReactNode;\n  onColumnVisibilityChange?: (columnId: string) => void;\n  onResetColumns?: () => void;\n  filterOptions?: {\n    brands: string[];\n    series: string[];\n    types: ('front' | 'tail')[];\n  };\n  selectedFilters?: FilterOptions;\n  onFilterChange?: (type: keyof FilterOptions, value: string) => void;\n  onClearFilters?: () => void;\n}\n\nexport const FoilCollectionView: React.FC<FoilCollectionViewProps> = ({\n  foils,\n  allFoils,\n  columns,\n  searchQuery,\n  onSearch,\n  onUpdateFoils,\n  renderHeader,\n  renderControls,\n  onColumnVisibilityChange,\n  onResetColumns,\n  filterOptions,\n  selectedFilters,\n  onFilterChange,\n  onClearFilters,\n}) => {\n  const { colors } = useTheme();\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const route = useRoute<{ key: string; name: keyof RootStackParamList }>();\n  const isComparisonView = route.name === 'Comparison';\n  const isQuiverView = route.name === 'Quiver';\n\n  // For Comparison and Quiver views, derive filter options from current foils\n  const currentViewFilterOptions = React.useMemo(() => {\n    if (isComparisonView || isQuiverView) {\n      return {\n        brands: Array.from(new Set(foils.map(f => f.brand))),\n        series: Array.from(new Set(foils.map(f => f.series).filter((s): s is string => !!s))),\n        types: Array.from(new Set(foils.map(f => f.type).filter((t): t is 'front' | 'tail' => t === 'front' || t === 'tail')))\n      };\n    }\n    return filterOptions;\n  }, [isComparisonView, isQuiverView, foils, filterOptions]);\n\n  // Apply filters to the appropriate set of foils\n  const { filteredFoils } = useFilteredFoils(\n    isComparisonView || isQuiverView ? foils : allFoils,\n    selectedFilters || { brands: [], series: [], type: [] }\n  );\n\n  // Then apply search to filtered foils\n  const { searchedFoils } = useSearchFoils(\n    isComparisonView || isQuiverView ? allFoils : filteredFoils,\n    searchQuery\n  );\n\n  // Combine current foils with search results, marking search results as temporary\n  const displayFoils = React.useMemo(() => {\n    if (isComparisonView || isQuiverView) {\n      if (searchQuery) {\n        // When searching in comparison/quiver view, show filtered current foils plus search results\n        const currentFilteredFoils = filteredFoils;\n        const newSearchResults = searchedFoils.filter(searchFoil => \n          !foils.some(existingFoil => \n            existingFoil.model === searchFoil.model && \n            existingFoil.brand === searchFoil.brand\n          )\n        );\n        return [...currentFilteredFoils, ...newSearchResults];\n      }\n      // Without search, just show filtered foils\n      return filteredFoils;\n    }\n\n    // In browse view, show current foils plus search results\n    if (searchQuery) {\n      const newSearchResults = searchedFoils.filter(searchFoil => \n        !foils.some(existingFoil => \n          existingFoil.model === searchFoil.model && \n          existingFoil.brand === searchFoil.brand\n        )\n      );\n      return [...foils, ...newSearchResults];\n    }\n\n    return foils;\n  }, [foils, filteredFoils, searchedFoils, searchQuery, isComparisonView, isQuiverView]);\n\n  // Add sorting state\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(displayFoils);\n\n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const removeFoil = useCallback((foil: BaseProduct) => {\n    const updatedFoils = foils.filter(f => \n      !(f.model === foil.model && f.brand === foil.brand)\n    );\n    onUpdateFoils?.(updatedFoils);\n    setToastMessage(`Removed ${foil.model} from your comparison`);\n    setShowToast(true);\n    setTimeout(() => setShowToast(false), 2000);\n  }, [foils, onUpdateFoils]);\n\n  const handleFoilSelect = useCallback((foil: BaseProduct) => {\n    const isExisting = foils.some(f => \n      f.model === foil.model && \n      f.brand === foil.brand\n    );\n\n    if (isExisting && isComparisonView) {\n      // Show confirmation dialog for removing foils in comparison view\n      if (Platform.OS === 'web') {\n        const confirmed = window.confirm(`Are you sure you want to remove ${foil.model} from your comparison?`);\n        if (confirmed) {\n          removeFoil(foil);\n        }\n      } else {\n        Alert.alert(\n          'Remove Foil',\n          `Are you sure you want to remove ${foil.model} from your comparison?`,\n          [\n            {\n              text: 'Cancel',\n              style: 'cancel'\n            },\n            {\n              text: 'Remove',\n              style: 'destructive',\n              onPress: () => removeFoil(foil)\n            }\n          ]\n        );\n      }\n    } else {\n      // Add new foil or remove in non-comparison view\n      if (isExisting) {\n        const updatedFoils = foils.filter(f => \n          !(f.model === foil.model && f.brand === foil.brand)\n        );\n        onUpdateFoils?.(updatedFoils);\n        setToastMessage(`Removed ${foil.model} from your collection`);\n      } else {\n        onUpdateFoils?.([...foils, foil]);\n        setToastMessage(`Added ${foil.model} to your collection`);\n      }\n      setShowToast(true);\n      setTimeout(() => setShowToast(false), 2000);\n    }\n  }, [foils, onUpdateFoils, isComparisonView, removeFoil]);\n\n  const isSelected = useCallback((foil: BaseProduct) => {\n    if (isComparisonView) {\n      // In comparison view with search, highlight foils that are NOT in the current selection\n      if (searchQuery) {\n        return !foils.some(f => \n          f.model === foil.model && \n          f.brand === foil.brand\n        );\n      }\n      // Without search, no highlighting\n      return false;\n    }\n    return false;\n  }, [foils, isComparisonView, searchQuery]);\n\n  const isTemporary = useCallback((foil: BaseProduct) => {\n    return !foils.some(f => \n      f.model === foil.model && \n      f.brand === foil.brand\n    );\n  }, [foils]);\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background.primary }]}>\n      {renderHeader?.()}\n      \n      <View style={styles.content}>\n        <FoilsTable\n          foils={sortedFoils}\n          columns={columns}\n          sortOption={{\n            field: sortOption.field,\n            ascending: sortOption.direction === 'asc'\n          }}\n          onSort={handleSort}\n          onFoilSelect={handleFoilSelect}\n          isSelected={isSelected}\n          isTemporary={isTemporary}\n          filters={selectedFilters || { brands: [], series: [], type: [] }}\n          filterOptions={currentViewFilterOptions}\n        />\n      </View>\n\n      {renderControls?.()}\n\n      {showToast && (\n        <Toast message={toastMessage} type=\"success\" />\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...(Platform.OS === 'web' ? {\n      maxWidth: '100%',\n      width: '100%',\n      overflow: 'hidden',\n    } : {\n      padding: 0,\n    }),\n  },\n  content: {\n    flex: 1,\n    ...(Platform.OS === 'web' ? {\n      padding: 0,\n    } : {}),\n  },\n}); ","/**\n * FoilsTable Component\n * \n * IMPORTANT: Column Alignment\n * - The table uses fixed column widths for consistent layout and horizontal scrolling\n * - Each column width in headerCell must match the corresponding cell width\n * - Current widths:\n *   - Regular columns (brand, model, type, series): 150px\n *   - Number columns (area, wingspan, AR, price): 100px\n *   - Link column: 100px\n * - When modifying column styles, always update both headerCell and cell styles to maintain alignment\n * - Table has a minWidth of 1200px to ensure proper layout on all screen sizes\n */\n\nimport React, { useEffect } from 'react';\nimport { View, Text, Pressable, ScrollView, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { BaseProduct, SortField } from '../types/scraper';\nimport { useTheme } from '../theme/ThemeContext';\nimport { CONTAINER_PADDING, MOBILE_BREAKPOINT, COLUMN_WIDTHS, getTableWidth, getContentWidth, Column } from '../constants/layout';\nimport { saveSortOption, loadSortOption } from '../utils/storage';\nimport { trackAction, ANALYTICS_EVENTS } from '../utils/analytics';\nimport { spacing } from '../theme/spacing';\n\ninterface FilterOptions {\n  brands: string[];\n  series: string[];\n  type: string[];\n}\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  onSort: (field: SortField) => void;\n  onFoilSelect: (foil: BaseProduct) => void;\n  isSelected: (foil: BaseProduct) => boolean;\n  isTemporary?: (foil: BaseProduct) => boolean;\n  sortOption: { field: SortField; ascending: boolean };\n  columns: Column[];\n  filters: FilterOptions;\n  filterOptions?: {\n    brands: string[];\n    series: string[];\n    types: string[];\n  };\n  selectedFoils?: BaseProduct[];\n  onCompare?: () => void;\n  onClearSelection?: () => void;\n}\n\nconst DEFAULT_COLUMNS = [\n  { id: 'brand', label: 'Brand', isVisible: true },\n  { id: 'series', label: 'Series', isVisible: false },\n  { id: 'model', label: 'Model', isVisible: true },\n  { id: 'area', label: 'Area', isVisible: true },\n  { id: 'wingspan', label: 'Span', isVisible: true },\n  { id: 'aspectRatio', label: 'AR', isVisible: true },\n  { id: 'type', label: 'Type', isVisible: true },\n  { id: 'price', label: 'Price', isVisible: true },\n  { id: 'link', label: 'Link', isVisible: true },\n];\n\nexport const FoilsTable: React.FC<FoilsTableProps> = ({\n  foils,\n  onSort,\n  onFoilSelect,\n  isSelected,\n  isTemporary,\n  sortOption,\n  columns,\n  filters,\n  filterOptions,\n  selectedFoils,\n  onCompare,\n  onClearSelection,\n}) => {\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n  const { colors } = useTheme();\n\n  // Load saved sort option on mount\n  useEffect(() => {\n    const loadSavedSort = async () => {\n      try {\n        const savedSort = await loadSortOption();\n        if (savedSort && (savedSort.field !== sortOption.field || savedSort.ascending !== sortOption.ascending)) {\n          onSort(savedSort.field);\n        }\n      } catch (error) {\n        console.error('Error loading sort option:', error);\n      }\n    };\n\n    loadSavedSort();\n  }, []);\n\n  // Save sort option when it changes\n  useEffect(() => {\n    const saveSortSettings = async () => {\n      try {\n        await saveSortOption({\n          field: sortOption.field,\n          ascending: sortOption.ascending\n        });\n      } catch (error) {\n        console.error('Error saving sort option:', error);\n      }\n    };\n\n    saveSortSettings();\n  }, [sortOption]);\n\n  const getColumnWidth = (columnId: string) => {\n    return COLUMN_WIDTHS[columnId as keyof typeof COLUMN_WIDTHS] || 150;\n  };\n\n  const isColumnFiltered = (columnId: string) => {\n    switch (columnId) {\n      case 'brand':\n        return filters.brands.length > 0;\n      case 'series':\n        return filters.series.length > 0;\n      case 'type':\n        return filters.type.length > 0;\n      default:\n        return false;\n    }\n  };\n\n  const renderSortIcon = (columnId: string) => {\n    if (sortOption.field !== columnId) {\n      return (\n        <View style={styles.sortIconContainer}>\n          <Text style={[styles.sortIcon, { color: colors.text.tertiary }]}>▲</Text>\n          <Text style={[styles.sortIcon, { color: colors.text.tertiary }]}>▼</Text>\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.sortIconContainer}>\n        <Text style={[\n          styles.sortIcon,\n          sortOption.ascending && [styles.sortIconUpActive, { color: colors.primary }]\n        ]}>▲</Text>\n        <Text style={[\n          styles.sortIcon,\n          !sortOption.ascending && [styles.sortIconDownActive, { color: colors.primary }]\n        ]}>▼</Text>\n      </View>\n    );\n  };\n\n  const getCellContent = (foil: BaseProduct, columnId: string) => {\n    let content: React.ReactNode = '-';\n    \n    switch (columnId) {\n      case 'brand':\n        content = foil.brand;\n        break;\n      case 'model':\n        content = foil.model;\n        break;\n      case 'series':\n        content = foil.series || '-';\n        break;\n      case 'area':\n        content = foil.specs?.area?.toFixed(2) || '-';\n        break;\n      case 'wingspan':\n        content = foil.specs?.wingspan?.toFixed(2) || '-';\n        break;\n      case 'aspectRatio':\n        content = foil.specs?.aspectRatio?.toFixed(2) || '-';\n        break;\n      case 'type':\n        content = foil.type || '-';\n        break;\n      case 'price':\n        content = foil.price ? `$${foil.price}` : '-';\n        break;\n      case 'link':\n        return (\n          <Pressable\n            style={[styles.linkButton, { backgroundColor: colors.primary }]}\n            onPress={() => window.open(foil.sourceUrl, '_blank')}\n          >\n            <Text style={[styles.linkText, { color: colors.text.inverse }]}>View</Text>\n            <Text style={[styles.externalLinkIcon, { color: colors.text.inverse }]}>↗</Text>\n          </Pressable>\n        );\n    }\n\n    return (\n      <Text \n        style={[\n          styles.cellText,\n          { color: colors.text.primary },\n          ['area', 'wingspan', 'aspectRatio', 'price'].includes(columnId) && styles.numberText\n        ]}\n      >\n        {content}\n      </Text>\n    );\n  };\n\n  const handleSort = (field: SortField) => {\n    trackAction(ANALYTICS_EVENTS.SORT_FOILS, {\n      field,\n      direction: sortOption.field === field && sortOption.ascending ? 'desc' : 'asc'\n    });\n    onSort(field);\n  };\n\n  const tableWidth = getTableWidth(columns);\n\n  return (\n    <View style={styles.container}>\n      <ScrollView \n        horizontal\n        showsHorizontalScrollIndicator={true}\n        style={styles.horizontalScrollView}\n        contentContainerStyle={{\n          width: tableWidth,\n          flexGrow: 0,\n          margin: 0,\n          padding: 0,\n        }}\n      >\n        <View style={[\n          styles.tableContent,\n          { width: tableWidth }\n        ]}>\n          <View style={[\n            styles.tableHeader,\n            { backgroundColor: colors.background.tertiary }\n          ]}>\n            <View style={[\n              styles.headerRow,\n              { \n                borderBottomColor: colors.border,\n                backgroundColor: colors.background.secondary,\n              }\n            ]}>\n              {columns.map(column => column.isVisible && (\n                <Pressable\n                  key={column.id}\n                  style={[\n                    styles.headerCell,\n                    { \n                      width: getColumnWidth(column.id),\n                      borderRightColor: colors.text.tertiary + '40',\n                      borderBottomColor: isColumnFiltered(column.id) ? colors.primary : colors.border,\n                      backgroundColor: colors.background.tertiary,\n                      borderRightWidth: 1,\n                    },\n                    isColumnFiltered(column.id) && styles.headerCellFiltered\n                  ]}\n                  onPress={() => handleSort(column.id as SortField)}\n                >\n                  <Text style={[\n                    styles.headerText,\n                    { \n                      color: isColumnFiltered(column.id) ? colors.primary : colors.text.primary,\n                      fontWeight: '600',\n                    }\n                  ]}>\n                    {column.label}\n                  </Text>\n                  {renderSortIcon(column.id)}\n                </Pressable>\n              ))}\n            </View>\n          </View>\n          <ScrollView \n            style={[styles.scrollView, { backgroundColor: colors.background.primary }]}\n            showsVerticalScrollIndicator={true}\n            bounces={false}\n          >\n            {foils.map((foil, index) => {\n              const selected = isSelected(foil);\n              const temporary = isTemporary?.(foil);\n              const rowKey = `${foil.model}-${foil.specs?.area || 'unknown'}-${index}`;\n              \n              return (\n                <Pressable\n                  key={rowKey}\n                  onPress={() => onFoilSelect(foil)}\n                  style={({ pressed }) => [\n                    styles.row,\n                    { borderBottomColor: colors.border },\n                    index % 2 === 0 && [styles.rowEven, { backgroundColor: colors.background.secondary + '50' }],\n                    selected && [styles.rowSelected, { \n                      backgroundColor: `${colors.primary}15`,\n                    }],\n                    temporary && [styles.rowTemporary, {\n                      backgroundColor: `${colors.success}10`,\n                    }],\n                    Platform.OS === 'web' && pressed && !selected && [styles.rowHovered, { \n                      backgroundColor: `${colors.primary}10`,\n                    }]\n                  ]}\n                >\n                  {columns.map(column => column.isVisible && (\n                    <View\n                      key={`${rowKey}-${column.id}`}\n                      style={[\n                        styles.cell,\n                        { \n                          width: getColumnWidth(column.id),\n                          borderRightColor: colors.border,\n                          borderRightWidth: 1,\n                        }\n                      ]}\n                    >\n                      {getCellContent(foil, column.id)}\n                    </View>\n                  ))}\n                </Pressable>\n              );\n            })}\n          </ScrollView>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    overflow: 'hidden',\n  },\n  horizontalScrollView: {\n    flex: 1,\n    width: '100%',\n  },\n  tableContent: {\n    flex: 1,\n    width: '100%',\n  },\n  tableHeader: {\n    borderBottomWidth: 1,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.05,\n    shadowRadius: 1,\n    elevation: 2,\n  },\n  headerRow: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    width: '100%',\n    minWidth: 'fit-content',\n    flexShrink: 0,\n  },\n  headerCell: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: spacing.MEDIUM,\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      transition: 'all 0.2s ease',\n    }),\n  },\n  headerCellFiltered: {\n    borderBottomWidth: 2,\n  },\n  headerText: {\n    fontSize: 14,\n    flex: 1,\n    letterSpacing: 0.3,\n  },\n  row: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    width: '100%',\n    minWidth: 'fit-content',\n    flexShrink: 0,\n    ...(Platform.OS === 'web' && {\n      margin: 0,\n      padding: 0,\n    }),\n  },\n  rowEven: {},\n  rowSelected: {\n    borderStyle: 'solid',\n  },\n  rowHovered: {\n    borderStyle: 'solid',\n  },\n  cell: {\n    padding: spacing.MEDIUM,\n    borderRightWidth: 1,\n  },\n  cellText: {\n    fontSize: 14,\n  },\n  numberText: {\n    textAlign: 'right',\n  },\n  scrollView: {\n    flex: 1,\n  },\n  sortIconContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: 28,\n    justifyContent: 'center',\n    width: 16,\n    gap: spacing.XSMALL,\n    marginLeft: spacing.SMALL,\n  },\n  sortIcon: {\n    fontSize: 12,\n    width: 12,\n    height: 10,\n    lineHeight: 10,\n    textAlign: 'center',\n  },\n  sortIconUpActive: {\n    fontSize: 13,\n  },\n  sortIconDownActive: {\n    fontSize: 13,\n  },\n  linkButton: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    minWidth: 44,\n    alignItems: 'center',\n    position: 'relative',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  linkText: {\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  externalLinkIcon: {\n    position: 'absolute',\n    top: 0,\n    right: 2,\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  rowTemporary: {\n    borderStyle: 'dashed',\n  },\n});\n","import { Helmet } from 'react-helmet-async';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  canonicalUrl?: string;\n  imageUrl?: string;\n}\n\nexport const SEOHead: React.FC<SEOHeadProps> = ({\n  title,\n  description,\n  canonicalUrl,\n  imageUrl\n}) => {\n  const siteTitle = 'FoilQuiver';\n  const fullTitle = `${title} | ${siteTitle}`;\n  \n  return (\n    <Helmet>\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      {imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n      \n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      {imageUrl && <meta name=\"twitter:image\" content={imageUrl} />}\n    </Helmet>\n  );\n}; ","import React, { useEffect, useRef } from 'react';\nimport { View, Text, StyleSheet, Animated, Platform } from 'react-native';\nimport { useTheme } from '../theme/ThemeContext';\nimport { spacing } from '../theme/spacing';\n\ninterface ToastProps {\n  message: string;\n  type?: 'success' | 'error' | 'info';\n  duration?: number;\n}\n\nexport const Toast: React.FC<ToastProps> = ({\n  message,\n  type = 'success',\n  duration = 2000,\n}) => {\n  const { colors } = useTheme();\n  const opacity = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    // Fade in\n    Animated.sequence([\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 200,\n        useNativeDriver: true,\n      }),\n      // Hold\n      Animated.delay(duration - 400),\n      // Fade out\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver: true,\n      }),\n    ]).start();\n  }, [duration, opacity]);\n\n  const getBackgroundColor = () => {\n    switch (type) {\n      case 'success':\n        return colors.success;\n      case 'error':\n        return colors.error;\n      case 'info':\n        return colors.primary;\n      default:\n        return colors.primary;\n    }\n  };\n\n  return (\n    <Animated.View\n      style={[\n        styles.container,\n        {\n          backgroundColor: getBackgroundColor(),\n          opacity,\n        },\n      ]}\n    >\n      <Text style={[styles.message, { color: colors.text.inverse }]}>\n        {message}\n      </Text>\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    bottom: spacing.LARGE,\n    left: '50%',\n    transform: [{ translateX: -150 }],\n    minWidth: 300,\n    maxWidth: 400,\n    padding: spacing.MEDIUM,\n    borderRadius: 8,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n    elevation: 4,\n    zIndex: 1000,\n    ...(Platform.OS === 'web' && {\n      cursor: 'default',\n      userSelect: 'none',\n    }),\n  },\n  message: {\n    fontSize: 14,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n}); ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useSearchFoils(foils: BaseProduct[], searchQuery: string) {\n  const searchedFoils = useMemo(() => {\n    if (!searchQuery.trim()) {\n      return foils;\n    }\n\n    const query = searchQuery.toLowerCase().trim();\n    return foils.filter(foil => {\n      const searchableText = [\n        foil.brand,\n        foil.model,\n        foil.series || '',\n        foil.type || '',\n        foil.specs?.area?.toString() || '',\n        foil.specs?.wingspan?.toString() || '',\n        foil.specs?.aspectRatio?.toString() || '',\n      ].join(' ').toLowerCase();\n\n      return searchableText.includes(query);\n    });\n  }, [foils, searchQuery]);\n\n  return { searchedFoils };\n} ","import { useState, useMemo } from 'react';\nimport { BaseProduct, SortField } from '../types/scraper';\nimport { sortProducts } from '../utils/sorting';\n\nexport interface SortOption {\n  field: SortField;\n  direction: 'asc' | 'desc';\n}\n\nexport function useSortedFoils(foils: BaseProduct[]) {\n  const [sortOption, setSortOption] = useState<SortOption>({\n    field: 'area',\n    direction: 'desc'\n  });\n\n  const sortedFoils = useMemo(() => {\n    return sortProducts(foils, sortOption.field, sortOption.direction);\n  }, [foils, sortOption]);\n\n  return {\n    sortOption,\n    setSortOption,\n    sortedFoils\n  };\n} ","import { BaseProduct } from '../types/scraper';\nimport { SortField, SortDirection } from '../hooks/useSortedFoils';\n\nexport function sortProducts(\n  products: BaseProduct[],\n  field: SortField,\n  direction: SortDirection\n): BaseProduct[] {\n  return [...products].sort((a, b) => {\n    let valueA: string | number;\n    let valueB: string | number;\n\n    if (field === 'brand' || field === 'series' || field === 'model' || field === 'type') {\n      valueA = a[field].toLowerCase();\n      valueB = b[field].toLowerCase();\n    } else if (field === 'price') {\n      valueA = a.price || 0;\n      valueB = b.price || 0;\n    } else if (field in a.specs) {\n      valueA = a.specs[field as keyof typeof a.specs] || 0;\n      valueB = b.specs[field as keyof typeof b.specs] || 0;\n    } else {\n      valueA = '';\n      valueB = '';\n    }\n    \n    const multiplier = direction === 'asc' ? 1 : -1;\n    \n    if (typeof valueA === 'string' && typeof valueB === 'string') {\n      return valueA.localeCompare(valueB) * multiplier;\n    }\n    if (typeof valueA === 'number' && typeof valueB === 'number') {\n      return (valueA - valueB) * multiplier;\n    }\n    return 0;\n  });\n} ","import React from 'react';\nimport { View, Text, Pressable, StyleSheet } from 'react-native';\n\ninterface ErrorMessageProps {\n  message: string;\n  onRetry?: () => void;\n}\n\nexport function ErrorMessage({ message, onRetry }: ErrorMessageProps) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.message}>{message}</Text>\n      {onRetry && (\n        <Pressable\n          style={({ pressed }) => [\n            styles.retryButton,\n            pressed && styles.retryButtonPressed\n          ]}\n          onPress={onRetry}\n        >\n          <Text style={styles.retryButtonText}>Retry</Text>\n        </Pressable>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: '#ffebee',\n    borderRadius: 8,\n    margin: 16,\n  },\n  message: {\n    color: '#c62828',\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 12,\n  },\n  retryButton: {\n    backgroundColor: '#c62828',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 6,\n  },\n  retryButtonPressed: {\n    backgroundColor: '#b71c1c',\n  },\n  retryButtonText: {\n    color: '#fff',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n}); ","import React, { useState, useCallback, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, Platform, StyleSheet, Alert } from 'react-native';\nimport { FoilCollectionView } from './FoilCollectionView';\nimport { LoadingIndicator } from './LoadingIndicator';\nimport { BaseProduct } from '../types/scraper';\nimport { Column } from '../constants/layout';\nimport { useTheme } from '../theme/ThemeContext';\nimport { trackAction, ANALYTICS_EVENTS } from '../utils/analytics';\nimport { QuiverViewProps } from '../types/quiver';\nimport { spacing } from '../theme/spacing';\nimport { FilterOptions } from '../types/scraper';\nimport { useApp } from '../context/AppContext';\nimport { generateFoilId } from '../utils/foilUtils';\nimport { useNavigation } from '@react-navigation/native';\n\nexport const QuiverView: React.FC<QuiverViewProps> = ({\n  foils: initialFoils,\n  allFoils,\n  columns,\n  quiverName = 'Untitled Quiver',\n  quiverId,\n  searchQuery = '',\n  onSearch,\n  onUpdateQuiver,\n  onClose,\n  isLoading,\n  error,\n}) => {\n  const { colors } = useTheme();\n  const { filters, setFilters, selectedFoils, setSelectedFoils } = useApp();\n  const [localFoils, setLocalFoils] = useState<BaseProduct[]>(initialFoils);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const navigation = useNavigation();\n\n  // Reset filters when component mounts\n  useEffect(() => {\n    setFilters({ brands: [], series: [], type: [] });\n    return () => {\n      // Reset filters when component unmounts\n      setFilters({ brands: [], series: [], type: [] });\n    };\n  }, [setFilters]);\n\n  // Sync local foils with selected foils only when they change and we have unsaved changes\n  useEffect(() => {\n    if (selectedFoils.length > 0 && hasUnsavedChanges) {\n      setLocalFoils(selectedFoils);\n      setHasUnsavedChanges(false);\n    }\n  }, [selectedFoils, hasUnsavedChanges]);\n\n  // Clear selected foils when component unmounts\n  useEffect(() => {\n    return () => {\n      setSelectedFoils([]);\n    };\n  }, [setSelectedFoils]);\n\n  const handleUpdateFoils = (updatedFoils: BaseProduct[]) => {\n    setLocalFoils(updatedFoils);\n    setHasUnsavedChanges(true);\n  };\n\n  const handleSaveChanges = async () => {\n    try {\n      // Convert foils to foil_ids before saving\n      const foil_ids = localFoils.map(foil => generateFoilId(foil));\n      \n      await onUpdateQuiver?.(localFoils);\n      setHasUnsavedChanges(false);\n      trackAction(ANALYTICS_EVENTS.UPDATE_QUIVER, {\n        quiverId,\n        quiverName,\n        foilCount: localFoils.length\n      });\n    } catch (error) {\n      console.error('Error saving quiver changes:', error);\n      if (Platform.OS === 'web') {\n        window.alert('Failed to save changes. Please try again.');\n      } else {\n        Alert.alert('Error', 'Failed to save changes. Please try again.');\n      }\n    }\n  };\n\n  const handleRevertChanges = () => {\n    if (Platform.OS === 'web') {\n      const confirmed = window.confirm('Are you sure you want to revert all changes?');\n      if (confirmed) {\n        setLocalFoils(initialFoils);\n        setHasUnsavedChanges(false);\n      }\n    } else {\n      Alert.alert(\n        'Revert Changes',\n        'Are you sure you want to revert all changes?',\n        [\n          { text: 'Cancel', style: 'cancel' },\n          { \n            text: 'Revert', \n            style: 'destructive', \n            onPress: () => {\n              setLocalFoils(initialFoils);\n              setHasUnsavedChanges(false);\n            }\n          }\n        ]\n      );\n    }\n  };\n\n  const handleClose = () => {\n    if (hasUnsavedChanges) {\n      if (Platform.OS === 'web') {\n        const confirmed = window.confirm('You have unsaved changes. Are you sure you want to close?');\n        if (confirmed) {\n          navigation.navigate('Browse', {});\n        }\n      } else {\n        Alert.alert(\n          'Unsaved Changes',\n          'You have unsaved changes. Are you sure you want to close?',\n          [\n            { text: 'Cancel', style: 'cancel' },\n            { \n              text: 'Close', \n              style: 'destructive', \n              onPress: () => navigation.navigate('Browse', {})\n            }\n          ]\n        );\n      }\n    } else {\n      navigation.navigate('Browse', {});\n    }\n  };\n\n  // Handle filter changes\n  const handleFilterChange = (type: keyof FilterOptions, value: string) => {\n    setFilters(prev => ({\n      ...prev,\n      [type]: prev[type].includes(value)\n        ? prev[type].filter(item => item !== value)\n        : [...prev[type], value]\n    }));\n  };\n\n  const handleClearFilters = () => {\n    setFilters({ brands: [], series: [], type: [] });\n  };\n\n  if (isLoading) {\n    return (\n      <View style={styles.centerContainer}>\n        <LoadingIndicator />\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={styles.centerContainer}>\n        <Text style={[styles.errorText, { color: colors.error }]}>\n          {error}\n        </Text>\n        <TouchableOpacity\n          style={[styles.retryButton, { backgroundColor: colors.primary }]}\n          onPress={handleClose}\n        >\n          <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n            Go Back\n          </Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  const renderHeader = () => (\n    <View style={styles.header}>\n      <Text style={[styles.headerText, { color: colors.text.primary }]}>\n        Viewing Saved Quiver: {quiverName}\n      </Text>\n      {hasUnsavedChanges && (\n        <Text style={[styles.unsavedText, { color: colors.warning }]}>\n          You have unsaved changes\n        </Text>\n      )}\n    </View>\n  );\n\n  const renderControls = () => (\n    <View style={styles.controlsContainer}>\n      <View style={styles.controlsInnerContainer}>\n        <View style={styles.controlsColumn}>\n          {hasUnsavedChanges && (\n            <>\n              <TouchableOpacity\n                style={[styles.saveButton, { backgroundColor: colors.success }]}\n                onPress={handleSaveChanges}\n              >\n                <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n                  Save Changes\n                </Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.revertButton, { backgroundColor: colors.warning }]}\n                onPress={handleRevertChanges}\n              >\n                <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n                  Revert Changes\n                </Text>\n              </TouchableOpacity>\n            </>\n          )}\n          <TouchableOpacity\n            style={[styles.closeButton, { backgroundColor: colors.primary }]}\n            onPress={handleClose}\n          >\n            <Text style={[styles.buttonText, { color: colors.text.inverse }]}>\n              Close Quiver\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <FoilCollectionView\n        foils={localFoils}\n        allFoils={allFoils}\n        columns={columns}\n        searchQuery={searchQuery}\n        onSearch={onSearch}\n        onUpdateFoils={handleUpdateFoils}\n        renderHeader={renderHeader}\n        renderControls={renderControls}\n        filterOptions={{\n          brands: Array.from(new Set(localFoils.map(f => f.brand))),\n          series: Array.from(new Set(localFoils.map(f => f.series).filter((s): s is string => !!s))),\n          types: Array.from(new Set(localFoils.map(f => f.type).filter((t): t is 'front' | 'tail' => t === 'front' || t === 'tail')))\n        }}\n        selectedFilters={filters}\n        onFilterChange={handleFilterChange}\n        onClearFilters={handleClearFilters}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative',\n  },\n  centerContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: spacing.CONTENT_PADDING,\n  },\n  header: {\n    padding: spacing.HEADER_PADDING,\n    borderBottomWidth: 1,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: '600',\n  },\n  unsavedText: {\n    fontSize: 14,\n    marginTop: spacing.SMALL,\n  },\n  errorText: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: spacing.LARGE,\n  },\n  controlsContainer: {\n    position: 'absolute',\n    bottom: spacing.CONTROLS_CONTAINER_BOTTOM,\n    right: 0,\n    left: 0,\n    paddingHorizontal: spacing.CONTROLS_CONTAINER_PADDING,\n    zIndex: 1000,\n    ...(Platform.OS === 'web' && {\n      pointerEvents: 'none',\n    }),\n  },\n  controlsInnerContainer: {\n    alignItems: 'flex-end',\n  },\n  controlsColumn: {\n    alignItems: 'flex-end',\n    gap: spacing.BUTTON_GAP,\n    ...(Platform.OS === 'web' && {\n      pointerEvents: 'auto',\n    }),\n  },\n  closeButton: {\n    paddingHorizontal: spacing.BUTTON_PADDING_H,\n    paddingVertical: spacing.BUTTON_PADDING_V,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n    }),\n  },\n  saveButton: {\n    paddingHorizontal: spacing.BUTTON_PADDING_H,\n    paddingVertical: spacing.BUTTON_PADDING_V,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n    }),\n  },\n  revertButton: {\n    paddingHorizontal: spacing.BUTTON_PADDING_H,\n    paddingVertical: spacing.BUTTON_PADDING_V,\n    borderRadius: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      pointerEvents: 'auto',\n      userSelect: 'none',\n      boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n    }),\n  },\n  retryButton: {\n    paddingHorizontal: spacing.BUTTON_PADDING_H,\n    paddingVertical: spacing.BUTTON_PADDING_V,\n    borderRadius: 8,\n    marginTop: spacing.MEDIUM,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  buttonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    ...(Platform.OS === 'web' && {\n      userSelect: 'none',\n    }),\n  },\n}); ","import React, { useEffect, useState, useTransition } from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { AppLayout } from '../components/AppLayout';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { ErrorMessage } from '../components/ErrorMessage';\nimport { useApp } from '../context/AppContext';\nimport { useFoils } from '../hooks/useFoils';\nimport { useQuivers } from '../hooks/useQuivers';\nimport { QuiverView } from '../components/QuiverView';\nimport { SEOHead } from '../components/SEOHead';\nimport { getEnvironmentConfig } from '../config/environment';\nimport { trackPageView, trackAction, ANALYTICS_EVENTS } from '../utils/analytics';\nimport { useRoute, useNavigation } from '@react-navigation/native';\nimport { RootStackParamList, QuiverScreenNavigationProp } from '../types/navigation';\nimport { spacing } from '../theme/spacing';\nimport { useTheme } from '../theme/ThemeContext';\nimport { Toast } from '../components/Toast';\nimport { Quiver } from '../types/quiver';\nimport { generateFoilId } from '../utils/foilUtils';\nimport { routes } from '../utils/routes';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\nimport { RouteProp } from '@react-navigation/native';\n\ninterface QuiverScreenProps {\n  route: RouteProp<RootStackParamList, 'Quiver'>;\n  navigation: QuiverScreenNavigationProp;\n  searchProps?: {\n    value: string;\n    onChangeText: (text: string) => void;\n    onClear: () => void;\n    mode?: 'browse' | 'comparison' | 'quiver';\n    placeholder?: string;\n  };\n  tableSettingsProps?: {\n    filterOptions: any;\n    selectedBrands: string[];\n    selectedSeries: string[];\n    selectedTypes: string[];\n    onFilterChange: (type: string, value: string) => void;\n    onClearFilters: () => void;\n    columns: any[];\n    onColumnVisibilityChange: (columnId: string) => void;\n    onResetColumns: () => void;\n    foils: BaseProduct[];\n  };\n}\n\nconst QuiverScreen: React.FC<QuiverScreenProps> = ({\n  route,\n  navigation,\n  searchProps,\n  tableSettingsProps\n}) => {\n  const [isPending, startTransition] = useTransition();\n  const { \n    setCurrentScreen, \n    columns, \n    setColumns,\n    filters, \n    setFilters, \n    searchQuery, \n    setSearchQuery,\n    setSelectedFoils \n  } = useApp();\n  const { \n    foils = [], \n    loading: foilsLoading, \n    error: foilsError \n  } = useFoils();\n  const { \n    quivers = [], \n    isLoading: quiversLoading, \n    error: quiversError, \n    deleteQuiver, \n    updateQuiver,\n    reloadQuivers \n  } = useQuivers();\n  const { colors } = useTheme();\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastType, setToastType] = useState<'success' | 'error'>('success');\n  const config = getEnvironmentConfig();\n\n  // Get the current quiver's foils based on foil_ids\n  const currentQuiverFoils = React.useMemo(() => {\n    if (!route.params?.foil_ids || !Array.isArray(foils)) return [];\n    // Clear selected foils when quiver changes\n    setSelectedFoils([]);\n    return foils.filter(f => {\n      if (!f) return false;\n      const foilId = generateFoilId(f);\n      return route.params.foil_ids?.includes(foilId) ?? false;\n    });\n  }, [route.params?.foil_ids, foils, setSelectedFoils]);\n\n  // Find the current quiver object\n  const currentQuiver = React.useMemo(() => {\n    return quivers.find(q => q.id === route.params?.quiverId);\n  }, [quivers, route.params?.quiverId]);\n\n  // Filter options for the table settings\n  const filterOptions = React.useMemo(() => ({\n    brands: Array.from(new Set(foils?.map(f => f.brand) || [])),\n    series: Array.from(new Set(foils?.map(f => f.series).filter(Boolean) || [])),\n    types: Array.from(new Set(foils?.map(f => f.type).filter(Boolean) || []))\n  }), [foils]);\n\n  useEffect(() => {\n    setCurrentScreen('Quiver');\n    \n    // Reload quivers when the screen mounts or quiverId changes\n    if (route.params?.quiverId) {\n      // Clear any existing selected foils\n      setSelectedFoils([]);\n      reloadQuivers();\n      \n      trackPageView(ANALYTICS_EVENTS.VIEW_QUIVER, {\n        quiverId: route.params.quiverId,\n        quiverName: route.params.quiverName || 'Untitled Quiver',\n        foilCount: currentQuiverFoils.length\n      });\n    }\n  }, [route.params?.quiverId]); // Only depend on quiverId changes\n\n  const handleUpdateQuiver = async (updatedFoils: BaseProduct[]) => {\n    const { quiverId } = route.params;\n\n    try {\n      // Update the app context with the new foils\n      setSelectedFoils(updatedFoils);\n      \n      // Convert the foils array to foil_ids\n      const foil_ids = updatedFoils.map(foil => generateFoilId(foil));\n      \n      // Update the quiver with the new foil_ids\n      const success = await updateQuiver(quiverId, { foil_ids });\n      \n      if (success) {\n        // Update route params to reflect the new foil_ids\n        navigation.setParams({\n          quiverId,\n          quiverName: route.params.quiverName || 'Untitled Quiver',\n          foil_ids,\n          searchQuery: route.params.searchQuery\n        });\n        \n        // Reload quivers to ensure we have the latest data\n        await reloadQuivers();\n        \n        trackAction(ANALYTICS_EVENTS.UPDATE_QUIVER, {\n          quiverId,\n          quiverName: route.params.quiverName,\n          foilCount: updatedFoils.length\n        });\n        setToastMessage('Quiver updated successfully');\n        setToastType('success');\n      } else {\n        setToastMessage('Failed to update quiver');\n        setToastType('error');\n      }\n    } catch (error) {\n      console.error('Error updating quiver:', error);\n      setToastMessage('An error occurred while updating the quiver');\n      setToastType('error');\n    }\n    setShowToast(true);\n    setTimeout(() => setShowToast(false), 3000);\n  };\n\n  const handleUpdateQuiverSettings = async (updates: Partial<Quiver>): Promise<boolean> => {\n    if (!route.params?.quiverId) return false;\n\n    try {\n      const success = await updateQuiver(route.params.quiverId, updates);\n      if (success) {\n        setToastMessage('Quiver settings updated successfully');\n        setToastType('success');\n        setShowToast(true);\n        setTimeout(() => setShowToast(false), 3000);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Error updating quiver settings:', error);\n      setToastMessage('Failed to update quiver settings');\n      setToastType('error');\n      setShowToast(true);\n      setTimeout(() => setShowToast(false), 3000);\n      return false;\n    }\n  };\n\n  const handleDeleteQuiver = async () => {\n    if (!route.params?.quiverId) return;\n\n    try {\n      const success = await deleteQuiver(route.params.quiverId);\n      if (success) {\n        trackAction(ANALYTICS_EVENTS.DELETE_QUIVER, {\n          quiverId: route.params.quiverId\n        });\n        navigation.navigate('Browse', {});\n      }\n    } catch (error) {\n      console.error('Error deleting quiver:', error);\n      setToastMessage('Failed to delete quiver');\n      setToastType('error');\n      setShowToast(true);\n      setTimeout(() => setShowToast(false), 3000);\n    }\n  };\n\n  const handleClose = () => {\n    startTransition(() => {\n      navigation.goBack();\n    });\n  };\n\n  const handleSearch = (query: string) => {\n    setSearchQuery(query);\n    trackAction(ANALYTICS_EVENTS.SEARCH_FOILS, {\n      screen: 'quiver',\n      query\n    });\n  };\n\n  const handleFilterChange = (type: string, value: string) => {\n    setFilters(prev => ({\n      ...prev,\n      [type]: prev[type as keyof FilterOptions].includes(value)\n        ? prev[type as keyof FilterOptions].filter(item => item !== value)\n        : [...prev[type as keyof FilterOptions], value]\n    }));\n  };\n\n  const handleClearFilters = () => {\n    setFilters({ brands: [], series: [], type: [] });\n  };\n\n  const handleColumnVisibilityChange = (columnId: string) => {\n    setColumns(prev => \n      prev.map(col => \n        col.id === columnId ? { ...col, isVisible: !col.isVisible } : col\n      )\n    );\n  };\n\n  const handleResetColumns = () => {\n    // Reset to default column visibility\n    setColumns(prev => prev.map(col => ({ ...col, isVisible: true })));\n  };\n\n  // Show loading state while data is being fetched or during transitions\n  if (foilsLoading || quiversLoading || isPending) {\n    return (\n      <AppLayout showFooter={true}>\n        <LoadingIndicator />\n      </AppLayout>\n    );\n  }\n\n  // Show error state if there's an error\n  const error = foilsError || quiversError;\n  if (error) {\n    return (\n      <AppLayout showFooter={true}>\n        <ErrorMessage message={error} />\n      </AppLayout>\n    );\n  }\n\n  // Validate data\n  if (!Array.isArray(foils) || !Array.isArray(currentQuiverFoils)) {\n    return (\n      <AppLayout showFooter={true}>\n        <ErrorMessage message=\"Invalid data structure received\" />\n      </AppLayout>\n    );\n  }\n\n  if (!currentQuiver) {\n    return (\n      <AppLayout showFooter={true}>\n        <ErrorMessage message=\"Quiver not found\" />\n      </AppLayout>\n    );\n  }\n\n  return (\n    <AppLayout showFooter={true}>\n      <SEOHead\n        title={`${route.params?.quiverName || 'Quiver'} - FoilQuiver`}\n        description={`View and manage your ${route.params?.quiverName || 'Untitled'} quiver containing ${currentQuiverFoils.length} foils.`}\n        canonicalUrl={`${config.webUrl}${routes.quiver}/${route.params?.quiverId}`}\n      />\n      <View style={styles.container}>\n        <QuiverView\n          foils={currentQuiverFoils}\n          allFoils={foils}\n          columns={columns}\n          quiverName={route.params?.quiverName || 'Untitled Quiver'}\n          quiverId={route.params?.quiverId || ''}\n          searchQuery={searchQuery}\n          onSearch={handleSearch}\n          onUpdateQuiver={handleUpdateQuiver}\n          onClose={handleClose}\n          isLoading={isPending}\n          error={error}\n        />\n\n        {showToast && (\n          <Toast\n            message={toastMessage}\n            type={toastType}\n            duration={3000}\n          />\n        )}\n      </View>\n    </AppLayout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  }\n});\n\nexport default QuiverScreen;"],"names":["Footer","navigation","useNavigation","width","useWindowDimensions","colors","useTheme","isMobile","_jsx","View","style","styles","container","containerMobile","backgroundColor","background","primary","borderTopColor","border","children","content","contentMobile","linksContainer","linksContainerMobile","_jsxs","linkGroup","linkGroupMobile","Pressable","onPress","navigate","Text","link","color","text","secondary","separator","tertiary","StyleSheet","create","padding","spacing","LARGE","borderTopWidth","maxWidth","marginHorizontal","flexDirection","gap","justifyContent","alignItems","SMALL","fontSize","AppLayout","showFooter","flex","display","FoilCollectionView","foils","allFoils","columns","searchQuery","onSearch","onUpdateFoils","renderHeader","renderControls","onColumnVisibilityChange","onResetColumns","filterOptions","selectedFilters","onFilterChange","onClearFilters","showToast","setShowToast","useState","toastMessage","setToastMessage","route","useRoute","isComparisonView","name","isQuiverView","currentViewFilterOptions","React","brands","Array","from","Set","map","f","brand","series","filter","s","types","type","t","filteredFoils","useFilteredFoils","searchedFoils","useSearchFoils","displayFoils","searchFoil","some","existingFoil","model","newSearchResults","sortOption","setSortOption","sortedFoils","useSortedFoils","removeFoil","useCallback","foil","updatedFoils","setTimeout","handleFoilSelect","isExisting","window","confirm","isSelected","isTemporary","FoilsTable","field","ascending","direction","onSort","prev","onFoilSelect","filters","Toast","message","Object","assign","overflow","selectedFoils","onCompare","onClearSelection","MOBILE_BREAKPOINT","useEffect","async","savedSort","loadSortOption","error","loadSavedSort","saveSortOption","saveSortSettings","getColumnWidth","columnId","COLUMN_WIDTHS","isColumnFiltered","length","getCellContent","specs","area","toFixed","wingspan","aspectRatio","price","linkButton","open","sourceUrl","linkText","inverse","externalLinkIcon","cellText","includes","numberText","tableWidth","getTableWidth","ScrollView","horizontal","showsHorizontalScrollIndicator","horizontalScrollView","contentContainerStyle","flexGrow","margin","tableContent","tableHeader","headerRow","borderBottomColor","column","isVisible","headerCell","id","borderRightColor","borderRightWidth","headerCellFiltered","handleSort","trackAction","ANALYTICS_EVENTS","SORT_FOILS","headerText","fontWeight","label","sortIconContainer","sortIcon","sortIconUpActive","sortIconDownActive","scrollView","showsVerticalScrollIndicator","bounces","index","selected","temporary","rowKey","pressed","row","rowEven","rowSelected","rowTemporary","success","rowHovered","cell","borderBottomWidth","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","minWidth","flexShrink","MEDIUM","cursor","transition","letterSpacing","borderStyle","textAlign","XSMALL","marginLeft","lineHeight","paddingHorizontal","paddingVertical","borderRadius","position","top","right","SEOHead","title","description","canonicalUrl","imageUrl","fullTitle","Helmet","rel","href","property","duration","opacity","useRef","Animated","Value","current","sequence","timing","toValue","useNativeDriver","delay","start","getBackgroundColor","bottom","left","transform","translateX","zIndex","userSelect","useMemo","trim","query","toLowerCase","toString","join","products","sort","a","b","valueA","valueB","multiplier","localeCompare","ErrorMessage","onRetry","retryButton","retryButtonPressed","retryButtonText","marginBottom","QuiverView","initialFoils","quiverName","quiverId","onUpdateQuiver","onClose","isLoading","setFilters","setSelectedFoils","useApp","localFoils","setLocalFoils","hasUnsavedChanges","setHasUnsavedChanges","handleSaveChanges","generateFoilId","UPDATE_QUIVER","foilCount","alert","handleRevertChanges","handleClose","centerContainer","LoadingIndicator","errorText","TouchableOpacity","buttonText","header","unsavedText","warning","controlsContainer","controlsInnerContainer","controlsColumn","_Fragment","saveButton","revertButton","closeButton","handleFilterChange","value","item","handleClearFilters","CONTENT_PADDING","HEADER_PADDING","marginTop","CONTROLS_CONTAINER_BOTTOM","CONTROLS_CONTAINER_PADDING","pointerEvents","BUTTON_GAP","BUTTON_PADDING_H","BUTTON_PADDING_V","boxShadow","QuiverScreen","searchProps","tableSettingsProps","isPending","startTransition","useTransition","setCurrentScreen","setColumns","setSearchQuery","loading","foilsLoading","foilsError","useFoils","quivers","quiversLoading","quiversError","deleteQuiver","updateQuiver","reloadQuivers","useQuivers","toastType","setToastType","config","getEnvironmentConfig","currentQuiverFoils","params","foil_ids","isArray","foilId","currentQuiver","find","q","Boolean","trackPageView","VIEW_QUIVER","webUrl","routes","quiver","SEARCH_FOILS","screen","setParams","goBack"],"sourceRoot":""}