{"version":3,"file":"static/js/component.components.8fe5bf9c.chunk.js","mappings":"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","sources":["src/components/ComparisonControls.tsx","src/components/ComparisonView.tsx","src/components/FilterControls.tsx","src/components/FoilsTable.tsx","src/components/Footer.tsx","src/components/SEOHead.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { spacing } from '../constants/spacing';\nimport { colors } from '../theme/colors';\n\ninterface ComparisonControlsProps {\n  selectedFoils: BaseProduct[];\n  onCompareSelected: () => void;\n  onExitCompare: () => void;\n  onClearSelection: () => void;\n  isComparisonView?: boolean;\n}\n\nconst WebWrapper = Platform.select({\n  web: ({ children }: { children: React.ReactNode }) => (\n    <div style={{\n      position: 'fixed',\n      bottom: 80,\n      left: 0,\n      right: 0,\n      zIndex: 2000,\n      pointerEvents: 'none',\n    }}>\n      <div style={{ \n        pointerEvents: 'auto', \n        display: 'flex', \n        justifyContent: 'flex-end', \n        paddingRight: spacing.LARGE,\n        paddingBottom: spacing.MEDIUM,\n      }}>\n        {children}\n      </div>\n    </div>\n  ),\n  default: ({ children }: { children: React.ReactNode }) => <>{children}</>,\n});\n\nconst ComparisonControls = ({ selectedFoils, onCompareSelected, onExitCompare, onClearSelection, isComparisonView }: ComparisonControlsProps) => {\n  // Only show controls if there are selected foils or we're in comparison view\n  if (selectedFoils.length === 0 && !isComparisonView) {\n    return null;\n  }\n\n  const content = !isComparisonView ? (\n    <View style={styles.comparisonBar}>\n      <Text style={styles.selectionText}>\n        Selected: {selectedFoils.length}\n      </Text>\n      <View style={styles.buttonGroup}>\n        <Pressable\n          style={[styles.button, styles.clearButton]}\n          onPress={onClearSelection}\n        >\n          <Text style={[styles.buttonText, styles.clearButtonText]}>Clear</Text>\n        </Pressable>\n        <Pressable\n          style={[styles.button, selectedFoils.length < 2 && styles.buttonDisabled]}\n          onPress={onCompareSelected}\n          disabled={selectedFoils.length < 2}\n        >\n          <Text style={styles.buttonText}>Compare</Text>\n        </Pressable>\n      </View>\n    </View>\n  ) : (\n    <View style={styles.comparisonBar}>\n      <Pressable\n        style={[styles.button, styles.cancelButton]}\n        onPress={onExitCompare}\n      >\n        <Text style={styles.buttonText}>Back</Text>\n      </Pressable>\n    </View>\n  );\n\n  return Platform.OS === 'web' ? (\n    <WebWrapper>{content}</WebWrapper>\n  ) : (\n    <View style={styles.container}>\n      {content}\n    </View>\n  );\n};\n\nexport default ComparisonControls;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: colors.background.secondary,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n  },\n  comparisonBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    gap: spacing.MEDIUM,\n    backgroundColor: 'transparent',\n  },\n  floatingButton: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    gap: spacing.MEDIUM,\n  },\n  button: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonDisabled: {\n    backgroundColor: colors.text.muted,\n    opacity: 0.5,\n  },\n  clearButton: {\n    backgroundColor: colors.background.primary,\n    borderWidth: 1,\n    borderColor: colors.secondary,\n  },\n  cancelButton: {\n    backgroundColor: colors.secondary,\n  },\n  buttonText: {\n    color: colors.background.primary,\n    fontWeight: '600',\n    fontSize: 14,\n  },\n  selectionText: {\n    fontSize: 14,\n    color: colors.text.secondary,\n    marginRight: spacing.MEDIUM,\n  },\n  selectedCount: {\n    color: colors.text.secondary,\n    fontSize: 16,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  compareButton: {\n    backgroundColor: colors.primary,\n  },\n  compareButtonText: {\n    color: colors.background.primary,\n  },\n  clearButtonText: {\n    color: colors.secondary,\n  }\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FoilsTable } from './FoilsTable';\nimport { BaseProduct } from '../types/scraper';\nimport { SortField } from '../hooks/useSortedFoils';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\n\ninterface ComparisonViewProps {\n  foils: BaseProduct[];\n  onClose?: () => void;\n  onCompare?: () => void;\n}\n\nconst ComparisonView = ({ foils, onClose, onCompare }: ComparisonViewProps) => {\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(foils);\n  \n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleSelect = () => {};\n  const isSelected = () => false;\n\n  return (\n    <View style={styles.container}>\n      <FoilsTable\n        foils={sortedFoils}\n        onSort={handleSort}\n        onFoilSelect={handleSelect}\n        isSelected={isSelected}\n        sortOption={{\n          field: sortOption.field,\n          ascending: sortOption.direction === 'asc'\n        }}\n      />\n    </View>\n  );\n};\n\nexport default ComparisonView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  }\n});","import React, { useState } from 'react';\nimport { View, Text, Pressable, StyleSheet, Animated, LayoutChangeEvent } from 'react-native';\nimport { colors } from '../theme/colors';\nimport { FilterOptions } from '../types/filters';\nimport { Ionicons } from '@expo/vector-icons';\n\ninterface FilterControlsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (type: keyof FilterOptions, value: string) => void;\n}\n\nexport function FilterControls({\n  filterOptions,\n  selectedBrands,\n  selectedSeries,\n  selectedTypes,\n  onFilterChange,\n}: FilterControlsProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [animation] = useState(new Animated.Value(0));\n  const [contentHeight, setContentHeight] = useState(0);\n\n  const toggleExpanded = () => {\n    const toValue = isExpanded ? 0 : 1;\n    Animated.spring(animation, {\n      toValue,\n      useNativeDriver: false,\n      friction: 10,\n    }).start();\n    setIsExpanded(!isExpanded);\n  };\n\n  const handleLayout = (event: LayoutChangeEvent) => {\n    const { height } = event.nativeEvent.layout;\n    setContentHeight(height);\n  };\n\n  const animatedHeight = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, contentHeight],\n  });\n\n  return (\n    <View style={styles.wrapper}>\n      <Pressable onPress={toggleExpanded} style={styles.header}>\n        <View style={styles.headerContent}>\n          <Text style={styles.headerTitle}>Filters</Text>\n          <View style={styles.filterSummary}>\n            {selectedBrands.length > 0 && (\n              <Text style={styles.filterCount}>Brands: {selectedBrands.length}</Text>\n            )}\n            {selectedTypes.length > 0 && (\n              <Text style={styles.filterCount}>Types: {selectedTypes.length}</Text>\n            )}\n            {selectedSeries.length > 0 && (\n              <Text style={styles.filterCount}>Series: {selectedSeries.length}</Text>\n            )}\n          </View>\n        </View>\n        <Ionicons \n          name={isExpanded ? 'chevron-up' : 'chevron-down'} \n          size={24} \n          color={colors.text.secondary}\n        />\n      </Pressable>\n\n      <Animated.View style={[styles.content, { height: animatedHeight }]}>\n        <View style={styles.container} onLayout={handleLayout}>\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Brand</Text>\n            <View style={styles.chipContainer}>\n              {filterOptions.brands.map((brand) => (\n                <Pressable\n                  key={brand}\n                  style={[\n                    styles.chip,\n                    selectedBrands.includes(brand) && styles.chipSelected,\n                  ]}\n                  onPress={() => onFilterChange('brands', brand)}\n                >\n                  <Text \n                    style={[\n                      styles.chipText,\n                      selectedBrands.includes(brand) && styles.chipTextSelected,\n                    ]}\n                  >\n                    {brand}\n                  </Text>\n                </Pressable>\n              ))}\n            </View>\n          </View>\n\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Type</Text>\n            <View style={styles.chipContainer}>\n              {filterOptions.types.map((type) => (\n                <Pressable\n                  key={type}\n                  style={[\n                    styles.chip,\n                    selectedTypes.includes(type) && styles.chipSelected,\n                  ]}\n                  onPress={() => onFilterChange('type', type)}\n                >\n                  <Text \n                    style={[\n                      styles.chipText,\n                      selectedTypes.includes(type) && styles.chipTextSelected,\n                    ]}\n                  >\n                    {type}\n                  </Text>\n                </Pressable>\n              ))}\n            </View>\n          </View>\n\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Series</Text>\n            <View style={styles.chipContainer}>\n              {filterOptions.series.map((series) => (\n                <Pressable\n                  key={series}\n                  style={[\n                    styles.chip,\n                    selectedSeries.includes(series) && styles.chipSelected,\n                  ]}\n                  onPress={() => onFilterChange('series', series)}\n                >\n                  <Text \n                    style={[\n                      styles.chipText,\n                      selectedSeries.includes(series) && styles.chipTextSelected,\n                    ]}\n                  >\n                    {series}\n                  </Text>\n                </Pressable>\n              ))}\n            </View>\n          </View>\n        </View>\n      </Animated.View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: colors.background.primary,\n    marginBottom: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: colors.border,\n    overflow: 'hidden',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: colors.background.primary,\n  },\n  headerContent: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n  },\n  headerTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: colors.text.primary,\n  },\n  filterSummary: {\n    flexDirection: 'row',\n    gap: 12,\n  },\n  filterCount: {\n    fontSize: 14,\n    color: colors.text.secondary,\n  },\n  content: {\n    overflow: 'hidden',\n  },\n  container: {\n    padding: 16,\n    paddingTop: 0,\n  },\n  section: {\n    marginBottom: 16,\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: colors.text.primary,\n    marginBottom: 8,\n  },\n  chipContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  chip: {\n    backgroundColor: colors.background.secondary,\n    borderRadius: 16,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n  },\n  chipSelected: {\n    backgroundColor: colors.primary,\n  },\n  chipText: {\n    color: colors.text.secondary,\n    fontSize: 14,\n  },\n  chipTextSelected: {\n    color: colors.background.primary,\n  },\n}); ","/**\n * FoilsTable Component\n * \n * IMPORTANT: Column Alignment\n * - The table uses fixed column widths for consistent layout and horizontal scrolling\n * - Each column width in headerCell must match the corresponding cell width\n * - Current widths:\n *   - Regular columns (brand, model, type, series): 150px\n *   - Number columns (area, wingspan, AR, price): 100px\n *   - Link column: 100px\n * - When modifying column styles, always update both headerCell and cell styles to maintain alignment\n * - Table has a minWidth of 1200px to ensure proper layout on all screen sizes\n */\n\nimport React from 'react';\nimport { View, Text, Pressable, ScrollView, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { SortField } from '../hooks/useSortedFoils';\nimport { colors } from '../theme/colors';\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  onSort: (field: SortField) => void;\n  onFoilSelect: (foil: BaseProduct) => void;\n  isSelected: (foil: BaseProduct) => boolean;\n  sortOption: { field: SortField; ascending: boolean };\n}\n\nconst MOBILE_BREAKPOINT = 768;\nconst TABLE_WIDTH = 930; // 100 + 150 + 80 + 120 + (100 * 4) + 80\n\nexport function FoilsTable({\n  foils,\n  onSort,\n  onFoilSelect,\n  isSelected,\n  sortOption,\n}: FoilsTableProps) {\n  const { width } = useWindowDimensions();\n  const isMobile = width < MOBILE_BREAKPOINT;\n\n  const renderSortIcon = (field: SortField) => {\n    const isActive = sortOption.field === field;\n    \n    return (\n      <View style={styles.sortIconContainer}>\n        <Text style={[\n          styles.sortIcon,\n          styles.sortIconUp,\n          isActive && sortOption.ascending && styles.sortIconUpActive\n        ]}>▲</Text>\n        <Text style={[\n          styles.sortIcon,\n          styles.sortIconDown,\n          isActive && !sortOption.ascending && styles.sortIconDownActive\n        ]}>▼</Text>\n      </View>\n    );\n  };\n\n  const getHeaderTextStyle = (field: SortField) => {\n    return styles.headerText;\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.tableWrapper}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} contentContainerStyle={styles.scrollViewContent}>\n          <View style={styles.tableContent}>\n            <View style={styles.tableHeader}>\n              <View style={styles.headerRow}>\n                <Pressable style={styles.headerCell} onPress={() => onSort('brand')}>\n                  <Text style={getHeaderTextStyle('brand')}>Brand</Text>\n                  {renderSortIcon('brand')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.modelCell]} onPress={() => onSort('model')}>\n                  <Text style={getHeaderTextStyle('model')}>Model</Text>\n                  {renderSortIcon('model')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.typeCell]} onPress={() => onSort('type')}>\n                  <Text style={getHeaderTextStyle('type')}>Type</Text>\n                  {renderSortIcon('type')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.seriesCell]} onPress={() => onSort('series')}>\n                  <Text style={getHeaderTextStyle('series')}>Series</Text>\n                  {renderSortIcon('series')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('area')}>\n                  <Text style={[getHeaderTextStyle('area'), styles.numberHeaderText]}>Area</Text>\n                  {renderSortIcon('area')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('wingspan')}>\n                  <Text style={[getHeaderTextStyle('wingspan'), styles.numberHeaderText]}>Span</Text>\n                  {renderSortIcon('wingspan')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('aspectRatio')}>\n                  <Text style={[getHeaderTextStyle('aspectRatio'), styles.numberHeaderText]}>AR</Text>\n                  {renderSortIcon('aspectRatio')}\n                </Pressable>\n                <Pressable style={[styles.headerCell, styles.numberHeaderCell]} onPress={() => onSort('price')}>\n                  <Text style={[getHeaderTextStyle('price'), styles.numberHeaderText]}>Price</Text>\n                  {renderSortIcon('price')}\n                </Pressable>\n                <View style={[styles.headerCell, styles.linkHeaderCell]}>\n                  <Text style={[styles.headerText, styles.linkHeaderText]}>Link</Text>\n                </View>\n              </View>\n            </View>\n            <View style={styles.scrollViewContainer}>\n              <ScrollView style={styles.scrollView}>\n                {foils.map((foil, index) => (\n                  <Pressable\n                    key={`${foil.brand}-${foil.model}`}\n                    onPress={() => onFoilSelect(foil)}\n                    style={({ pressed }) => [\n                      styles.row,\n                      index % 2 === 0 && styles.rowEven,\n                      isSelected(foil) && styles.rowSelected,\n                      Platform.OS === 'web' && pressed && styles.rowHovered\n                    ]}\n                  >\n                    <Text style={styles.cell}>{foil.brand}</Text>\n                    <Text style={[styles.cell, styles.modelCell]}>{foil.model}</Text>\n                    <Text style={[styles.cell, styles.typeCell]}>{foil.type}</Text>\n                    <Text style={[styles.cell, styles.seriesCell]}>{foil.series}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.specs.area}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.specs.wingspan}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.specs.aspectRatio?.toFixed(2)}</Text>\n                    <Text style={[styles.cell, styles.numberCell]}>{foil.price ? `$${foil.price}` : '-'}</Text>\n                    <View style={[styles.cell, styles.linkCell]}>\n                      {foil.sourceUrl && (\n                        <Pressable \n                          onPress={(e) => {\n                            e.stopPropagation();\n                            window.open(foil.sourceUrl, '_blank');\n                          }}\n                          style={({ pressed }) => [\n                            styles.linkButton,\n                            pressed && styles.linkButtonPressed\n                          ]}\n                        >\n                          <Text style={styles.linkText}>View</Text>\n                        </Pressable>\n                      )}\n                    </View>\n                  </Pressable>\n                ))}\n              </ScrollView>\n            </View>\n          </View>\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  tableWrapper: {\n    width: TABLE_WIDTH,\n    backgroundColor: colors.background.primary,\n    borderRadius: 8,\n    overflow: 'hidden',\n    borderWidth: 1,\n    borderColor: colors.border,\n    flex: 1,\n  },\n  tableContent: {\n    backgroundColor: colors.background.primary,\n    width: TABLE_WIDTH,\n    flex: 1,\n    flexDirection: 'column',\n  },\n  scrollViewContainer: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  tableHeader: {\n    backgroundColor: colors.background.secondary,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.primary,\n    width: TABLE_WIDTH,\n  },\n  headerRow: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.secondary,\n  },\n  headerCell: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12,\n    borderRightWidth: 1,\n    borderRightColor: colors.border,\n    width: 100,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  headerText: {\n    color: colors.text.secondary,\n    fontWeight: '600',\n    fontSize: 16,\n  },\n  row: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border,\n    width: TABLE_WIDTH,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  rowEven: {\n    backgroundColor: colors.background.secondary,\n  },\n  rowSelected: {\n    backgroundColor: `${colors.primary}15`,\n  },\n  rowHovered: {\n    backgroundColor: `${colors.primary}10`,\n  },\n  cell: {\n    color: colors.text.primary,\n    fontSize: 14,\n    padding: 12,\n    borderRightWidth: 1,\n    borderRightColor: colors.border,\n    width: 100,\n  },\n  modelCell: {\n    width: 150,\n  },\n  typeCell: {\n    width: 80,\n  },\n  seriesCell: {\n    width: 120,\n  },\n  numberCell: {\n    width: 100,\n    textAlign: 'right',\n  },\n  numberHeaderCell: {\n    width: 100,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    gap: 4,\n  },\n  numberHeaderText: {\n    textAlign: 'left',\n    flex: 1,\n  },\n  linkCell: {\n    width: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRightWidth: 0,\n    borderTopRightRadius: Platform.OS === 'web' ? 0 : 8,\n    borderBottomRightRadius: Platform.OS === 'web' ? 0 : 8,\n  },\n  linkHeaderCell: {\n    width: 80,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRightWidth: 0,\n    borderTopRightRadius: Platform.OS === 'web' ? 0 : 8,\n  },\n  linkHeaderText: {\n    textAlign: 'center',\n  },\n  linkButton: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    minWidth: 44,\n    alignItems: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  linkButtonPressed: {\n    opacity: 0.8,\n  },\n  linkText: {\n    color: colors.background.primary,\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  sortIconContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: 28,\n    justifyContent: 'center',\n    width: 16,\n    gap: 2,\n  },\n  sortIcon: {\n    color: colors.text.muted,\n    fontSize: 12,\n    width: 12,\n    height: 10,\n    lineHeight: 10,\n    textAlign: 'center',\n  },\n  sortIconUp: {\n    marginBottom: 0,\n  },\n  sortIconDown: {\n    marginTop: 0,\n  },\n  sortIconUpActive: {\n    color: colors.primary,\n    fontSize: 13,\n  },\n  sortIconDownActive: {\n    color: colors.primary,\n    fontSize: 13,\n  },\n  scrollViewContent: {\n    flexGrow: 0,\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet, Pressable } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackNavigationProp } from '../types/navigation';\nimport { colors } from '../theme/colors';\n\nconst Footer = () => {\n  const navigation = useNavigation<RootStackNavigationProp>();\n\n  return (\n    <View style={styles.footer}>\n      <Text style={styles.copyright}>© 2025 FoilQuiver. All rights reserved.</Text>\n      <Text style={styles.separator}>|</Text>\n      <Pressable onPress={() => navigation.navigate('Terms')}>\n        <Text style={styles.link}>Terms of Service</Text>\n      </Pressable>\n      <Text style={styles.separator}>|</Text>\n      <Pressable onPress={() => navigation.navigate('Privacy')}>\n        <Text style={styles.link}>Privacy Policy</Text>\n      </Pressable>\n      <Text style={styles.separator}>|</Text>\n      <Pressable onPress={() => navigation.navigate('Contact')}>\n        <Text style={styles.link}>Contact Us</Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  footer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n    backgroundColor: colors.background.secondary,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n  },\n  copyright: {\n    color: colors.text.secondary,\n    marginRight: 16,\n  },\n  separator: {\n    color: colors.text.muted,\n    marginHorizontal: 8,\n  },\n  link: {\n    color: colors.primary,\n    textDecorationLine: 'none',\n  },\n  linkHovered: {\n    color: colors.secondary,\n  }\n});\n\nexport default Footer; ","import { Helmet } from 'react-helmet-async';\n\ninterface SEOHeadProps {\n  title: string;\n  description: string;\n  canonicalUrl?: string;\n  imageUrl?: string;\n}\n\nexport const SEOHead: React.FC<SEOHeadProps> = ({\n  title,\n  description,\n  canonicalUrl,\n  imageUrl\n}) => {\n  const siteTitle = 'FoilQuiver';\n  const fullTitle = `${title} | ${siteTitle}`;\n  \n  return (\n    <Helmet>\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      {imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n      \n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      {imageUrl && <meta name=\"twitter:image\" content={imageUrl} />}\n    </Helmet>\n  );\n}; "],"names":["WebWrapper","_ref","children","_jsx","style","position","bottom","left","right","zIndex","pointerEvents","display","justifyContent","paddingRight","spacing","LARGE","paddingBottom","MEDIUM","_ref2","selectedFoils","onCompareSelected","onExitCompare","onClearSelection","isComparisonView","length","content","View","styles","comparisonBar","Pressable","button","cancelButton","onPress","Text","buttonText","_jsxs","selectionText","buttonGroup","clearButton","clearButtonText","buttonDisabled","disabled","StyleSheet","create","container","flexDirection","alignItems","padding","backgroundColor","colors","background","secondary","borderTopWidth","borderTopColor","border","gap","floatingButton","_objectSpread","alignSelf","paddingHorizontal","paddingVertical","borderRadius","boxShadow","cursor","primary","text","muted","opacity","borderWidth","borderColor","color","fontWeight","fontSize","marginRight","selectedCount","buttonContainer","compareButton","compareButtonText","foils","_useSortedFoils","onClose","onCompare","useSortedFoils","sortOption","setSortOption","sortedFoils","FoilsTable","onSort","field","prev","direction","onFoilSelect","isSelected","ascending","flex","FilterControls","filterOptions","selectedBrands","selectedSeries","selectedTypes","onFilterChange","_useState","useState","_useState2","_slicedToArray","isExpanded","setIsExpanded","_useState3","Animated","Value","animation","_useState5","_useState6","contentHeight","setContentHeight","animatedHeight","interpolate","inputRange","outputRange","wrapper","toValue","spring","useNativeDriver","friction","start","header","headerContent","headerTitle","filterSummary","filterCount","Ionicons","name","size","height","onLayout","event","nativeEvent","layout","section","sectionTitle","chipContainer","brands","map","brand","chip","includes","chipSelected","chipText","chipTextSelected","types","type","series","marginBottom","overflow","paddingTop","flexWrap","TABLE_WIDTH","renderSortIcon","useWindowDimensions","width","isActive","sortIconContainer","sortIcon","sortIconUp","sortIconUpActive","sortIconDown","sortIconDownActive","getHeaderTextStyle","headerText","tableWrapper","ScrollView","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","scrollViewContent","tableContent","tableHeader","headerRow","headerCell","modelCell","typeCell","seriesCell","numberHeaderCell","numberHeaderText","linkHeaderCell","linkHeaderText","scrollViewContainer","scrollView","foil","index","_foil$specs$aspectRat","pressed","row","rowEven","rowSelected","rowHovered","cell","model","numberCell","specs","area","wingspan","aspectRatio","toFixed","price","linkCell","sourceUrl","e","stopPropagation","window","open","_ref3","linkButton","linkButtonPressed","linkText","borderBottomWidth","borderBottomColor","borderRightWidth","borderRightColor","textAlign","borderTopRightRadius","borderBottomRightRadius","minWidth","lineHeight","marginTop","flexGrow","footer","copyright","separator","marginHorizontal","link","textDecorationLine","linkHovered","navigation","useNavigation","navigate","SEOHead","title","description","canonicalUrl","imageUrl","fullTitle","Helmet","rel","href","property"],"sourceRoot":""}