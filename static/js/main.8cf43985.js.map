{"version":3,"file":"static/js/main.8cf43985.js","mappings":"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","sources":[".cache|sync|/^/.//.*/.json$","src/components/ErrorBoundary.tsx","src/services/productService.ts","src/hooks/useSortedFoils.ts","src/utils/sorting.ts","src/components/FilterPanel.tsx","src/components/FilterControls.tsx","src/constants/config.ts","src/utils/dataTransform.ts","src/constants/colors.ts","src/constants/spacing.ts","src/components/FoilsTable.tsx","src/components/ComparisonControls.tsx","src/components/ComparisonView.tsx","src/components/LoadingIndicator.tsx","src/components/ErrorMessage.tsx","src/components/Footer.tsx","src/screens/BrowseScreen.tsx","src/hooks/useFoils.ts","src/hooks/useSearchFoils.ts","src/hooks/useFilteredFoils.ts","src/hooks/useComparison.ts","src/screens/legal/PrivacyPolicy.tsx","src/screens/legal/TermsOfService.tsx","src/screens/legal/Contact.tsx","src/components/SearchBar.tsx","src/navigation/AppNavigator.tsx","index.ts","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["var map = {\n\t\"./armstrong-foils.json\": 6626,\n\t\"./axis-foils.json\": 5404,\n\t\"./code-foils.json\": 5264,\n\t\"./kt-foils.json\": 6970,\n\t\"./lift-foils.json\": 4556,\n\t\"./uni-foil.json\": 4532\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4396;","import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n    error: null\n  };\n\n  public static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Uncaught error:', error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return (\n        <View style={styles.container}>\n          <Text style={styles.text}>Something went wrong.</Text>\n          <Text style={styles.errorText}>{this.state.error?.message}</Text>\n        </View>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  text: {\n    fontSize: 16,\n    marginBottom: 10,\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 14,\n  },\n}); ","import { BaseProduct } from '../types/scraper';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport class ProductService {\n  private static isWeb = Platform.OS === 'web';\n\n  static async getAllProducts(): Promise<BaseProduct[]> {\n    try {\n      if (this.isWeb) {\n        // Try loading from public/data first\n        try {\n          const response = await fetch('/data/foils.json');\n          if (response.ok) {\n            const products = await response.json();\n            console.log(`Loaded ${products.length} products from public/data/foils.json`);\n            return products;\n          }\n        } catch (error) {\n          console.warn('Failed to load from public/data, trying .cache directory...');\n        }\n\n        // Try loading from .cache as fallback\n        try {\n          const brands = ['Uni Foil', 'Code Foils', 'Axis Foils', 'KT Foils', 'Lift Foils', 'Armstrong Foils'];\n          const allProducts: BaseProduct[] = [];\n          \n          for (const brand of brands) {\n            try {\n              const products = require(`../../.cache/${brand.toLowerCase().replace(/\\s+/g, '-')}.json`);\n              if (products) {\n                console.log(`Loaded ${products.length} products for ${brand} from .cache`);\n                allProducts.push(...products);\n              }\n            } catch (error) {\n              console.warn(`No cache file found for ${brand}`);\n            }\n          }\n\n          if (allProducts.length > 0) {\n            return allProducts;\n          }\n        } catch (error) {\n          console.warn('Failed to load from .cache directory');\n        }\n      } else {\n        // For mobile, use AsyncStorage\n        const cached = await AsyncStorage.getItem('foils');\n        if (cached) {\n          const products = JSON.parse(cached);\n          console.log(`Loaded ${products.length} products from AsyncStorage`);\n          return products;\n        }\n      }\n    } catch (error) {\n      console.error('Error loading foils data:', error);\n    }\n    \n    console.warn('No foils data found');\n    return [];\n  }\n} ","import { useState, useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { sortProducts } from '../utils/sorting';\n\nexport type SortField = 'brand' | 'series' | 'model' | 'price' | 'area' | 'wingspan' | 'aspectRatio' | 'cord' | 'type' | 'link';\nexport type SortDirection = 'asc' | 'desc';\n\nexport interface SortOption {\n  field: SortField;\n  direction: SortDirection;\n}\n\nexport function useSortedFoils(foils: BaseProduct[]) {\n  const [sortOption, setSortOption] = useState<SortOption>({\n    field: 'area',\n    direction: 'asc'\n  });\n\n  const sortedFoils = useMemo(() => {\n    return sortProducts(foils, sortOption.field, sortOption.direction);\n  }, [foils, sortOption]);\n\n  return {\n    sortOption,\n    setSortOption,\n    sortedFoils\n  };\n} ","import { BaseProduct } from '../types/scraper';\nimport { SortField, SortDirection } from '../hooks/useSortedFoils';\n\nexport function sortProducts(\n  products: BaseProduct[],\n  field: SortField,\n  direction: SortDirection\n): BaseProduct[] {\n  return [...products].sort((a, b) => {\n    let valueA: string | number;\n    let valueB: string | number;\n\n    if (field === 'brand' || field === 'series' || field === 'model') {\n      valueA = a[field].toLowerCase();\n      valueB = b[field].toLowerCase();\n    } else if (field === 'price') {\n      valueA = a.price || 0;\n      valueB = b.price || 0;\n    } else {\n      valueA = a.specs[field];\n      valueB = b.specs[field];\n    }\n    \n    const multiplier = direction === 'asc' ? 1 : -1;\n    \n    if (typeof valueA === 'string') {\n      return valueA.localeCompare(valueB as string) * multiplier;\n    }\n    return (valueA - valueB) * multiplier;\n  });\n} ","import React, { useState, useRef } from 'react';\nimport { View, Text, Pressable, StyleSheet, Animated, ScrollView, LayoutChangeEvent } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\ninterface FilterPanelProps {\n  filters: {\n    brands: string[];\n    series: string[];\n    type: 'front' | 'tail' | null;\n  };\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    brandSeries: Record<string, string[]>;\n  };\n  onBrandFilter: (brand: string) => void;\n  onSeriesFilter: (series: string) => void;\n  onTypeFilter: (type: 'front' | 'tail' | null) => void;\n}\n\nexport function FilterPanel({\n  filters,\n  filterOptions,\n  onBrandFilter,\n  onSeriesFilter,\n  onTypeFilter,\n}: FilterPanelProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [animation] = useState(new Animated.Value(0));\n  const [contentHeight, setContentHeight] = useState(0);\n\n  const toggleExpanded = () => {\n    const toValue = isExpanded ? 0 : 1;\n    Animated.spring(animation, {\n      toValue,\n      useNativeDriver: false,\n    }).start();\n    setIsExpanded(!isExpanded);\n  };\n\n  const handleLayout = (event: LayoutChangeEvent) => {\n    const { height } = event.nativeEvent.layout;\n    setContentHeight(height);\n  };\n\n  const animatedHeight = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, contentHeight],\n  });\n\n  return (\n    <View style={styles.container}>\n      <Pressable onPress={toggleExpanded} style={styles.header}>\n        <Text style={styles.headerText}>Filters</Text>\n        <Ionicons \n          name={isExpanded ? 'chevron-up' : 'chevron-down'} \n          size={24} \n          color=\"#666\"\n        />\n      </Pressable>\n\n      <Animated.View style={[styles.content, { height: animatedHeight }]}>\n        <View style={styles.scrollContainer} onLayout={handleLayout}>\n          <View style={styles.filterSection}>\n            <View style={styles.filterRow}>\n              <Text style={styles.filterTitle}>Type:</Text>\n              <View style={styles.filterButtons}>\n                <Pressable\n                  style={[\n                    styles.filterButton,\n                    filters.type === 'front' && styles.filterButtonActive,\n                  ]}\n                  onPress={() => onTypeFilter(filters.type === 'front' ? null : 'front')}\n                >\n                  <Text style={[\n                    styles.filterButtonText,\n                    filters.type === 'front' && styles.filterButtonTextActive,\n                  ]}>Front</Text>\n                </Pressable>\n                <Pressable\n                  style={[\n                    styles.filterButton,\n                    filters.type === 'tail' && styles.filterButtonActive,\n                  ]}\n                  onPress={() => onTypeFilter(filters.type === 'tail' ? null : 'tail')}\n                >\n                  <Text style={[\n                    styles.filterButtonText,\n                    filters.type === 'tail' && styles.filterButtonTextActive,\n                  ]}>Tail</Text>\n                </Pressable>\n              </View>\n            </View>\n          </View>\n\n          <View style={styles.filterSection}>\n            <View style={styles.filterRow}>\n              <Text style={styles.filterTitle}>Brand:</Text>\n              <View style={styles.filterButtons}>\n                {filterOptions.brands.map(brand => (\n                  <Pressable\n                    key={brand}\n                    style={[\n                      styles.filterButton,\n                      filters.brands.includes(brand) && styles.filterButtonActive,\n                    ]}\n                    onPress={() => onBrandFilter(brand)}\n                  >\n                    <Text style={[\n                      styles.filterButtonText,\n                      filters.brands.includes(brand) && styles.filterButtonTextActive,\n                    ]}>{brand}</Text>\n                  </Pressable>\n                ))}\n              </View>\n            </View>\n          </View>\n\n          <View style={styles.filterSection}>\n            <View style={styles.filterRow}>\n              <Text style={styles.filterTitle}>Series:</Text>\n              <View style={styles.filterButtons}>\n                {filterOptions.series.map(series => (\n                  <Pressable\n                    key={series}\n                    style={[\n                      styles.filterButton,\n                      filters.series.includes(series) && styles.filterButtonActive,\n                    ]}\n                    onPress={() => onSeriesFilter(series)}\n                  >\n                    <Text style={[\n                      styles.filterButtonText,\n                      filters.series.includes(series) && styles.filterButtonTextActive,\n                    ]}>{series}</Text>\n                  </Pressable>\n                ))}\n              </View>\n            </View>\n          </View>\n        </View>\n      </Animated.View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 12,\n  },\n  headerText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  content: {\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  scrollContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n  },\n  filterSection: {\n    padding: 8,\n    borderTopWidth: 1,\n    borderTopColor: '#eee',\n  },\n  filterRow: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  filterTitle: {\n    fontSize: 14,\n    color: '#666',\n    marginRight: 8,\n    minWidth: 50,\n    paddingTop: 6, // Align with filter buttons\n  },\n  filterButtons: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 6,\n  },\n  filterButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    backgroundColor: 'white',\n    borderWidth: 1,\n    borderColor: '#ddd',\n    marginBottom: 4,\n  },\n  filterButtonActive: {\n    backgroundColor: '#007AFF',\n    borderColor: '#007AFF',\n  },\n  filterButtonText: {\n    color: '#333',\n    fontSize: 13,\n  },\n  filterButtonTextActive: {\n    color: 'white',\n  },\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FilterPanel } from './FilterPanel';\nimport { FilterOptions } from '../types/filters';\n\ninterface FilterControlsProps {\n  filterOptions: {\n    brands: string[];\n    series: string[];\n    types: string[];\n    brandSeries: Record<string, string[]>;\n  };\n  selectedBrands: string[];\n  selectedSeries: string[];\n  selectedTypes: string[];\n  onFilterChange: (filterType: keyof FilterOptions, values: string[]) => void;\n}\n\nexport function FilterControls({\n  filterOptions,\n  selectedBrands = [],\n  selectedSeries = [],\n  selectedTypes = [],\n  onFilterChange,\n}: FilterControlsProps) {\n  const handleBrandFilter = (brand: string) => {\n    const newBrands = selectedBrands.includes(brand)\n      ? selectedBrands.filter(b => b !== brand)\n      : [...selectedBrands, brand];\n    onFilterChange('brands', newBrands);\n  };\n\n  const handleSeriesFilter = (series: string) => {\n    const newSeries = selectedSeries.includes(series)\n      ? selectedSeries.filter(s => s !== series)\n      : [...selectedSeries, series];\n    onFilterChange('series', newSeries);\n  };\n\n  const handleTypeFilter = (type: 'front' | 'tail' | null) => {\n    onFilterChange('type', type ? [type] : []);\n  };\n\n  return (\n    <View style={styles.container}>\n      <FilterPanel\n        filters={{\n          brands: selectedBrands,\n          series: selectedSeries,\n          type: selectedTypes.length > 0 ? selectedTypes[0] as 'front' | 'tail' : null,\n        }}\n        filterOptions={filterOptions}\n        onBrandFilter={handleBrandFilter}\n        onSeriesFilter={handleSeriesFilter}\n        onTypeFilter={handleTypeFilter}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n}); ","export const MEASUREMENTS = {\n  AREA: {\n    METRIC: 'cm²',\n    IMPERIAL: 'in²',\n  },\n  LENGTH: {\n    METRIC: 'mm',\n    IMPERIAL: 'in',\n  },\n};\n\nexport const CACHE = {\n  DURATION: 24 * 60 * 60 * 1000, // 24 hours\n  PREFIX: 'scraper_cache_',\n};\n\nexport const TABLE = {\n  DEFAULT_SORT: {\n    FIELD: 'area' as const,\n    DIRECTION: 'asc' as const,\n  },\n  CELL_MIN_WIDTH: {\n    BRAND: 100,\n    SERIES: 120,\n    MODEL: 150,\n    SPECS: 80,\n  },\n};\n\nexport const SCRAPER = {\n  RETRY_ATTEMPTS: 3,\n  RETRY_DELAY: 1000, // 1 second\n  TIMEOUT: 10000, // 10 seconds\n}; ","import { BaseProduct } from '../types/scraper';\n\nexport function formatMeasurement(value: number, unit: string): string {\n  return `${value}${unit}`;\n}\n\nexport function convertArea(cmSquared: number): number {\n  return Math.round(cmSquared * 0.155); // Convert to square inches\n}\n\nexport function calculateAspectRatio(wingspan: number, area: number): number {\n  return Math.round((wingspan * wingspan / area) * 100) / 100;\n}\n\nexport function groupFoilsByBrand(foils: BaseProduct[]): Record<string, BaseProduct[]> {\n  return foils.reduce((acc, foil) => {\n    if (!acc[foil.brand]) {\n      acc[foil.brand] = [];\n    }\n    acc[foil.brand].push(foil);\n    return acc;\n  }, {} as Record<string, BaseProduct[]>);\n}\n\nexport function groupFoilsBySeries(foils: BaseProduct[]): Record<string, BaseProduct[]> {\n  return foils.reduce((acc, foil) => {\n    if (!acc[foil.series]) {\n      acc[foil.series] = [];\n    }\n    acc[foil.series].push(foil);\n    return acc;\n  }, {} as Record<string, BaseProduct[]>);\n}\n\nexport function getUniqueValues(foils: BaseProduct[], key: keyof BaseProduct): string[] {\n  return Array.from(new Set(foils.map(foil => foil[key] as string))).sort();\n} ","export const colors = {\n  BORDER: '#eee',\n  LIGHT_GRAY: '#f5f5f5',\n  TEXT_PRIMARY: '#1c1c1e',\n  SELECTED_ROW: '#e6f3ff',\n  HOVER_ROW: '#f8f9fa',\n  LINK: '#0066cc',\n}; ","export const spacing = {\n  SMALL: 8,\n  MEDIUM: 12,\n  LARGE: 16,\n  XLARGE: 24,\n}; ","import React, { useMemo } from 'react';\nimport { View, Text, Pressable, ScrollView, StyleSheet, Platform, ViewStyle } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { SortOption, SortField } from '../hooks/useSortedFoils';\nimport { tableConfig } from '../config/tableConfig';\nimport { MEASUREMENTS, TABLE } from '../constants/config';\nimport { formatMeasurement } from '../utils/dataTransform';\nimport { colors } from '../constants/colors';\nimport { spacing } from '../constants/spacing';\n\ninterface FoilsTableProps {\n  foils: BaseProduct[];\n  sortOption: SortOption;\n  onSort: (field: SortField) => void;\n  comparisonMode: boolean;\n  isSelected: (foil: BaseProduct) => boolean;\n  onFoilSelect: (foil: BaseProduct) => void;\n}\n\nexport const FoilsTable: React.FC<FoilsTableProps> = ({\n  foils,\n  sortOption,\n  onSort,\n  comparisonMode,\n  isSelected,\n  onFoilSelect,\n}) => {\n  // Calculate max widths for each column\n  const columnWidths = useMemo(() => {\n    const baseWidths = {\n      brand: 100,      // Base width for \"Brand\" + sort indicator\n      series: 120,     // Base width for \"Series\" + sort indicator\n      model: 160,      // Base width for longer model names\n      wingspan: 100,   // Width for \"Wingspan\" + numbers + unit\n      area: 100,       // Width for \"Area\" + numbers + unit\n      aspectRatio: 80, // Width for \"AR\" + numbers\n      cord: 90,        // Width for \"Cord\" + numbers + unit\n      type: 80,        // Width for \"Type\" + sort indicator\n      price: 90,       // Width for \"Price\" + numbers\n      link: 100,       // Width for \"Product Link\"\n    };\n\n    // Find maximum content lengths\n    foils.forEach(foil => {\n      const brandWidth = (foil.brand?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.brand = Math.max(baseWidths.brand, brandWidth);\n      \n      const seriesWidth = (foil.series?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.series = Math.max(baseWidths.series, seriesWidth);\n      \n      const modelWidth = (foil.model?.length || 0) * 8 + spacing.MEDIUM * 3;\n      baseWidths.model = Math.max(baseWidths.model, modelWidth);\n    });\n\n    return baseWidths;\n  }, [foils]);\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    row: {\n      flexDirection: 'row',\n      borderBottomWidth: 1,\n      borderBottomColor: colors.BORDER,\n    },\n    headerRow: {\n      flexDirection: 'row',\n      backgroundColor: colors.LIGHT_GRAY,\n      borderBottomColor: colors.BORDER,\n      borderBottomWidth: 1,\n    },\n    cell: {\n      padding: spacing.MEDIUM,\n      justifyContent: 'center',\n    },\n    textCell: {\n      alignItems: 'flex-start',\n    },\n    numericCell: {\n      alignItems: 'flex-end',\n    },\n    brandCell: {\n      width: columnWidths.brand,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    seriesCell: {\n      width: columnWidths.series,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    modelCell: {\n      width: columnWidths.model,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    wingspanCell: {\n      width: columnWidths.wingspan,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    areaCell: {\n      width: columnWidths.area,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    arCell: {\n      width: columnWidths.aspectRatio,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    cordCell: {\n      width: columnWidths.cord,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    typeCell: {\n      width: columnWidths.type,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    priceCell: {\n      width: columnWidths.price,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    linkCell: {\n      width: columnWidths.link,\n      flexShrink: 0,\n      flexGrow: 0,\n    },\n    headerText: {\n      fontWeight: 'bold',\n      color: colors.TEXT_PRIMARY,\n      flex: 1,\n    },\n    numericText: {\n      textAlign: 'right',\n      width: '100%',\n    },\n    headerContent: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      width: '100%',\n    },\n    headerNumericContent: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      width: '100%',\n      gap: spacing.MEDIUM,\n    },\n    sortIndicator: {\n      width: 24,\n      textAlign: 'center',\n    },\n    selectable: Platform.select<ViewStyle>({\n      web: {\n        cursor: 'pointer',\n      },\n      default: {}\n    }),\n    selectedRow: {\n      backgroundColor: colors.SELECTED_ROW,\n    },\n    cellContent: {\n      width: '100%',\n    },\n    link: {\n      color: colors.LINK,\n      textDecorationLine: 'underline',\n    },\n    headerCell: {\n      ...Platform.select({\n        web: {\n          cursor: 'pointer',\n        },\n        default: {},\n      }),\n      backgroundColor: colors.headerBackground,\n      padding: spacing.small,\n      borderBottomWidth: 1,\n      borderBottomColor: colors.border,\n    },\n  });\n\n  const getSortIndicator = (field: SortField) => {\n    if (sortOption.field !== field) return '○';\n    return sortOption.direction === 'asc' ? '↑' : '↓';\n  };\n\n  const renderHeaderContent = (text: string, field: SortField, isNumeric: boolean = false) => (\n    <View style={isNumeric ? styles.headerNumericContent : styles.headerContent}>\n      <Text style={[styles.headerText, isNumeric && styles.numericText]}>{text}</Text>\n      <Text style={styles.sortIndicator}>{getSortIndicator(field)}</Text>\n    </View>\n  );\n\n  const renderRow = (foil: BaseProduct) => {\n    const rowKey = `row-${foil.brand}-${foil.model}`.toLowerCase().replace(/\\s+/g, '-');\n    const selected = isSelected(foil);\n    \n    return (\n      <Pressable\n        key={rowKey}\n        onPress={() => {\n          if (comparisonMode) {\n            console.log('Toggling selection for:', foil.model);\n            onFoilSelect(foil);\n          }\n        }}\n        style={[\n          styles.row, \n          selected && styles.selectedRow,\n          comparisonMode && styles.selectable\n        ]}\n      >\n        <View style={[styles.cell, styles.textCell, styles.brandCell]}>\n          <View style={styles.cellContent}>\n            <Text>{foil.brand}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.textCell, styles.seriesCell]}>\n          <View style={styles.cellContent}>\n            <Text>{foil.series}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.textCell, styles.modelCell]}>\n          <View style={styles.cellContent}>\n            <Text>{foil.model}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.wingspanCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.numericText}>{formatMeasurement(foil.specs.wingspan || 0, MEASUREMENTS.LENGTH.METRIC)}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.areaCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.numericText}>{formatMeasurement(foil.specs.area || 0, MEASUREMENTS.AREA.METRIC)}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.arCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.numericText}>{foil.specs.aspectRatio?.toFixed(1) || '-'}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.cordCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.numericText}>{formatMeasurement(foil.specs.cord || 0, MEASUREMENTS.LENGTH.METRIC) || '-'}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.textCell, styles.typeCell]}>\n          <View style={styles.cellContent}>\n            <Text>{foil.type.charAt(0).toUpperCase() + foil.type.slice(1)}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.numericCell, styles.priceCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.numericText}>{foil.price ? `$${foil.price}` : '-'}</Text>\n          </View>\n        </View>\n        <View style={[styles.cell, styles.textCell, styles.linkCell]}>\n          <View style={styles.cellContent}>\n            <Text style={styles.link} onPress={() => Platform.OS === 'web' ? window.open(foil.sourceUrl, '_blank') : null}>\n              View\n            </Text>\n          </View>\n        </View>\n      </Pressable>\n    );\n  };\n\n  return (\n    <ScrollView horizontal style={styles.container}>\n      <View>\n        <View style={styles.headerRow}>\n          <Pressable style={[styles.cell, styles.textCell, styles.brandCell]} onPress={() => onSort('brand')}>\n            {renderHeaderContent('Brand', 'brand')}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.textCell, styles.seriesCell]} onPress={() => onSort('series')}>\n            {renderHeaderContent('Series', 'series')}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.textCell, styles.modelCell]} onPress={() => onSort('model')}>\n            {renderHeaderContent('Model', 'model')}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.numericCell, styles.wingspanCell]} onPress={() => onSort('wingspan')}>\n            {renderHeaderContent('Wingspan', 'wingspan', true)}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.numericCell, styles.areaCell]} onPress={() => onSort('area')}>\n            {renderHeaderContent('Area', 'area', true)}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.numericCell, styles.arCell]} onPress={() => onSort('aspectRatio')}>\n            {renderHeaderContent('AR', 'aspectRatio', true)}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.numericCell, styles.cordCell]} onPress={() => onSort('cord')}>\n            {renderHeaderContent('Cord', 'cord', true)}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.textCell, styles.typeCell]} onPress={() => onSort('type')}>\n            {renderHeaderContent('Type', 'type')}\n          </Pressable>\n          <Pressable style={[styles.cell, styles.numericCell, styles.priceCell]} onPress={() => onSort('price')}>\n            {renderHeaderContent('Price', 'price', true)}\n          </Pressable>\n          <View style={[styles.cell, styles.textCell, styles.linkCell]}>\n            {renderHeaderContent('Product Link', 'link')}\n          </View>\n        </View>\n        {foils.map(renderRow)}\n      </View>\n    </ScrollView>\n  );\n}; ","import React from 'react';\nimport { View, Text, Pressable, StyleSheet, Platform } from 'react-native';\nimport { BaseProduct } from '../types/scraper';\nimport { spacing } from '../constants/spacing';\n\ninterface ComparisonControlsProps {\n  comparisonMode: boolean;\n  selectedFoils: BaseProduct[];\n  onCompareStart: () => void;\n  onCompareSelected: () => void;\n  onExitCompare: () => void;\n  isComparisonView?: boolean;\n}\n\nconst WebWrapper = Platform.select({\n  web: ({ children }: { children: React.ReactNode }) => (\n    <div style={{\n      position: 'fixed',\n      bottom: 50,\n      left: 0,\n      right: 0,\n      zIndex: 1000,\n      pointerEvents: 'none',\n    }}>\n      <div style={{ pointerEvents: 'auto', display: 'flex', justifyContent: 'flex-end', paddingRight: spacing.LARGE }}>\n        {children}\n      </div>\n    </div>\n  ),\n  default: ({ children }: { children: React.ReactNode }) => <>{children}</>,\n});\n\nexport function ComparisonControls({\n  comparisonMode,\n  selectedFoils,\n  onCompareStart,\n  onCompareSelected,\n  onExitCompare,\n  isComparisonView = false,\n}: ComparisonControlsProps) {\n  const content = !comparisonMode ? (\n    <Pressable\n      style={styles.floatingButton}\n      onPress={onCompareStart}\n    >\n      <Text style={styles.buttonText}>Compare Foils</Text>\n    </Pressable>\n  ) : (\n    <View style={styles.comparisonBar}>\n      {!isComparisonView && (\n        <>\n          <Text style={styles.selectionText}>\n            Selected: {selectedFoils.length}\n          </Text>\n          <View style={styles.buttonGroup}>\n            <Pressable\n              style={[styles.button, selectedFoils.length < 2 && styles.buttonDisabled]}\n              onPress={onCompareSelected}\n              disabled={selectedFoils.length < 2}\n            >\n              <Text style={styles.buttonText}>Compare</Text>\n            </Pressable>\n          </View>\n        </>\n      )}\n      <Pressable\n        style={[styles.button, styles.cancelButton]}\n        onPress={onExitCompare}\n      >\n        <Text style={styles.buttonText}>Back</Text>\n      </Pressable>\n    </View>\n  );\n\n  return Platform.OS === 'web' ? (\n    <WebWrapper>{content}</WebWrapper>\n  ) : (\n    <View style={styles.container}>\n      {content}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    right: 0,\n    paddingHorizontal: spacing.LARGE,\n    pointerEvents: 'box-none',\n  },\n  comparisonBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    gap: spacing.MEDIUM,\n    backgroundColor: 'transparent',\n  },\n  floatingButton: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonGroup: {\n    flexDirection: 'row',\n    gap: spacing.MEDIUM,\n  },\n  button: {\n    backgroundColor: '#007AFF',\n    paddingHorizontal: spacing.LARGE,\n    paddingVertical: spacing.MEDIUM,\n    borderRadius: 8,\n    ...Platform.select({\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n      },\n      default: {\n        elevation: 2,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n      }\n    })\n  },\n  buttonDisabled: {\n    backgroundColor: '#ccc',\n  },\n  cancelButton: {\n    backgroundColor: '#FF3B30',\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '600',\n    fontSize: 14,\n  },\n  selectionText: {\n    fontSize: 14,\n    color: '#666',\n    marginRight: spacing.MEDIUM,\n  },\n}); ","import React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FoilsTable } from './FoilsTable';\nimport { BaseProduct } from '../types/scraper';\nimport { SortOption, SortField } from '../hooks/useSortedFoils';\nimport { useSortedFoils } from '../hooks/useSortedFoils';\n\ninterface ComparisonViewProps {\n  foils: BaseProduct[];\n  onClose?: () => void;\n  onCompare?: () => void;\n}\n\nexport function ComparisonView({ foils, onClose, onCompare }: ComparisonViewProps) {\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(foils);\n  \n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleSelect = () => {};\n  const isSelected = () => false;\n\n  return (\n    <View style={styles.container}>\n      <FoilsTable\n        foils={sortedFoils}\n        sortOption={sortOption}\n        onSort={handleSort}\n        comparisonMode={false}\n        isSelected={isSelected}\n        onFoilSelect={handleSelect}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  }\n});","import React from 'react';\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\n\nexport function LoadingIndicator() {\n  return (\n    <View style={styles.container}>\n      <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}); ","import React from 'react';\nimport { View, Text, Pressable, StyleSheet } from 'react-native';\n\ninterface ErrorMessageProps {\n  message: string;\n  onRetry?: () => void;\n}\n\nexport function ErrorMessage({ message, onRetry }: ErrorMessageProps) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.message}>{message}</Text>\n      {onRetry && (\n        <Pressable\n          style={({ pressed }) => [\n            styles.retryButton,\n            pressed && styles.retryButtonPressed\n          ]}\n          onPress={onRetry}\n        >\n          <Text style={styles.retryButtonText}>Retry</Text>\n        </Pressable>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: '#ffebee',\n    borderRadius: 8,\n    margin: 16,\n  },\n  message: {\n    color: '#c62828',\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 12,\n  },\n  retryButton: {\n    backgroundColor: '#c62828',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 6,\n  },\n  retryButtonPressed: {\n    backgroundColor: '#b71c1c',\n  },\n  retryButtonText: {\n    color: '#fff',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n}); ","import React from 'react';\nimport { View, Text, StyleSheet, Pressable, Platform } from 'react-native';\nimport { useNavigation, useNavigationContainerRef } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../types/navigation';\n\ntype NavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\nexport const Footer = () => {\n  const navigation = useNavigation<NavigationProp>();\n\n  const handleNavigation = (screen: 'PrivacyPolicy' | 'TermsOfService' | 'Contact') => {\n    navigation.navigate(screen);\n  };\n\n  return (\n    <View style={styles.footer}>\n      <Text style={styles.copyright}>© 2025 FoilQuiver</Text>\n      <Text style={styles.separator}>•</Text>\n      <Pressable \n        onPress={() => handleNavigation('Contact')}\n        style={({ pressed }) => [\n          styles.linkContainer,\n          pressed && styles.pressed\n        ]}\n        accessibilityRole=\"link\"\n      >\n        <Text style={styles.link}>Contact</Text>\n      </Pressable>\n      <Text style={styles.separator}>•</Text>\n      <Pressable \n        onPress={() => handleNavigation('PrivacyPolicy')}\n        style={({ pressed }) => [\n          styles.linkContainer,\n          pressed && styles.pressed\n        ]}\n        accessibilityRole=\"link\"\n      >\n        <Text style={styles.link}>Privacy Policy</Text>\n      </Pressable>\n      <Text style={styles.separator}>•</Text>\n      <Pressable \n        onPress={() => handleNavigation('TermsOfService')}\n        style={({ pressed }) => [\n          styles.linkContainer,\n          pressed && styles.pressed\n        ]}\n        accessibilityRole=\"link\"\n      >\n        <Text style={styles.link}>Terms of Service</Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  footer: {\n    padding: 12,\n    backgroundColor: '#f5f5f5',\n    borderTopWidth: 1,\n    borderTopColor: '#eee',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 8,\n  },\n  copyright: {\n    fontSize: 14,\n    color: '#666',\n  },\n  separator: {\n    fontSize: 14,\n    color: '#666',\n  },\n  linkContainer: {\n    padding: 4,\n    ...Platform.select({\n      web: {\n        cursor: 'pointer' as const,\n      },\n    }),\n  },\n  pressed: {\n    opacity: 0.7,\n  },\n  link: {\n    fontSize: 14,\n    color: '#0066cc',\n    textDecorationLine: 'underline',\n  },\n}); ","import React, { useState, useEffect } from 'react';\nimport { View, ScrollView, StyleSheet } from 'react-native';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { useFoils } from '../hooks/useFoils';\nimport { useSearchFoils } from '../hooks/useSearchFoils';\nimport { useFilteredFoils } from '../hooks/useFilteredFoils';\nimport { useSortedFoils, SortField } from '../hooks/useSortedFoils';\nimport { useComparison } from '../hooks/useComparison';\nimport { FilterControls } from '../components/FilterControls';\nimport { FoilsTable } from '../components/FoilsTable';\nimport { ComparisonControls } from '../components/ComparisonControls';\nimport { ComparisonView } from '../components/ComparisonView';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { ErrorMessage } from '../components/ErrorMessage';\nimport { Footer } from '../components/Footer';\nimport { FilterOptions } from '../types/filters';\nimport { RootStackParamList } from '../types/navigation';\nimport { BaseProduct } from '../types/scraper';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Browse'>;\n\nexport default function BrowseScreen({ route, navigation }: Props) {\n  const { foils, loading, error, refreshFoils } = useFoils();\n  const searchQuery = route.params?.searchQuery || '';\n  const { searchedFoils } = useSearchFoils(foils, searchQuery);\n  const { \n    filters, \n    setFilters, \n    filteredFoils, \n    filterOptions \n  } = useFilteredFoils(searchedFoils);\n  const { sortOption, setSortOption, sortedFoils } = useSortedFoils(filteredFoils);\n  const { \n    comparisonMode, \n    selectedFoils, \n    setComparisonModeOn,\n    setComparisonModeOff,\n    toggleFoilSelection, \n    isSelected \n  } = useComparison();\n  \n  const [isComparisonView, setIsComparisonView] = useState(false);\n\n  useEffect(() => {\n    console.log('BrowseScreen mounted, loading:', loading);\n  }, [loading]);\n\n  useEffect(() => {\n    if (route.params?.searchQuery !== searchQuery) {\n      navigation.setParams({ searchQuery });\n    }\n  }, [searchQuery, navigation]);\n\n  const handleFilterChange = (filterType: keyof FilterOptions, values: string[]) => {\n    if (filterType === 'type') {\n      setFilters((prev: FilterOptions) => ({\n        ...prev,\n        type: values.length > 0 ? values[0] as 'front' | 'tail' : null\n      }));\n    } else {\n      setFilters((prev: FilterOptions) => ({\n        ...prev,\n        [filterType]: values\n      }));\n    }\n  };\n\n  const handleSort = (field: SortField) => {\n    setSortOption(prev => ({\n      field,\n      direction: prev.field === field && prev.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleBrandFilter = (brand: string) => {\n    setFilters((prev: FilterOptions) => ({\n      ...prev,\n      brands: prev.brands.includes(brand)\n        ? prev.brands.filter((b: string) => b !== brand)\n        : [...prev.brands, brand]\n    }));\n  };\n\n  const handleSeriesFilter = (series: string) => {\n    setFilters((prev: FilterOptions) => ({\n      ...prev,\n      series: prev.series.includes(series)\n        ? prev.series.filter((s: string) => s !== series)\n        : [...prev.series, series]\n    }));\n  };\n\n  const handleCompareStart = () => {\n    setComparisonModeOn();\n  };\n\n  const handleCompareSelected = () => {\n    if (selectedFoils.length >= 2) {\n      setIsComparisonView(true);\n    }\n  };\n\n  const handleExitCompare = () => {\n    setIsComparisonView(false);\n    setComparisonModeOff();\n  };\n\n  if (loading) {\n    console.log('Rendering LoadingIndicator');\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return <ErrorMessage message={error} onRetry={refreshFoils} />;\n  }\n\n  return (\n    <View style={styles.container}>\n      <ScrollView style={styles.scrollView}>\n        <FilterControls\n          filterOptions={filterOptions}\n          selectedBrands={filters.brands}\n          selectedSeries={filters.series}\n          selectedTypes={filters.type ? [filters.type] : []}\n          onFilterChange={handleFilterChange}\n        />\n        {isComparisonView ? (\n          <ComparisonView \n            foils={selectedFoils} \n            onClose={() => setIsComparisonView(false)}\n            onCompare={() => {}}\n          />\n        ) : (\n          <FoilsTable\n            foils={sortedFoils}\n            onSort={handleSort}\n            comparisonMode={comparisonMode}\n            onFoilSelect={toggleFoilSelection}\n            isSelected={isSelected}\n            sortOption={sortOption}\n          />\n        )}\n      </ScrollView>\n      <ComparisonControls\n        comparisonMode={comparisonMode}\n        selectedFoils={selectedFoils}\n        onCompareStart={handleCompareStart}\n        onCompareSelected={handleCompareSelected}\n        onExitCompare={handleExitCompare}\n        isComparisonView={isComparisonView}\n      />\n      <Footer />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n}); ","import { useState, useEffect } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { ProductService } from '../services/productService';\n\nexport function useFoils() {\n  const [foils, setFoils] = useState<BaseProduct[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadFoils = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const products = await ProductService.getAllProducts();\n      setFoils(products);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load foils');\n      console.error('Error loading foils:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadFoils();\n  }, []);\n\n  const refreshFoils = () => {\n    loadFoils();\n  };\n\n  return {\n    foils,\n    loading,\n    error,\n    refreshFoils\n  };\n} ","import { useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useSearchFoils(foils: BaseProduct[], searchQuery: string) {\n  const searchedFoils = useMemo(() => {\n    if (!searchQuery.trim()) {\n      return foils;\n    }\n\n    const query = searchQuery.toLowerCase().trim();\n    return foils.filter(foil => {\n      const searchableFields = [\n        foil.brand,\n        foil.model,\n        foil.series,\n        foil.specs.area.toString(),\n        foil.specs.wingspan.toString(),\n        foil.specs.aspectRatio.toString(),\n      ];\n\n      return searchableFields.some(field => \n        field.toLowerCase().includes(query)\n      );\n    });\n  }, [foils, searchQuery]);\n\n  return { searchedFoils };\n} ","import { useState, useMemo } from 'react';\nimport { BaseProduct } from '../types/scraper';\nimport { FilterOptions } from '../types/filters';\n\nexport function useFilteredFoils(foils: BaseProduct[]) {\n  const [filters, setFilters] = useState<FilterOptions>({\n    brands: [],\n    series: [],\n    type: null,\n  });\n\n  const filterOptions = useMemo(() => {\n    const brands = Array.from(new Set(foils.map(foil => foil.brand)));\n    const allSeries = Array.from(new Set(foils.map(foil => foil.series)));\n    const types = ['front', 'tail'];\n\n    // Create brandSeries mapping\n    const brandSeries = brands.reduce((acc, brand) => {\n      acc[brand] = Array.from(new Set(\n        foils\n          .filter(foil => foil.brand === brand)\n          .map(foil => foil.series)\n      ));\n      return acc;\n    }, {} as Record<string, string[]>);\n\n    // Filter foils based on selected type\n    const typeFilteredFoils = filters.type \n      ? foils.filter(foil => foil.type === filters.type)\n      : foils;\n\n    // Get series based on type-filtered foils\n    const typeFilteredSeries = Array.from(new Set(typeFilteredFoils.map(foil => foil.series)));\n\n    // Filter series based on selected brands and type\n    const series = filters.brands.length > 0\n      ? Array.from(new Set(\n          typeFilteredFoils\n            .filter(foil => filters.brands.includes(foil.brand))\n            .map(foil => foil.series)\n        ))\n      : typeFilteredSeries;\n\n    return {\n      brands,\n      series,\n      types,\n      brandSeries,\n    };\n  }, [foils, filters.brands, filters.type]);\n\n  const filteredFoils = useMemo(() => {\n    return foils.filter(foil => {\n      const brandMatch = filters.brands.length === 0 || filters.brands.includes(foil.brand);\n      const seriesMatch = filters.series.length === 0 || filters.series.includes(foil.series);\n      const typeMatch = !filters.type || foil.type === filters.type;\n\n      return brandMatch && seriesMatch && typeMatch;\n    });\n  }, [foils, filters]);\n\n  return {\n    filters,\n    setFilters,\n    filteredFoils,\n    filterOptions,\n  };\n} ","import { useState, useCallback } from 'react';\nimport { BaseProduct } from '../types/scraper';\n\nexport function useComparison() {\n  const [comparisonMode, setComparisonMode] = useState(false);\n  const [selectedFoils, setSelectedFoils] = useState<BaseProduct[]>([]);\n\n  const getFoilIdentifier = (foil: BaseProduct) => {\n    return foil.id || `${foil.brand}-${foil.model}`.toLowerCase().replace(/\\s+/g, '-');\n  };\n\n  const setComparisonModeOn = useCallback(() => {\n    setComparisonMode(true);\n    setSelectedFoils([]);\n  }, []);\n\n  const setComparisonModeOff = useCallback(() => {\n    setComparisonMode(false);\n    setSelectedFoils([]);\n  }, []);\n\n  const toggleFoilSelection = useCallback((foil: BaseProduct) => {\n    if (!comparisonMode) return;\n    \n    setSelectedFoils(prev => {\n      const foilId = getFoilIdentifier(foil);\n      const isCurrentlySelected = prev.some(f => getFoilIdentifier(f) === foilId);\n      \n      if (isCurrentlySelected) {\n        return prev.filter(f => getFoilIdentifier(f) !== foilId);\n      } else {\n        return [...prev, foil];\n      }\n    });\n  }, [comparisonMode]);\n\n  const isSelected = useCallback((foil: BaseProduct) => {\n    const foilId = getFoilIdentifier(foil);\n    return selectedFoils.some(f => getFoilIdentifier(f) === foilId);\n  }, [selectedFoils]);\n\n  return {\n    comparisonMode,\n    selectedFoils,\n    setComparisonModeOn,\n    setComparisonModeOff,\n    toggleFoilSelection,\n    isSelected,\n  };\n} ","import React from 'react';\nimport { ScrollView, Text, StyleSheet, View } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nexport const PrivacyPolicy = () => {\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.content}>\n        <Text style={styles.title}>Privacy Policy</Text>\n        <Text style={styles.lastUpdated}>Last Updated: February 2025</Text>\n        \n        <View style={styles.section}>\n          <Text style={styles.heading}>1. Information We Collect</Text>\n          <Text style={styles.text}>\n            FoilQuiver collects minimal user data. We use Plausible Analytics to collect anonymous usage statistics. \n            We do not use cookies or collect any personally identifiable information.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>2. How We Use Information</Text>\n          <Text style={styles.text}>\n            Anonymous usage data helps us understand how users interact with our site and improve our services.\n            We do not sell or share any user data with third parties.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>3. Data Sources</Text>\n          <Text style={styles.text}>\n            Product information is collected from publicly available manufacturer websites. \n            We make every effort to ensure accuracy but recommend verifying specifications with manufacturers.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>4. Contact Us</Text>\n          <Text style={styles.text}>\n            For privacy-related questions, please contact us at sungho@sparkmindbody.com\n          </Text>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  content: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  lastUpdated: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 24,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  heading: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 12,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n  },\n}); ","import React from 'react';\nimport { ScrollView, Text, StyleSheet, View } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nexport const TermsOfService = () => {\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.content}>\n        <Text style={styles.title}>Terms of Service</Text>\n        <Text style={styles.lastUpdated}>Last Updated: February 2025</Text>\n        \n        <View style={styles.section}>\n          <Text style={styles.heading}>1. Acceptance of Terms</Text>\n          <Text style={styles.text}>\n            By accessing and using FoilQuiver, you accept and agree to be bound by these Terms of Service.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>2. Use License</Text>\n          <Text style={styles.text}>\n            FoilQuiver provides product comparison information for personal, non-commercial use.\n            All content is provided \"as is\" without warranty of any kind.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>3. Disclaimer</Text>\n          <Text style={styles.text}>\n            While we strive for accuracy, we cannot guarantee the completeness or accuracy of product information.\n            Always verify specifications with manufacturers before making purchase decisions.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.heading}>4. Limitations</Text>\n          <Text style={styles.text}>\n            We shall not be liable for any damages arising from the use of FoilQuiver.\n            Product prices and specifications are subject to change without notice.\n          </Text>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  content: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  lastUpdated: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 24,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  heading: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 12,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n  },\n}); ","import React, { useState } from 'react';\nimport { ScrollView, Text, StyleSheet, View, TextInput, TouchableOpacity, Alert } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nexport const Contact = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = () => {\n    if (!name.trim() || !email.trim() || !message.trim()) {\n      Alert.alert('Error', 'Please fill in all fields');\n      return;\n    }\n\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      Alert.alert('Error', 'Please enter a valid email address');\n      return;\n    }\n\n    // Here you would typically send the form data to your backend\n    // For now, we'll just show a success message\n    Alert.alert(\n      'Success',\n      'Thank you for your message! We will get back to you soon.',\n      [\n        {\n          text: 'OK',\n          onPress: () => {\n            setName('');\n            setEmail('');\n            setMessage('');\n          },\n        },\n      ]\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.content}>\n        <Text style={styles.title}>Contact Us</Text>\n        <Text style={styles.subtitle}>\n          FoilQuiver is still in very early development. Let me know if you have any feedback or feature requests!\n        </Text>\n\n        <View style={styles.form}>\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Name</Text>\n            <TextInput\n              style={styles.input}\n              value={name}\n              onChangeText={setName}\n              placeholder=\"Enter your name\"\n              placeholderTextColor=\"#999\"\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Email</Text>\n            <TextInput\n              style={styles.input}\n              value={email}\n              onChangeText={setEmail}\n              placeholder=\"Enter your email\"\n              placeholderTextColor=\"#999\"\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Message</Text>\n            <TextInput\n              style={[styles.input, styles.messageInput]}\n              value={message}\n              onChangeText={setMessage}\n              placeholder=\"Type your message here\"\n              placeholderTextColor=\"#999\"\n              multiline\n              numberOfLines={4}\n              textAlignVertical=\"top\"\n            />\n          </View>\n\n          <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\n            <Text style={styles.submitButtonText}>Send Message</Text>\n          </TouchableOpacity>\n\n          <View style={styles.section}>\n            <Text style={styles.alternativeContact}>\n              Alternatively, you can email me directly at:{'\\n'}\n              sungho@sparkmindbody.com\n            </Text>\n          </View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  content: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 24,\n    lineHeight: 24,\n  },\n  form: {\n    marginTop: 20,\n  },\n  inputContainer: {\n    marginBottom: 20,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 8,\n    color: '#333',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    backgroundColor: '#fafafa',\n  },\n  messageInput: {\n    height: 120,\n    textAlignVertical: 'top',\n  },\n  submitButton: {\n    backgroundColor: '#007AFF',\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 20,\n  },\n  submitButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  section: {\n    marginTop: 32,\n    marginBottom: 24,\n  },\n  alternativeContact: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#333',\n    textAlign: 'center',\n  },\n}); ","import React from 'react';\nimport { View, TextInput, Pressable, Text, StyleSheet } from 'react-native';\n\ninterface SearchBarProps {\n  value: string;\n  onChangeText: (text: string) => void;\n  onClear: () => void;\n  placeholder?: string;\n}\n\nexport function SearchBar({\n  value,\n  onChangeText,\n  onClear,\n  placeholder = 'Search foils...'\n}: SearchBarProps) {\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        value={value}\n        onChangeText={onChangeText}\n        placeholder={placeholder}\n        placeholderTextColor=\"#999\"\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n      />\n      {value.length > 0 && (\n        <Pressable\n          style={styles.clearButton}\n          onPress={onClear}\n        >\n          <Text style={styles.clearButtonText}>✕</Text>\n        </Pressable>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#f0f0f0',\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    marginHorizontal: 16,\n    marginVertical: 8,\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    fontSize: 16,\n    color: '#333',\n  },\n  clearButton: {\n    padding: 8,\n  },\n  clearButtonText: {\n    color: '#999',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n}); ","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport BrowseScreen from '../screens/BrowseScreen';\nimport { PrivacyPolicy } from '../screens/legal/PrivacyPolicy';\nimport { TermsOfService } from '../screens/legal/TermsOfService';\nimport { Contact } from '../screens/legal/Contact';\nimport { RootStackParamList } from '../types/navigation';\nimport { SearchBar } from '../components/SearchBar';\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\ninterface AppNavigatorProps {\n  searchQuery: string;\n  onSearch: (text: string) => void;\n}\n\nexport const AppNavigator = ({ searchQuery, onSearch }: AppNavigatorProps) => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"Browse\" \n        component={BrowseScreen}\n        initialParams={{ searchQuery }}\n        options={{\n          headerTitle: '',\n          headerLeft: () => (\n            <View style={styles.headerContainer}>\n              <Text style={styles.headerTitle}>FoilQuiver</Text>\n              <View style={styles.searchBarContainer}>\n                <SearchBar \n                  value={searchQuery}\n                  onChangeText={onSearch}\n                  onClear={() => onSearch('')}\n                />\n              </View>\n            </View>\n          ),\n          headerStyle: {\n            backgroundColor: '#f4f4f4',\n          },\n        }}\n      />\n      <Stack.Screen \n        name=\"PrivacyPolicy\" \n        component={PrivacyPolicy}\n        options={{\n          title: 'Privacy Policy',\n          headerStyle: {\n            backgroundColor: '#f4f4f4',\n          },\n        }}\n      />\n      <Stack.Screen \n        name=\"TermsOfService\" \n        component={TermsOfService}\n        options={{\n          title: 'Terms of Service',\n          headerStyle: {\n            backgroundColor: '#f4f4f4',\n          },\n        }}\n      />\n      <Stack.Screen \n        name=\"Contact\" \n        component={Contact}\n        options={{\n          title: 'Contact Us',\n          headerStyle: {\n            backgroundColor: '#f4f4f4',\n          },\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n    paddingRight: 16,\n    paddingLeft: 16,\n  },\n  headerTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginRight: 16,\n  },\n  searchBarContainer: {\n    flex: 1,\n  },\n}); ","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import React, { useState, useRef } from 'react';\nimport { NavigationContainer, NavigationContainerRef } from '@react-navigation/native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { RootStackParamList } from './src/types/navigation';\nimport { ErrorBoundary } from './src/components/ErrorBoundary';\nimport { AppNavigator } from './src/navigation/AppNavigator';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const navigationRef = useRef<NavigationContainerRef<RootStackParamList>>(null);\n\n  const handleSearch = (text: string) => {\n    setSearchQuery(text);\n    if (navigationRef.current) {\n      navigationRef.current.setParams({ searchQuery: text });\n    }\n  };\n\n  return (\n    <ErrorBoundary>\n      <SafeAreaProvider>\n        <NavigationContainer ref={navigationRef}>\n          <AppNavigator \n            searchQuery={searchQuery}\n            onSearch={handleSearch}\n          />\n        </NavigationContainer>\n      </SafeAreaProvider>\n    </ErrorBoundary>\n  );\n} ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [401], () => (__webpack_require__(6417)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ErrorBoundary","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","concat","state","hasError","error","_inherits","_createClass","key","value","errorInfo","console","_this$state$error","this","_jsxs","View","style","styles","container","children","_jsx","Text","text","errorText","message","props","Component","StyleSheet","create","flex","justifyContent","alignItems","padding","fontSize","marginBottom","color","ProductService","_getAllProducts","_asyncToGenerator","isWeb","response","fetch","ok","products","json","log","warn","allProducts","brand","require","toLowerCase","replace","push","apply","_toConsumableArray","cached","AsyncStorage","getItem","JSON","parse","useSortedFoils","foils","_useState","useState","field","direction","_useState2","_slicedToArray","sortOption","setSortOption","sortedFoils","useMemo","sort","a","b","valueA","valueB","price","specs","multiplier","localeCompare","FilterPanel","_ref","filters","filterOptions","onBrandFilter","onSeriesFilter","onTypeFilter","isExpanded","setIsExpanded","_useState3","Animated","Value","animation","_useState5","_useState6","contentHeight","setContentHeight","animatedHeight","interpolate","inputRange","outputRange","Pressable","onPress","toValue","spring","useNativeDriver","start","header","headerText","Ionicons","name","size","content","height","scrollContainer","onLayout","event","nativeEvent","layout","filterSection","filterRow","filterTitle","filterButtons","filterButton","type","filterButtonActive","filterButtonText","filterButtonTextActive","brands","includes","series","backgroundColor","borderBottomWidth","borderBottomColor","flexDirection","fontWeight","overflow","position","left","right","borderTopWidth","borderTopColor","marginRight","minWidth","paddingTop","flexWrap","gap","paddingHorizontal","paddingVertical","borderRadius","borderWidth","borderColor","FilterControls","_ref$selectedBrands","selectedBrands","_ref$selectedSeries","selectedSeries","_ref$selectedTypes","selectedTypes","onFilterChange","newBrands","filter","newSeries","s","MEASUREMENTS","METRIC","IMPERIAL","formatMeasurement","unit","colors","BORDER","LIGHT_GRAY","TEXT_PRIMARY","SELECTED_ROW","HOVER_ROW","LINK","spacing","SMALL","MEDIUM","LARGE","XLARGE","FoilsTable","onSort","comparisonMode","isSelected","onFoilSelect","columnWidths","baseWidths","model","wingspan","area","aspectRatio","cord","link","forEach","foil","_foil$brand","_foil$series","_foil$model","brandWidth","Math","max","seriesWidth","modelWidth","row","headerRow","cell","textCell","numericCell","brandCell","width","flexShrink","flexGrow","seriesCell","modelCell","wingspanCell","areaCell","arCell","cordCell","typeCell","priceCell","linkCell","numericText","textAlign","headerContent","headerNumericContent","sortIndicator","selectable","cursor","selectedRow","cellContent","textDecorationLine","headerCell","_objectSpread","headerBackground","small","border","getSortIndicator","renderHeaderContent","isNumeric","undefined","ScrollView","horizontal","_foil$specs$aspectRat","rowKey","selected","toFixed","charAt","toUpperCase","slice","window","open","sourceUrl","WebWrapper","bottom","zIndex","pointerEvents","display","paddingRight","ComparisonControls","_ref2","selectedFoils","onCompareStart","onCompareSelected","onExitCompare","_ref2$isComparisonVie","isComparisonView","comparisonBar","_Fragment","selectionText","buttonGroup","button","buttonDisabled","disabled","buttonText","cancelButton","floatingButton","alignSelf","boxShadow","ComparisonView","_useSortedFoils","onClose","onCompare","prev","LoadingIndicator","ActivityIndicator","ErrorMessage","onRetry","pressed","retryButton","retryButtonPressed","retryButtonText","margin","Footer","navigation","useNavigation","handleNavigation","screen","navigate","footer","copyright","separator","linkContainer","accessibilityRole","_ref3","opacity","BrowseScreen","_route$params","route","_useFoils","setFoils","_useState4","loading","setLoading","setError","loadFoils","getAllProducts","err","useEffect","refreshFoils","useFoils","searchQuery","params","_useSearchFoils","searchedFoils","trim","query","toString","some","useSearchFoils","_useFilteredFoils","setFilters","from","Set","brandSeries","reduce","acc","typeFilteredFoils","typeFilteredSeries","types","filteredFoils","brandMatch","seriesMatch","typeMatch","useFilteredFoils","_useComparison","setComparisonMode","setSelectedFoils","getFoilIdentifier","setComparisonModeOn","useCallback","setComparisonModeOff","toggleFoilSelection","foilId","f","useComparison","setIsComparisonView","_route$params2","setParams","scrollView","filterType","values","_defineProperty","PrivacyPolicy","SafeAreaView","title","lastUpdated","section","heading","lineHeight","TermsOfService","Contact","setName","email","setEmail","setMessage","subtitle","form","inputContainer","label","TextInput","input","onChangeText","placeholder","placeholderTextColor","keyboardType","autoCapitalize","messageInput","multiline","numberOfLines","textAlignVertical","TouchableOpacity","submitButton","test","Alert","alert","submitButtonText","alternativeContact","marginTop","SearchBar","onClear","_ref$placeholder","autoCorrect","clearButton","clearButtonText","marginHorizontal","marginVertical","Stack","createNativeStackNavigator","AppNavigator","onSearch","Navigator","Screen","component","initialParams","options","headerTitle","headerLeft","headerContainer","searchBarContainer","headerStyle","paddingLeft","registerRootComponent","setSearchQuery","navigationRef","useRef","SafeAreaProvider","NavigationContainer","ref","current","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","n","getter","__esModule","d","definition","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}